user denza;
worker_processes auto;
error_log /home/denza/nginx_logs/error.log warn;

events {
    worker_connections 4096;      # Увеличено для высокой нагрузки
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Зоны для лимитов по IP
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Кэширование прокси (для уменьшения нагрузки на backend)
    proxy_cache_path /home/denza/nginx_cache levels=1:2 keys_zone=backend_cache:100m max_size=2g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_lock on;
    proxy_cache_revalidate on;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml image/svg+xml;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_vary on;

    server {
        listen 3200;
        server_name 185.244.50.60;
        root /home/denza/First_Project_NodeJs/project/client/public;

        client_max_body_size 100M;
        index nothing.html;

        # Ограничения нагрузки
        limit_req zone=req_limit_per_ip burst=100 nodelay;    # Высокий burst для нагрузочного теста
        limit_conn conn_limit_per_ip 200;                     # Максимум 200 одновременных соединений с одного IP

        # Локация корня (динамические запросы)
        location = / {
            limit_req zone=req_limit_per_ip burst=50 delay=5;

            proxy_pass http://backend;
            proxy_cache backend_cache;

            proxy_cache_bypass 1;
            proxy_no_cache 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Cache-Status $upstream_cache_status;
            add_header X-RateLimit-Limit "100";
        }

        # Локация статики
        location / {
            try_files $uri $uri/ @backend;
            expires 1d;
            add_header Cache-Control "public, immutable";

            location ~* \.(js|mjs)$ {
                add_header Content-Type application/javascript;
            }
        }

        # Локация для SSR и API
        location @backend {
            limit_req zone=req_limit_per_ip burst=80 delay=10;

            proxy_pass http://backend;
            proxy_cache backend_cache;

            proxy_cache_bypass 1;
            proxy_no_cache 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update off;

            if ($request_uri ~* "^/api") {
                set $no_cache 1;
            }
            proxy_cache_bypass $no_cache;
            proxy_no_cache $no_cache;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Cache-Status $upstream_cache_status;
            add_header X-RateLimit-Limit "100";
        }

        # Локация загрузок
        location /uploads/ {
            limit_req zone=req_limit_per_ip burst=50;

            alias /home/denza/First_Project_NodeJs/project/upload/;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    upstream backend {
        server 127.0.0.1:3100 max_conns=100;
        server 127.0.0.1:3110 backup max_conns=80;
    }
}
