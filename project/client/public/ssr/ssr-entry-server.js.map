{"version":3,"file":"ssr-entry-server.js","sources":["../../source/constants/apiRoutes.js","../../source/utils/postApi.js","../../source/utils/token.js","../../source/utils/isEnglistText.js","../../source/redux/reducers/userAuth/userAuthSlice.js","../../source/redux/store.js","../../source/components/routes/SafeNavigate.jsx","../../source/components/common/LoadingSpinner/LoadingSpinner.jsx","../../source/routes/ProtectedRoute.jsx","../../source/components/Auth/AuthForm/AuthForm.jsx","../../source/components/Auth/UnverifiedNotice/UnverifiedNotice.jsx","../../source/utils/validateAuthForm.js","../../source/hooks/usePageTitle.jsx","../../source/pages/app/auth/AuthPage.jsx","../../source/elements/svgIcon.jsx","../../source/pages/app/error/ErrorPage.jsx","../../source/components/App/AppNavbar.jsx","../../source/layouts/AppLayout.jsx","../../source/pages/app/posts/NewsListPage.jsx","../../source/pages/app/posts/NewsItemPage.jsx","../../source/pages/app/feed/FeedPage.jsx","../../source/layouts/NewsLayout.jsx","../../source/layouts/UserLayout.jsx","../../source/pages/app/user/UserSettingsPage.jsx","../../source/layouts/AuthLayout.jsx","../../source/routes/routes.jsx","../../source/routes/PagesRouter.jsx","../../source/App.jsx","../../source/entry-server.jsx"],"sourcesContent":["export const API_ROUTES = {\r\n    user: {\r\n        login: \"/api/user/login\",\r\n        register: \"/api/user/register\",\r\n        resendVerification: \"/api/user/resend-verification\",\r\n        validToken: \"/api/user/validate-tokens\",\r\n        logout: \"/api/user/logout\"\r\n    },\r\n};","\"use strict\";\n\nconst isServer = typeof window === \"undefined\";\nconst API_BASE_URL = isServer ? process.env.API_BASE_URL || \"http://localhost:3100\" : \"\";\nconst PROXY_API_PATH = import.meta.env.VITE_PROXY_API_PATH || \"\";\n\n/**\n * Универсальная функция для POST-запросов к API.\n *\n * @param {string} uri - URI эндпоинта (относительно PROXY_API_PATH)\n * @param {object|FormData|string|null} [data={}] - Данные для отправки в теле запроса\n * @param {object} [options={}] - Дополнительные опции\n * @param {string} [options.accept=\"application/json\"] - Значение заголовка Accept\n * @param {object} [options.headers={}] - Дополнительные заголовки\n * @param {string} [options.contentType] - Явно указать Content-Type (по умолчанию зависит от data)\n * @returns {Promise<any>} - Возвращает распарсенный ответ (json, text, blob)\n * @throws {Error} - В случае ошибки содержит статус и тело ответа\n */\n\nexport const postApi = async (uri, data = {}, options = {}) => {\n    const {\n        accept = \"application/json\",\n        headers = {},\n        contentType,\n    } = options;\n\n    // Определяем заголовки\n    const fetchHeaders = new Headers({\n        Accept: accept,\n        ...headers,\n    });\n\n    // Определяем Content-Type, если не передан явно\n    let body;\n\n    if (data instanceof FormData) {\n        // Для FormData Content-Type не нужно ставить, браузер сам поставит с boundary\n        body = data;\n\n    } else if (data instanceof Blob || data instanceof File) {\n        body = data;\n        // Если contentType передан явно, ставим его, иначе не ставим Content-Type,\n        // чтобы браузер сам поставил (обычно File содержит свой тип)\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            // Не ставим Content-Type, браузер сам поставит\n        }\n    } else if (typeof data === \"string\") {\n\n        // Если передана строка, отправляем как есть\n        body = data;\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            fetchHeaders.set(\"Content-Type\", \"text/plain;charset=UTF-8\");\n        }\n    } else if (data && typeof data === \"object\") {\n        // Для объекта по умолчанию JSON\n        body = JSON.stringify(data);\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            fetchHeaders.set(\"Content-Type\", \"application/json;charset=UTF-8\");\n        }\n    } else {\n        // Если data null или undefined\n        body = null;\n    }\n\n    const response = await fetch(`${API_BASE_URL}${PROXY_API_PATH}${uri}`, {\n        method: \"POST\",\n        headers: fetchHeaders,\n        body,\n    });\n\n    const contentTypeResponse = response.headers.get(\"Content-Type\") || \"\";\n\n    let responseBody;\n    if (contentTypeResponse.includes(\"application/json\")) {\n        responseBody = await response.json();\n    } else if (contentTypeResponse.startsWith(\"text/\")) {\n        responseBody = await response.text();\n    } else if (\n        contentTypeResponse.includes(\"application/octet-stream\") ||\n        contentTypeResponse.includes(\"application/pdf\") ||\n        contentTypeResponse.startsWith(\"image/\") ||\n        contentTypeResponse.startsWith(\"audio/\") ||\n        contentTypeResponse.startsWith(\"video/\")\n    ) {\n        responseBody = await response.blob();\n    } else {\n        // fallback\n        responseBody = await response.text();\n    }\n\n    if (import.meta.env.DEV) {\n        console.log(\"Ответ запроса\", responseBody);\n    }\n\n    if (!response.ok || (responseBody && responseBody.type === \"error\")) {\n        let errorMessage = response.statusText || \"Неизвестная ошибка\";\n\n        if (responseBody && typeof responseBody === \"object\") {\n            if (responseBody.message) {\n                errorMessage = responseBody.message;\n            }\n\n            const error = new Error(errorMessage);\n            error.status = response.status || responseBody.status || 500;\n\n            for (const [key, value] of Object.entries(responseBody)) {\n                if (key !== 'message') {\n                    error[key] = value;\n                }\n            }\n\n            throw error;\n        } else {\n            const error = new Error(errorMessage);\n            error.status = response.status || 500;\n            throw error;\n        }\n    }\n    return responseBody;\n};\n\n/* Использование:\ntry {\n    const data = { name: \"Иван\", age: 30 };\n    const result = await postApi(\"/users/create\", data);\n    console.log(\"Ответ сервера:\", result);\n} catch (err) {\n    console.error(\"Ошибка запроса:\", err.status, err.message, err.body, error.errors);\n}\n*/","export const decodeJwt = (token) => {\r\n    try {\r\n        const payloadBase64 = token.split('.')[1];\r\n        const payloadJson = atob(payloadBase64.replace(/-/g, '+').replace(/_/g, '/'));\r\n        return JSON.parse(payloadJson);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const isTokenValid = (token, expireThreshold = 300) => {\r\n    // истёк ли токен и срок действия не меньше 5 минут\r\n    if (!token) return false;\r\n\r\n    const payload = decodeJwt(token);\r\n    if (!payload?.exp) return false;\r\n\r\n    const currentTime = Date.now() / 1000;\r\n    const expiresIn = payload.exp - currentTime;\r\n\r\n    return expiresIn > expireThreshold;\r\n};","const isEnglishText = (text) => {\r\n    // Регулярное выражение для проверки английских символов\r\n    return /^[a-zA-Z0-9\\s\\.,!?;:'\"@#$%^&*()_+\\-=\\[\\]{}<>\\\\\\/]+$/.test(text);\r\n};\r\n\r\nexport default isEnglishText;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { API_ROUTES } from \"../../../constants/apiRoutes\";\nimport { postApi } from \"../../../utils/postApi\";\nimport { isTokenValid } from \"../../../utils/token\";\nimport isEnglishText from \"../../../utils/isEnglistText\";\n\nconst setErrMsg = (err) => {\n    return err && !isEnglishText(err) ? err : \"Ошибка сервера. Попробуйте позже.\"\n}\n\nexport const regUser = createAsyncThunk(\"userAuth/regUser\", async (data, thunkAPI) => {\n    try {\n        return await postApi(API_ROUTES.user.register, data);\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка регистрации. Попробуйте позже.\");\n    }\n});\n\nexport const loginUser = createAsyncThunk(\"userAuth/loginUser\", async (data, thunkAPI) => {\n    try {\n        return await postApi(API_ROUTES.user.login, data);\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка авторизации. Попробуйте позже.\");\n    }\n});\n\nexport const resendVerification = createAsyncThunk(\"userAuth/resendVerification\", async (data, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const tempAuthToken = state.userAuth?.tempAuthToken || localStorage.getItem(\"tempAuthToken\");\n        if (!tempAuthToken) {\n            return thunkAPI.rejectWithValue(\"Ошибка отправки письма активации. Авторизуйтесь снова.\");\n        }\n        return await postApi(API_ROUTES.user.resendVerification, { tempAuthToken });\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Время сессии истекло. Авторизуйтесь снова.\");\n    }\n});\n\nexport const checkToken = createAsyncThunk('userAuth/checkToken', async (_, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n\n        const accessToken = state.userAuth.accessToken;\n        if (accessToken && isTokenValid(accessToken)) {\n            return { accessToken };\n        }\n        return await thunkAPI.dispatch(refreshToken()).unwrap();\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка авторизации. Авторизуйтесь снова.\");\n    }\n});\n\nexport const refreshToken = createAsyncThunk(\"userAuth/refreshToken\", async (data, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const accessToken = state.userAuth?.accessToken || '';\n        return await postApi(\n            API_ROUTES.user.validToken,\n            {},\n            {\n                // Для SSR передаем куки из запроса\n                headers: {\n                    Cookie: typeof window === 'undefined'\n                        ? thunkAPI.extra?.req.headers.cookie || ''\n                        : '',\n                    Authorization: `Bearer ${accessToken}`,\n                }\n            }\n        );\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Время сессии истекло. Авторизуйтесь снова.\");\n    }\n});\n\nexport const logoutUser = createAsyncThunk(\"userAuth/logoutUser\", async (_, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const accessToken = state.userAuth?.accessToken || '';\n        return await postApi(\n            API_ROUTES.user.logout,\n            {accessToken},\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                }\n            }\n        );\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка выхода из аккаунта. Попробуйте позже.\");\n    }\n});\n\nconst initialState = {\n    user: \"\", // имя пользователя\n    isAuth: false, // если пользователь успешно авторизован и активирован\n    authCheckStatus: 'idle', // состояние автоматической авторизации 'idle' | 'pending' | 'succeeded' | 'failed'\n    errAuth: null, // ошибки\n    registerStatus: \"idle\", // состояние запроса regUser: 'idle' | 'pending' | 'registered' | 'error'\n    resendActStatus: \"idle\", // состояние запроса resendVerification: 'idle' | 'pending' | 'shipped' | 'error'\n    loginStatus: \"idle\", // состояние запроса loginUser: 'idle' | 'pending' | 'authenticated' | 'unactivated' | 'error' | 'logout'\n    tempAuthToken: null, // временный токен для отправки активации\n    accessToken: null, // токен доступа - даётся в статусе authenticated\n};\n\nexport const userAuthSlice = createSlice({\n    name: \"userAuth\",\n    initialState,\n    reducers: {\n        setUserData: (state, action) => {\n            state.user = action.payload;\n        },\n        setAuth: (state, action) => {\n            state.isAuth = action.payload;\n        },\n        clearError: (state, action) => {\n            if (action.payload) state.errAuth = initialState.errAuth;\n        },\n        setAuthToken: (state, action) => {\n            if (action.payload !== state.tempAuthToken && typeof action.payload === \"string\") {\n                state.tempAuthToken = action.payload;\n            }\n        },\n        setAccessToken(state, action) {\n            state.accessToken = action.payload;\n        },\n        setResendCooldown: (state, action) => {\n            state.resendCooldown = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            // --- regUser ---\n            .addCase(regUser.pending, (state) => {\n                state.registerStatus = \"pending\";\n                state.resendActStatus = initialState.resendActStatus;\n                state.loginStatus = initialState.loginStatus;\n                state.errAuth = null;\n            })\n            .addCase(regUser.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.registerStatus = \"registered\";\n                    if (typeof action.payload.data?.tempAuthToken === \"string\") {\n                        state.tempAuthToken = action.payload.data?.tempAuthToken;\n                        localStorage.setItem(\"tempAuthToken\", action.payload.data?.tempAuthToken);\n                    }\n                }\n            })\n            .addCase(regUser.rejected, (state, action) => {\n                state.registerStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n            // --- loginUser ---\n            .addCase(loginUser.pending, (state) => {\n                state.loginStatus = \"pending\";\n                state.resendActStatus = initialState.resendActStatus;\n                state.registerStatus = initialState.registerStatus;\n                state.errAuth = null;\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.loginStatus = \"authenticated\";\n                    state.isAuth = true;\n                    state.tempAuthToken = initialState.tempAuthToken;\n                    localStorage.removeItem(\"tempAuthToken\");\n                    state.user = action.payload.data?.username || \"\";\n                    state.accessToken = action.payload.data?.accessToken;\n                }\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                if (action.payload?.code === \"ACCOUNT_NOT_ACTIVATED\") {\n                    state.loginStatus = \"unactivated\";\n                    if (typeof action.payload.data?.tempAuthToken === \"string\") {\n                        state.tempAuthToken = action.payload.data?.tempAuthToken;\n                        localStorage.setItem(\"tempAuthToken\", action.payload.data?.tempAuthToken);\n                    }\n                } else {\n                    state.loginStatus = \"error\";\n                    const bodyError = action.payload.data?.errors || action.payload?.message;\n                    state.errAuth = setErrMsg(bodyError);\n                }\n            })\n            // --- resendVerification ---\n            .addCase(resendVerification.pending, (state) => {\n                state.resendActStatus = \"pending\";\n                state.errAuth = null;\n            })\n            .addCase(resendVerification.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.resendActStatus = \"shipped\";\n                }\n            })\n            .addCase(resendVerification.rejected, (state, action) => {\n                state.resendActStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n            // --- checkToken ---\n            .addCase(checkToken.pending, (state) => {\n                state.authCheckStatus = 'pending';\n            })\n            .addCase(checkToken.fulfilled, (state) => {\n                state.isAuth = true;\n                state.authCheckStatus = 'succeeded';\n            })\n            .addCase(checkToken.rejected, (state) => {\n                state.accessToken = null;\n                state.isAuth = false;\n                state.authCheckStatus = 'failed';\n            })\n            // --- refreshToken ---\n            .addCase(refreshToken.pending, (state) => {\n                state.errAuth = null;\n                state.authCheckStatus = 'pending';\n            })\n            .addCase(refreshToken.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.loginStatus = \"authenticated\";\n                    state.authCheckStatus = 'succeeded';\n                    state.isAuth = true;\n                    state.user = action.payload.data?.username || \"\";\n                    if (typeof action.payload.data?.accessToken === \"string\" && action.payload.data?.isNewToken) {\n                        state.accessToken = action.payload.data?.accessToken;\n                    }\n                }\n            })\n            .addCase(refreshToken.rejected, (state, action) => {\n                state.loginStatus = \"error\";\n                state.authCheckStatus = 'failed';\n                state.isAuth = false;\n                state.accessToken = null;\n                //const bodyError = action.payload.data?.errors || action.payload?.message;\n                //state.errAuth = setErrMsg(bodyError);\n            })\n            // --- Logout ---\n            .addCase(logoutUser.fulfilled, (state) => {\n                Object.assign(state, initialState);\n                state.loginStatus = 'logout';\n            })\n            .addCase(logoutUser.rejected, (state, action) => {\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n    },\n});\n\nexport const { setUserData, setAuth, clearError, setAuthToken, authUser, setAccessToken, setResendCooldown, resetVerificationState } = userAuthSlice.actions;\nexport default userAuthSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport userAuthSlice from \"./reducers/userAuth/userAuthSlice\";\r\n\r\nexport function createStore(preloadedState = {}, serverReq = null) {\r\n    return configureStore({\r\n        reducer: {\r\n            userAuth: userAuthSlice,\r\n        },\r\n        preloadedState,\r\n        middleware: (getDefaultMiddleware) =>\r\n            getDefaultMiddleware({\r\n                serializableCheck: false,\r\n                thunk: {\r\n                    extraArgument: { req: serverReq }\r\n                }\r\n            }),\r\n    });\r\n}","import { Navigate } from \"react-router-dom\";\nimport { useSSRContext } from \"../../entry-server\";\n\nexport default function SafeNavigate({ to }) {\n    const context = useSSRContext()\n    if (typeof window === \"undefined\") {\n        context.url = to;\n        return null;\n    }\n    return <Navigate to={to} replace />;\n}","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = () => (\r\n    <div className=\"loading-spinner\">\r\n        <div className=\"spinner\" />\r\n    </div>\r\n);\r\n\r\nexport default LoadingSpinner;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport SafeNavigate from '../components/routes/SafeNavigate';\r\nimport LoadingSpinner from \"../components/common/LoadingSpinner/LoadingSpinner\";\r\nimport { useEffect } from \"react\";\r\nimport { checkToken } from \"../redux/reducers/userAuth/userAuthSlice\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, accessToken, authCheckStatus } = useSelector(state => state.userAuth);\r\n\r\n    useEffect(() => {\r\n        if (accessToken) {\r\n            dispatch(checkToken());\r\n        }\r\n    }, [dispatch, accessToken]);\r\n\r\n    if (authCheckStatus === 'idle' || authCheckStatus === 'pending') {\r\n        return <LoadingSpinner fullScreen />;\r\n    }\r\n\r\n    if (authCheckStatus === 'failed' || !isAuth) {\r\n        return <SafeNavigate to=\"/auth/sign-in\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport \"./AuthForm.css\";\r\n\r\nconst initialState = {\r\n    username: import.meta.env.VITE_AUTH_NAME || \"\",\r\n    email: import.meta.env.VITE_AUTH_EMAIL || \"\",\r\n    password: import.meta.env.VITE_AUTH_PASS || \"\",\r\n    login: import.meta.env.VITE_AUTH_LOGIN || \"\",\r\n};\r\n\r\nfunction generateErrList(err) {\r\n    if (typeof err === \"string\") {\r\n        return <li key={err} className=\"auth__error\">{err}</li>;\r\n    }\r\n\r\n    if (React.isValidElement(err)) {\r\n        return <li className=\"auth__error\">{err}</li>;\r\n    }\r\n\r\n    if (Array.isArray(err)) {\r\n        return err.map((msg) => generateErrList(msg));\r\n    }\r\n\r\n    if (err && typeof err === \"object\") {\r\n        return Object.entries(err).flatMap(([_, value]) =>\r\n            generateErrList(value)\r\n        );\r\n    }\r\n\r\n    return <li className=\"auth__error\">{String(err)}</li>;\r\n}\r\n\r\nfunction AuthForm({ mode = 'login', onSubmit , externalError, validator}) {\r\n    const [form, setForm] = useState(initialState);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validator(mode,\r\n            {\r\n                username: form.username,\r\n                email: form.email,\r\n                password: form.password,\r\n                login: form.login,\r\n            });\r\n\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n        setErrors({});\r\n        if (mode === 'register') {\r\n            onSubmit({\r\n                username: form.username,\r\n                email: form.email,\r\n                password: form.password\r\n            });\r\n        } else {\r\n            onSubmit({\r\n                login: form.login,\r\n                password: form.password\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setForm(initialState);\r\n        setErrors({});\r\n    }, [mode]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"auth__form\">\r\n            <h2 className=\"auth__title\">{mode === 'register' ? 'Регистрация' : 'Авторизация'}</h2>\r\n\r\n            {mode === 'register' ? (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='username'>Ник пользователя</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        value={form.username}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='login'>Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"login\"\r\n                        name=\"login\"\r\n                        value={form.login}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {mode === 'register' && (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"email\"\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"auth__field-box\">\r\n                <label htmlFor=\"password\">Пароль</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"current-password\"\r\n                />\r\n            </div>\r\n\r\n            {(Object.keys(errors).length > 0 || externalError) && (\r\n                <>\r\n                    <hr className=\"auth__divider\" />\r\n                    <ul className=\"auth__errors\">\r\n                        {Object.keys(errors).length > 0 && generateErrList(errors)}\r\n                        {externalError && generateErrList(externalError)}\r\n                    </ul>\r\n                </>\r\n            )}\r\n\r\n            <button type=\"submit\" className=\"auth__button\">\r\n                {mode === 'register' ? 'Зарегистрироваться' : 'Войти'}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default memo(AuthForm);","import { useEffect, useState } from \"react\";\r\nimport \"./UnverifiedNotice.css\";\r\n\r\nexport default function UnverifiedNotice({\r\n    onResend,\r\n    isLoading,\r\n    isSend,\r\n    hasToken,\r\n    error\r\n}) {\r\n    const [cooldown, setCooldown] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (isSend) {\r\n            setCooldown(60);\r\n            const timer = setInterval(() => {\r\n                setCooldown(prev => {\r\n                    if (prev <= 1) {\r\n                        clearInterval(timer);\r\n                        return 0;\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n            return () => clearInterval(timer);\r\n        }\r\n    }, [isSend]);\r\n\r\n    const getButtonState = () => {\r\n        if (!hasToken) {\r\n            return {\r\n                disabled: true,\r\n                text: 'Требуется авторизация',\r\n                hint: 'Время сессии истекло. Авторизуйтесь снова.'\r\n            };\r\n        }\r\n\r\n        if (isLoading) {\r\n            return {\r\n                disabled: true,\r\n                text: 'Отправка...'\r\n            };\r\n        }\r\n\r\n        if (cooldown > 0) {\r\n            return {\r\n                disabled: true,\r\n                text: `Повтор через ${cooldown} сек`\r\n            };\r\n        }\r\n\r\n        if (error) {\r\n            return {\r\n                disabled: false,\r\n                text: 'Повторить отправку',\r\n                hint: error\r\n            };\r\n        }\r\n\r\n        return {\r\n            disabled: false,\r\n            text: 'Отправить письмо повторно'\r\n        };\r\n    };\r\n\r\n    const buttonState = getButtonState();\r\n\r\n    return (\r\n        <div className=\"auth__unverified\">\r\n            <p>Аккаунт не активирован. Проверьте почту и подтвердите регистрацию.</p>\r\n            {buttonState.hint && <p className=\"auth__error-resend\">{buttonState.hint}</p>}\r\n            <button\r\n                type=\"button\"\r\n                onClick={onResend}\r\n                disabled={buttonState.disabled}\r\n                className=\"auth__resend-button\"\r\n            >\r\n                {buttonState.text}\r\n            </button>\r\n        </div>\r\n    );\r\n}","\"use strict\"; // Строгий режим\r\n// ----------------------- JavaScript -----------------------\r\nfunction validate (mode, {username, email, password, login}) {\r\n    // mode = 'register' или 'login'\r\n    const errs = {};\r\n\r\n    const usernameRegex = /^[A-Za-z0-9]{1,20}$/;\r\n    //const loginRegex = /^[A-Za-z0-9]+$/;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{8,}$/;\r\n\r\n    const ERROR_MESSAGES = {\r\n        username: {\r\n            required: \"Введите логин\",\r\n            invalid: \"Логин может содержать только английские буквы и цифры, максимум 20 символов\",\r\n        },\r\n        email: {\r\n            required: \"Введите email\",\r\n            invalid: \"Некорректный email\",\r\n        },\r\n        login: {\r\n            required: \"Введите email\",\r\n            //invalidChars: \"Логин может содержать только латинские буквы и цифры\",\r\n            invalidEmail: \"Некорректный email\",\r\n            tooLong: \"Максимум 50 символов\",\r\n        },\r\n        password: {\r\n            required: \"Введите пароль\",\r\n            invalid: \"Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спецсимвол\",\r\n        },\r\n    };\r\n\r\n    if (mode === 'register') {\r\n        if (!username.trim()) {\r\n            errs.username = ERROR_MESSAGES.username.required;\r\n        } else if (!usernameRegex.test(username)) {\r\n            errs.username = ERROR_MESSAGES.username.invalid;\r\n        }\r\n\r\n        if (!email.trim()) {\r\n            errs.email = ERROR_MESSAGES.email.required;\r\n        } else if (!emailRegex.test(email)) {\r\n            errs.email = ERROR_MESSAGES.email.invalid;\r\n        }\r\n    } else {\r\n        // В режиме login поле login — это только email\r\n        if (!login.trim()) {\r\n            errs.identifier = ERROR_MESSAGES.login.required;\r\n        } else if (login.length > 50) {\r\n            errs.identifier = ERROR_MESSAGES.login.tooLong;\r\n        } else if (!emailRegex.test(login)) {\r\n            errs.identifier = ERROR_MESSAGES.login.invalidEmail;\r\n        }\r\n    }\r\n\r\n    // Валидация поля login, когда логином может быть username или email\r\n    // else {\r\n    //     if (!login.trim()) {\r\n    //         errs.identifier = ERROR_MESSAGES.login.required;\r\n    //     } else if (login.length > 50) {\r\n    //         errs.identifier = ERROR_MESSAGES.login.tooLong;\r\n    //     } else if (login.includes(\"@\")) {\r\n    //         if (!emailRegex.test(login)) {\r\n    //             errs.login = ERROR_MESSAGES.login.invalidEmail;\r\n    //         }\r\n    //     } else {\r\n    //         if (!loginRegex.test(login)) {\r\n    //             errs.login = ERROR_MESSAGES.login.invalidChars;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    if (!password.trim()) {\r\n        errs.password = ERROR_MESSAGES.password.required;\r\n    } else if (mode === 'register' && !passwordRegex.test(password)) {\r\n        errs.password = ERROR_MESSAGES.password.invalid;\r\n    }\r\n\r\n    return errs;\r\n}\r\n\r\nexport default validate;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport function usePageTitle(title) {\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [location, title]);\r\n}","import { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AuthForm from \"../../../components/Auth/AuthForm/AuthForm\";\nimport \"./AuthPage.css\";\nimport UnverifiedNotice from \"../../../components/Auth/UnverifiedNotice/UnverifiedNotice\";\nimport validate from \"../../../utils/validateAuthForm\";\nimport {\n    regUser,\n    loginUser,\n    setAuthToken,\n    clearError,\n    resendVerification,\n} from \"../../../redux/reducers/userAuth/userAuthSlice\";\nimport { memo, useEffect } from \"react\";\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\n\nconst pageTitles = {\n    login: \"Вход в систему\",\n    register: \"Регистрация\",\n    verified: \"Подтверждение email\"\n};\n\nconst metaDescription = {\n    login: \"Войдите в свой аккаунт для доступа к персональным данным\",\n    register: \"Зарегистрируйте новый аккаунт для получения полного доступа\",\n    verified: \"Подтвердите ваш email для завершения регистрации\"\n};\n\nfunction AuthPage({ mode }) {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { tempAuthToken, errAuth, isAuth, registerStatus, loginStatus, resendActStatus } = useSelector((state) => state.userAuth);\n\n    usePageTitle(`${pageTitles[mode]} | ${import.meta.env.VITE_SITE_NAME || \"Messaria\"}`);\n\n    // SEO\n    useEffect(() => {\n        const descriptionMeta = document.querySelector('meta[name=\"description\"]');\n        if (descriptionMeta) {\n            descriptionMeta.content = metaDescription[mode];\n        } else {\n            const meta = document.createElement('meta');\n            meta.name = \"description\";\n            meta.content = metaDescription[mode];\n            document.head.appendChild(meta);\n        }\n\n        // Канонический URL\n        const canonicalUrl = `${window.location.origin}/auth/${mode === 'login' ? 'sign-in' : mode === 'register' ? 'sign-up' : 'verified'}`;\n        let canonicalLink = document.querySelector('link[rel=\"canonical\"]');\n        if (!canonicalLink) {\n            canonicalLink = document.createElement('link');\n            canonicalLink.rel = \"canonical\";\n            document.head.appendChild(canonicalLink);\n        }\n        canonicalLink.href = canonicalUrl;\n\n        dispatch(clearError(true));\n    }, [mode, dispatch]);\n\n    // Обработка авторизации и активации\n    useEffect(() => {\n        if (isAuth) {\n            navigate(\"/feed\");\n        } else if (loginStatus === \"unactivated\") {\n            navigate(\"/auth/verified\");\n        }\n    }, [isAuth, loginStatus]);\n\n    useEffect(() => {\n        if (registerStatus === \"registered\") {\n            navigate(\"/auth/verified\");\n        }\n    }, [registerStatus]);\n\n    const handleSubmit = async (data) => {\n        const action = mode === \"register\" ? regUser(data) : loginUser(data);\n        await dispatch(action);\n    };\n\n    const handleResend = async () => {\n        await dispatch(resendVerification());\n    };\n\n    const handleSwitchMode = () => {\n        dispatch(clearError(true));\n        let to;\n        switch (mode) {\n            case \"register\":\n                to = \"/auth/sign-in\";\n                break;\n            case \"login\":\n                to = \"/auth/sign-up\";\n                break;\n            case \"verified\":\n                to = \"/auth/sign-in\";\n                break;\n            default:\n                to = \"/auth/sign-in\";\n        }\n        navigate(to);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"tempAuthToken\");\n        if (token) dispatch(setAuthToken(token));\n        if (mode === \"verified\" && !token) navigate(\"/auth/sign-in\");\n    }, [mode, dispatch, navigate]);\n\n    const getSchemaMarkup = () => {\n        return {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"WebPage\",\n            \"name\": document.title,\n            \"description\": document.querySelector('meta[name=\"description\"]')?.content,\n            \"url\": window.location.href\n        };\n    };\n\n    return (\n        <>\n            <script type=\"application/ld+json\">\n                {JSON.stringify(getSchemaMarkup())}\n            </script>\n\n            <main className=\"auth__container\" itemScope itemType=\"https://schema.org/WebPage\">\n                <h1 className=\"visually-hidden\">{document.title}</h1>\n\n                {(mode === \"register\" || mode === \"login\") && (\n                    <section itemScope itemType=\"https://schema.org/Form\">\n                        <AuthForm\n                            mode={mode}\n                            onSubmit={handleSubmit}\n                            validator={validate}\n                            externalError={errAuth ? errAuth : \"\"}\n                        />\n                    </section>\n                )}\n\n                {mode === \"verified\" && (\n                    <section itemScope itemType=\"https://schema.org/ConfirmAction\">\n                        <UnverifiedNotice\n                            onResend={handleResend}\n                            isLoading={resendActStatus === \"pending\"}\n                            isSend={resendActStatus === \"shipped\"}\n                            hasToken={!!tempAuthToken}\n                            error={errAuth}\n                        />\n                    </section>\n                )}\n\n                <button\n                    className=\"auth__button\"\n                    onClick={() => handleSwitchMode(mode)}\n                    aria-label={\n                        mode === \"register\" ? \"Перейти к странице входа\" :\n                            mode === \"login\" ? \"Перейти к странице регистрации\" :\n                                \"Перейти к странице авторизации\"\n                    }\n                >\n                    {mode === \"register\" && \"Уже есть аккаунт? Войти\"}\n                    {mode === \"login\" && \"Нет аккаунта? Зарегистрироваться\"}\n                    {mode === \"verified\" && \"Подтвердил почту? Авторизация\"}\n                </button>\n            </main>\n        </>\n    );\n}\n\nexport default memo(AuthPage);","\r\nexport const icon = {\r\n    // Лого\r\n    logo: <svg fill=\"#000000\" width=\"58px\" height=\"58px\" viewBox=\"0 0 14 14\" role=\"img\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 7,1 C 3.6825,1 1,3.6865 1,7.0075 1,7.675 1.114,8.311 1.309,8.9125 l 1.7885,0 0,-5.048 L 7,7.7725 10.9025,3.865 l 0,5.0475 1.7885,0 C 12.8855,8.311 13,7.675 13,7.0075 13,3.6875 10.3175,1 7,1 Z M 6.106,8.6535 4.3975,6.943 l 0,3.1755 -2.5185,0 C 2.935,11.8445 4.839,13 7,13 c 2.161,0 4.081,-1.1555 5.1225,-2.882 l -2.52,0 0,-3.1755 -1.693,1.7105 -0.894,0.895 -0.907,-0.895 -0.0025,0 z\"/></svg>,\r\n\r\n    // Дом\r\n    home: <svg x=\"0px\" y=\"0px\" width=\"70.001px\" height=\"70.002px\" viewBox=\"0 0 70.001 70.002\"><g><g><g><path d=\"M52.001,69.438h-34c-7.57,0-9.619-2.521-9.619-10.375V23.438c0-1.104,0.896-2,2-2s2,0.896,2,2v35.625c0,5.721,0.235,6.375,5.619,6.375h34c5.383,0,6.381-0.654,6.381-6.375V23.438c0-1.104,0.896-2,2-2c1.104,0,2,0.896,2,2v35.625C62.382,66.918,59.571,69.438,52.001,69.438z\"/></g><g><path d=\"M43.382,68.438c-0.553,0-1-0.446-1-1V48.464c0-1.987-0.381-2.025-2.581-2.025h-9.599c-2.2,0-1.819,0.038-1.819,2.025v18.975c0,0.554-0.448,1-1,1c-0.553,0-1-0.446-1-1V48.464c0-3.444,0.915-4.025,3.819-4.025h9.599c2.904,0,4.581,0.581,4.581,4.025v18.975C44.382,67.992,43.934,68.438,43.382,68.438z\"/></g><g><path d=\"M2.002,29.396c-0.606,0-1.206-0.275-1.6-0.797c-0.664-0.883-0.486-2.137,0.396-2.801l33-24.833c0.883-0.664,2.137-0.487,2.801,0.396c0.664,0.883,0.487,2.137-0.396,2.801l-33,24.833C2.843,29.266,2.421,29.396,2.002,29.396z\" /></g><g><path d=\"M68,29.396c-0.419,0-0.841-0.131-1.201-0.402l-33-24.833c-0.881-0.664-1.059-1.918-0.396-2.801c0.665-0.883,1.919-1.058,2.802-0.396l33,24.833c0.883,0.664,1.06,1.918,0.396,2.801C69.207,29.123,68.606,29.396,68,29.396z\"/></g><g><path d=\"M17.382,38.438c-0.553,0-1-0.446-1-1V26.063c0-0.311-0.046-0.604,0.201-0.793l13.03-10.063c0.438-0.336,1.019-0.253,1.354,0.185c0.336,0.438,0.421,1.066-0.018,1.402l-12.567,9.762v10.882C18.382,37.992,17.934,38.438,17.382,38.438z\"/></g><g><path d=\"M17.382,43.438c-0.553,0-1-0.446-1-1v-1c0-0.553,0.447-1,1-1c0.552,0,1,0.447,1,1v1C18.382,42.992,17.934,43.438,17.382,43.438z\"/></g></g></g></svg>,\r\n\r\n    // Лупа\r\n    lens: <svg x=\"0px\" y=\"0px\" width=\"64.738px\" height=\"64.738px\" viewBox=\"0 0 64.738 64.738\"><g><g><g><path d=\"M24.5,49.333C10.991,49.333,0,38.344,0,24.834s10.991-24.5,24.5-24.5c13.51,0,24.5,10.99,24.5,24.5C49.001,38.344,38.012,49.333,24.5,49.333z M24.5,4.334C13.196,4.334,4,13.53,4,24.834c0,11.305,9.196,20.499,20.5,20.499c11.303,0,20.5-9.194,20.5-20.499C45,13.53,35.805,4.334,24.5,4.334z\"/></g><g><path d=\"M10.017,17.25c-0.174,0-0.35-0.045-0.51-0.141c-0.475-0.281-0.631-0.896-0.349-1.37c3.201-5.39,9.08-8.738,15.342-8.738c0.553,0,1,0.447,1,1c0,0.553-0.447,1-1,1c-5.56,0-10.779,2.974-13.622,7.76C10.691,17.076,10.359,17.25,10.017,17.25z\"/></g><g><path d=\"M7.667,25.248c-0.552,0-1-0.447-1-1c0-1.42,0.169-2.211,0.468-3.487c0.126-0.538,0.664-0.87,1.201-0.746c0.538,0.126,0.872,0.663,0.746,1.201c-0.28,1.198-0.415,1.827-0.415,3.032C8.667,24.801,8.22,25.248,7.667,25.248z\"/></g><g><path d=\"M58.739,64.404c-1.604,0-3.108-0.623-4.244-1.756L38.354,46.505c-1.252-1.252-1.664-2.799-1.161-4.356c0.409-1.269,1.37-2.338,2.161-3.127c1.173-1.172,2.613-2.371,4.423-2.371c0.771,0,1.93,0.238,3.063,1.371l16.143,16.141c1.133,1.135,1.756,2.641,1.756,4.244c0,1.602-0.623,3.109-1.756,4.242C61.848,63.781,60.342,64.404,58.739,64.404zM40.982,43.445c0.007,0,0.06,0.094,0.199,0.232L57.323,59.82c0.756,0.754,2.073,0.754,2.83,0c0.377-0.379,0.584-0.881,0.584-1.414c0-0.535-0.207-1.037-0.586-1.416L44.012,40.85c-0.144-0.144-0.236-0.195-0.263-0.203c-0.014,0.008-0.426,0.061-1.565,1.203C41.04,42.99,40.985,43.402,40.982,43.445L40.982,43.445z\"/></g></g></g></svg>,\r\n\r\n    // Сердце\r\n    // heart: <svg x=\"0px\" y=\"0px\" width=\"62.68px\" height=\"62.68px\" viewBox=\"0 0 62.68 62.68\"><g><g><g><path d=\"M31.404,60.02L31.404,60.02c-2.206,0-3.896-1.436-4.976-2.516C23.875,54.95,6.295,33.787,4.94,32.154C1.753,28.933,0,24.681,0,20.171c0-4.542,1.778-8.822,5.007-12.05l0.454-0.454C8.689,4.438,12.982,2.66,17.548,2.66c4.565,0,8.858,1.778,12.087,5.007c0.074,0.074,0.143,0.154,0.204,0.239c0.002,0,0.579,0.717,1.501,0.717c0.966,0,1.398-0.571,1.445-0.636c0.082-0.135,0.146-0.208,0.26-0.32c3.229-3.229,7.521-5.007,12.087-5.007s8.858,1.778,12.087,5.007l0.454,0.454c3.229,3.228,5.007,7.508,5.007,12.05c0,4.509-1.752,8.759-4.936,11.979c-1.354,1.646-18.424,22.416-21.362,25.354C35.302,58.584,33.611,60.02,31.404,60.02z M17.548,6.659c-3.498,0-6.786,1.362-9.259,3.835l-0.454,0.454C5.362,13.421,4,16.696,4,20.17s1.362,6.749,3.835,9.222c0.044,0.043,0.085,0.089,0.125,0.137c6.502,7.833,19.32,23.169,21.297,25.146c0.892,0.892,1.614,1.344,2.147,1.344c0.665,0,1.536-0.73,2.149-1.344c2.286-2.287,14.842-17.443,21.159-25.138c0.042-0.051,0.086-0.099,0.132-0.146c2.473-2.473,3.835-5.749,3.835-9.222c0-3.474-1.362-6.749-3.835-9.222l-0.454-0.454c-2.473-2.473-5.761-3.835-9.259-3.835c-3.441,0-6.684,1.32-9.143,3.72c-0.49,0.657-1.955,2.243-4.649,2.243c-2.584,0-4.154-1.648-4.612-2.207C24.264,7.992,21.008,6.659,17.548,6.659z\"/></g><g><g><path d=\"M8.708,19.013c-0.088,0-0.178-0.012-0.267-0.036c-0.532-0.146-0.845-0.697-0.698-1.229c0.472-1.718,1.395-3.298,2.666-4.569l0.281-0.281c2.549-2.549,6.171-3.582,9.685-2.763c0.538,0.125,0.873,0.663,0.747,1.201c-0.125,0.538-0.666,0.871-1.2,0.747c-2.841-0.661-5.762,0.171-7.817,2.229l-0.281,0.281c-1.027,1.027-1.771,2.301-2.152,3.686C9.549,18.721,9.147,19.013,8.708,19.013z\"/></g><g><path d=\"M24.632,14.604c-0.256,0-0.512-0.098-0.707-0.293c-0.335-0.335-0.7-0.643-1.086-0.917c-0.451-0.319-0.557-0.943-0.237-1.394c0.318-0.451,0.942-0.558,1.394-0.238c0.478,0.338,0.93,0.72,1.344,1.134c0.391,0.391,0.391,1.023,0,1.414C25.144,14.506,24.888,14.604,24.632,14.604z\"/></g></g></g></g></svg>,\r\n\r\n    // Блокнот\r\n    notepad: <svg x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\"><g> <g> <g> <path d=\"M59,57.068C59,60.896,55.896,64,52.068,64H11.932C8.104,64,5,60.896,5,57.068V6.932C5,3.104,8.104,0,11.932,0h40.136 C55.896,0,59,3.104,59,6.932V57.068z M55,6.932C55,5.313,53.688,4,52.068,4H11.932C10.313,4,9,5.313,9,6.932v50.136 C9,58.688,10.313,60,11.932,60h40.136C53.688,60,55,58.688,55,57.068V6.932z\"/> </g> <g> <path d=\"M19,63c-0.553,0-1-0.447-1-1V2c0-0.553,0.447-1,1-1c0.552,0,1,0.447,1,1v60C20,62.553,19.552,63,19,63z\"/> </g> <g> <g> <path d=\"M47.527,58H31.125c-0.553,0-1-0.447-1-1s0.447-1,1-1h16.402C49.105,56,51,54.109,51,51.184V48c0-0.553,0.447-1,1-1 s1,0.447,1,1v3.184C53,55.325,50.32,58,47.527,58z\"/> </g> <g> <path d=\"M51.245,43.951c-0.271,0-0.521-0.102-0.71-0.29c-0.182-0.181-0.29-0.44-0.29-0.71c0-0.262,0.108-0.521,0.29-0.71 c0.369-0.36,1.04-0.37,1.408,0c0.19,0.188,0.302,0.448,0.302,0.71c0,0.27-0.11,0.52-0.29,0.71 C51.766,43.85,51.505,43.951,51.245,43.951z\"/> </g> </g> <g> <path d=\"M45,22.432c-0.146,0-0.295-0.032-0.432-0.099L39,19.666l-5.568,2.668c-0.31,0.15-0.677,0.128-0.968-0.055 c-0.291-0.184-0.471-0.503-0.471-0.847V2c0-0.553,0.454-1.318,1.007-1.318h12c0.553,0,0.993,0.766,0.993,1.318v19.432 c0,0.344-0.175,0.663-0.464,0.847C45.368,22.38,45.186,22.432,45,22.432z M39,17.557c0.146,0,0.292,0.033,0.43,0.099l4.563,2.188 V2.682h-10v17.162l4.571-2.188C38.7,17.59,38.854,17.557,39,17.557z\"/> </g> </g></g></svg>,\r\n\r\n    // Карандаш\r\n    pencil: <svg x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\"><g> <g> <g> <path d=\"M2.435,63.924c-0.524,0-1.035-0.206-1.414-0.586l-0.435-0.434c-0.494-0.494-0.694-1.209-0.529-1.889 c0.606-2.49,3.786-15.07,6.883-18.166L47.062,2.728c1.71-1.711,4.009-2.652,6.475-2.652c2.606,0,5.08,1.036,6.961,2.918 l0.435,0.435c1.79,1.789,2.901,4.265,3.05,6.792c0.158,2.686-0.732,5.143-2.509,6.918L21.349,57.26 c-3.111,3.111-15.943,6.059-18.484,6.617C2.722,63.91,2.578,63.924,2.435,63.924z M53.536,4.076c-1.396,0-2.69,0.525-3.646,1.48 L9.768,45.678c-1.455,1.455-3.673,8.178-5.156,13.686c5.608-1.381,12.461-3.483,13.909-4.932L58.645,14.31 c0.956-0.957,1.435-2.326,1.344-3.854c-0.092-1.563-0.777-3.094-1.885-4.199l-0.435-0.435 C56.543,4.696,55.075,4.076,53.536,4.076z\"/> </g> <g> <path d=\"M56.956,18.171c-0.256,0-0.513-0.098-0.707-0.293L45.495,7.125c-0.392-0.391-0.392-1.023,0-1.414 c0.391-0.391,1.022-0.391,1.414,0l10.754,10.754c0.391,0.391,0.391,1.023,0,1.414C57.468,18.074,57.212,18.171,56.956,18.171z\"/> </g> <g> <path d=\"M20.556,54.573c-0.256,0-0.512-0.099-0.707-0.293L9.094,43.523c-0.391-0.391-0.391-1.022,0-1.414 c0.391-0.391,1.023-0.391,1.414,0l10.755,10.757c0.391,0.391,0.391,1.022,0,1.414C21.068,54.475,20.812,54.573,20.556,54.573z\"/> </g> <g> <path d=\"M12.69,59.708c-0.256,0-0.512-0.099-0.707-0.293l-6.889-6.892c-0.391-0.391-0.391-1.022,0-1.414 c0.391-0.391,1.023-0.391,1.414,0L13.397,58c0.391,0.391,0.391,1.023,0,1.414C13.202,59.609,12.946,59.708,12.69,59.708z\"/> </g> <g> <path d=\"M13.938,47.954c-0.256,0-0.512-0.099-0.707-0.293c-0.391-0.392-0.391-1.022,0-1.414l29.783-29.782 c0.391-0.391,1.023-0.391,1.414,0c0.391,0.391,0.391,1.023,0,1.414L14.645,47.661C14.45,47.855,14.194,47.954,13.938,47.954z\"/> </g> <g> <path d=\"M46.615,15.276c-0.257,0-0.513-0.098-0.707-0.293c-0.392-0.391-0.392-1.023,0-1.414l3.723-3.723 c0.391-0.391,1.022-0.391,1.414,0c0.391,0.391,0.391,1.023,0,1.414l-3.724,3.723C47.127,15.178,46.871,15.276,46.615,15.276z\"/> </g> <g> <path d=\"M17.247,51.262c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l36.399-36.398 c0.392-0.391,1.023-0.391,1.414,0c0.392,0.391,0.392,1.023,0,1.414L17.954,50.969C17.758,51.165,17.502,51.262,17.247,51.262z\"/> </g> </g></g></svg>,\r\n\r\n    // Сообщение\r\n    // msg: <svg x=\"0px\" y=\"0px\" width=\"65.001px\" height=\"65.001px\" viewBox=\"0 0 65.001 65.001\"><g> <g> <g> <path d=\"M65,51.068c0,3.828-3.104,6.933-6.932,6.933H6.932C3.104,58.001,0,54.896,0,51.068V13.932C0,10.104,3.104,7,6.932,7 h51.136c3.828,0,6.933,3.104,6.933,6.932L65,51.068L65,51.068z M61,13.932C61,12.313,59.688,11,58.068,11H6.932 C5.313,11,4,12.313,4,13.932v37.136c0,1.619,1.313,2.933,2.932,2.933h51.136c1.619,0,2.933-1.313,2.933-2.933L61,13.932 L61,13.932z\"/> </g> <g> <g> <path d=\"M31.659,38.432c-0.224,0-0.447-0.076-0.632-0.225l-16.765-13.65c-0.428-0.349-0.492-0.979-0.144-1.407 c0.348-0.426,0.979-0.493,1.407-0.144l16.14,13.141l15.748-12.541c0.435-0.345,1.063-0.272,1.405,0.159 c0.344,0.433,0.271,1.062-0.159,1.405L32.282,38.213C32.1,38.359,31.88,38.432,31.659,38.432z\"/> </g> <g> <path d=\"M17.159,42.682c-0.226,0-0.452-0.076-0.64-0.231c-0.424-0.354-0.481-0.984-0.127-1.408l0.438-0.522 c0.353-0.425,0.982-0.482,1.408-0.127c0.424,0.354,0.481,0.983,0.127,1.407l-0.438,0.523 C17.73,42.561,17.446,42.682,17.159,42.682z\"/> </g> <g> <path d=\"M19.713,39.622c-0.236,0-0.474-0.082-0.664-0.252c-0.413-0.367-0.45-0.998-0.084-1.412l5.625-6.336 c0.368-0.414,0.999-0.45,1.412-0.084c0.413,0.367,0.45,0.999,0.084,1.412l-5.625,6.336 C20.263,39.508,19.988,39.622,19.713,39.622z\"/> </g> <g> <path d=\"M44.717,41.477c-0.285,0-0.57-0.123-0.769-0.358l-6.017-7.195c-0.354-0.424-0.298-1.054,0.127-1.409 c0.426-0.354,1.055-0.297,1.408,0.126l6.016,7.195c0.354,0.424,0.299,1.056-0.125,1.41C45.17,41.4,44.941,41.477,44.717,41.477z \"/> </g> </g> </g></g></svg>,\r\n\r\n    // Выход\r\n    quit: <svg x=\"0px\" y=\"0px\" width=\"65.994px\" height=\"65.994px\" viewBox=\"0 0 65.994 65.994\"><g> <g> <g> <path d=\"M33.753,50.937c-5.351,0-10.35-2.052-14.076-5.776l-0.658-0.658c-3.777-3.778-5.829-8.849-5.776-14.278 c0.053-5.392,2.17-10.448,5.96-14.237L29.48,5.707c0.75-0.75,2.078-0.75,2.828,0L58.472,31.87 c0.375,0.375,0.586,0.884,0.586,1.414s-0.211,1.04-0.586,1.415L48.193,44.976C44.351,48.82,39.222,50.937,33.753,50.937z M30.895,9.95l-8.863,8.863c-3.045,3.045-4.745,7.111-4.788,11.449c-0.042,4.346,1.593,8.398,4.605,11.411l0.658,0.658 c2.97,2.97,6.964,4.604,11.247,4.604c4.399,0,8.523-1.7,11.613-4.789l8.862-8.863L30.895,9.95z\"/> </g> <g> <path d=\"M25.359,22.142c-0.256,0-0.513-0.098-0.708-0.293c-0.39-0.391-0.39-1.023,0.001-1.414l0.707-0.707 c0.391-0.391,1.024-0.391,1.415,0c0.39,0.392,0.39,1.024-0.001,1.414l-0.707,0.707C25.872,22.044,25.616,22.142,25.359,22.142z\" /> </g> <g> <path d=\"M22.17,34.815c-0.445,0-0.852-0.299-0.968-0.75c-0.964-3.733-0.402-7.773,1.541-11.083 c0.279-0.476,0.892-0.637,1.368-0.355c0.477,0.279,0.636,0.893,0.356,1.368c-1.677,2.856-2.161,6.345-1.329,9.57 c0.139,0.535-0.184,1.08-0.718,1.219C22.337,34.807,22.253,34.815,22.17,34.815z\"/> </g> <g> <path d=\"M3.816,65.994c-0.103,0-0.208-0.008-0.313-0.024c-1.089-0.172-1.834-1.19-1.664-2.281 c0.063-0.408,1.644-10.062,8.861-13.604c5.075-2.488,6.701-8.313,6.717-8.371c0.287-1.063,1.383-1.698,2.447-1.413 c1.065,0.283,1.7,1.372,1.42,2.438c-0.082,0.311-2.076,7.631-8.822,10.938c-5.336,2.617-6.66,10.55-6.673,10.631 C5.633,65.292,4.784,65.994,3.816,65.994z\"/> </g> <g> <g> <path d=\"M37.966,16.192c-0.512,0-1.023-0.194-1.414-0.586c-0.781-0.78-0.781-2.047,0-2.827L48.744,0.586 c0.779-0.781,2.048-0.781,2.828,0s0.78,2.047,0,2.828L39.38,15.606C38.99,15.997,38.477,16.192,37.966,16.192z\"/> </g> <g> <path d=\"M49.985,28.213c-0.512,0-1.022-0.195-1.413-0.586c-0.781-0.781-0.781-2.047,0-2.828l12.192-12.192 c0.78-0.78,2.048-0.78,2.828,0c0.781,0.781,0.781,2.048,0,2.828L51.399,27.627C51.011,28.018,50.498,28.213,49.985,28.213z\"/> </g> </g></g></g></svg>,\r\n\r\n    // Пользователь\r\n    user: <svg x=\"0px\" y=\"0px\" width=\"66.949px\" height=\"66.949px\" viewBox=\"0 0 66.949 66.949\"><g> <g> <g> <path d=\"M33.558,42.628c-9.49,0-16.428-17.231-16.428-26.2C17.129,7.369,24.499,0,33.558,0c9.059,0,16.428,7.369,16.428,16.428 C49.985,25.396,43.048,42.628,33.558,42.628z M33.558,4c-6.853,0-12.428,5.575-12.428,12.428c0,7.764,6.388,22.2,12.428,22.2 c6.039,0,12.428-14.437,12.428-22.2C45.985,9.575,40.411,4,33.558,4z\"/> </g> <g> <g> <path d=\"M25.163,17.899c-0.553,0-1-0.447-1-1c0-5.499,4.474-9.973,9.973-9.973c0.552,0,1,0.448,1,1c0,0.553-0.448,1-1,1 c-4.396,0-7.973,3.577-7.973,7.973C26.163,17.452,25.715,17.899,25.163,17.899z\"/> </g> <g> <path d=\"M25.514,21.738c-0.27,0-0.52-0.1-0.71-0.29c-0.189-0.189-0.29-0.45-0.29-0.71c0-0.26,0.101-0.52,0.29-0.71 c0.37-0.37,1.04-0.37,1.41,0c0.19,0.19,0.3,0.45,0.3,0.71c0,0.271-0.109,0.521-0.3,0.71 C26.035,21.639,25.774,21.738,25.514,21.738z\"/> </g> </g> <g> <path d=\"M33.475,66.949c-5.649,0-24.083-0.577-24.083-8c0-10.635,7.018-20.227,17.066-23.326l1.225-0.378l0.855,0.955 c3.062,3.42,6.725,3.581,10.01-0.065l0.861-0.957l1.227,0.387c9.963,3.145,16.922,12.761,16.922,23.386 C57.558,66.372,39.124,66.949,33.475,66.949z M26.502,39.834c-7.777,2.934-13.111,10.625-13.111,19.115c0,1.102,6.175,4,20.083,4 c13.907,0,20.083-2.898,20.083-4c0-8.486-5.283-16.199-12.986-19.17c-2.141,2-4.543,3.049-7.014,3.049 C31.03,42.828,28.614,41.799,26.502,39.834z\"/> </g> </g></g></svg>,\r\n\r\n    // Ошибка\r\n    error: <svg x=\"0px\" y=\"0px\" width=\"66.109px\" height=\"66.109px\" viewBox=\"0 0 66.109 66.109\"><g> <g> <g> <g> <path d=\"M52.311,66.109c-0.005,0-0.013,0-0.02,0H13.346c-0.621,0-1.207-0.289-1.586-0.781c-0.378-0.492-0.507-1.133-0.347-1.732 c0.55-2.065,13.49-50.68,15.78-57.185C28.162,3.659,29.792,0,32.755,0c2.94,0,4.552,3.597,5.508,6.303 c2.405,6.803,14.717,52.655,15.89,57.024c0.103,0.24,0.158,0.506,0.158,0.783C54.311,65.215,53.416,66.109,52.311,66.109z M15.95,62.109h33.733c-2.757-10.248-13.088-48.524-15.19-54.474c-0.789-2.231-1.424-3.138-1.737-3.482 c-0.321,0.35-0.975,1.277-1.787,3.586C29.021,13.267,18.696,51.824,15.95,62.109z\"/> </g> </g> <g> <path d=\"M59.055,66.109h-52c-1.104,0-2-0.895-2-2c0-1.104,0.896-2,2-2h52c1.104,0,2,0.896,2,2 C61.055,65.215,60.158,66.109,59.055,66.109z\"/> </g> <g> <path d=\"M48.055,53.109h-32c-0.553,0-1-0.447-1-1s0.447-1,1-1h32c0.553,0,1,0.447,1,1S48.607,53.109,48.055,53.109z\"/> </g> <g> <path d=\"M45.055,38.109h-7c-0.553,0-1-0.447-1-1s0.447-1,1-1h7c0.553,0,1,0.447,1,1S45.607,38.109,45.055,38.109z\"/> </g> <g> <path d=\"M34.054,38.109h-14c-0.553,0-1-0.447-1-1s0.447-1,1-1h14c0.553,0,1,0.447,1,1S34.606,38.109,34.054,38.109z\"/> </g> <g> <path d=\"M41.055,23.109h-16c-0.553,0-1-0.447-1-1c0-0.553,0.447-1,1-1h16c0.553,0,1,0.447,1,1 C42.055,22.662,41.607,23.109,41.055,23.109z\"/> </g> </g></g></svg>,\r\n\r\n}\r\n","import { Link, useSearchParams } from \"react-router-dom\";\r\nimport \"./ErrorPage.css\";\r\nimport { icon } from \"../../../elements/svgIcon\";\r\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\r\n\r\n// Функция очистки от опасных символов\r\nconst sanitizeText = (str) => {\r\n    if (!str) return '';\r\n    return String(str)\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#x27;');\r\n};\r\n\r\n// SEO-оптимизированные сообщения об ошибках\r\nconst errorMessages = {\r\n    '400': {\r\n        title: 'Ошибка 400 - Неверный запрос',\r\n        description: 'Сервер не может обработать ваш запрос из-за некорректного синтаксиса.'\r\n    },\r\n    '401': {\r\n        title: 'Ошибка 401 - Требуется авторизация',\r\n        description: 'Для доступа к этой странице необходимо войти в систему.'\r\n    },\r\n    '403': {\r\n        title: 'Ошибка 403 - Доступ запрещён',\r\n        description: 'У вас нет прав для просмотра этой страницы.'\r\n    },\r\n    '404': {\r\n        title: 'Ошибка 404 - Страница не найдена',\r\n        description: 'Запрошенная страница не существует или была перемещена.'\r\n    },\r\n    '500': {\r\n        title: 'Ошибка 500 - Ошибка сервера',\r\n        description: 'Внутренняя ошибка сервера. Пожалуйста, попробуйте позже.'\r\n    }\r\n};\r\n\r\nconst ErrorPage = () => {\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const errorCode = sanitizeText(searchParams.get('code')) || '404';\r\n    const customMessage = searchParams.get('message');\r\n\r\n    const { title, description } = errorMessages[errorCode] || errorMessages['404'];\r\n    const safeCustomMessage = customMessage\r\n        ? sanitizeText(decodeURIComponent(customMessage))\r\n        : null;\r\n\r\n    usePageTitle(`${title} | ${import.meta.env.VITE_SITE_NAME || \"Messaria\"}`);\r\n\r\n    return (\r\n        <div className=\"error-page__box\" role=\"alert\">\r\n            <h1 className=\"visually-hidden\">{title}</h1>\r\n            <script type=\"application/ld+json\">\r\n                {`{\r\n                  \"@context\": \"https://schema.org\",\r\n                  \"@type\": \"ErrorPage\",\r\n                  \"name\": \"${title}\",\r\n                  \"description\": \"${safeCustomMessage || description}\"\r\n                }`}\r\n            </script>\r\n\r\n            <div className=\"error-page\">\r\n                <div className=\"error-page__icon\" aria-hidden=\"true\">\r\n                    {icon.error || '⚠️'}\r\n                </div>\r\n\r\n                <div className=\"error-page__text-box\">\r\n                    <h2 className=\"error-page__code\">Ошибка {errorCode}</h2>\r\n\r\n                    <p className=\"error-page__description\">\r\n                        {safeCustomMessage || description}\r\n                    </p>\r\n\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"error-page__button\"\r\n                        aria-label=\"Вернуться на главную страницу\"\r\n                    >\r\n                        На главную\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","import \"./AppNavbar.css\";\r\nimport { icon } from \"../../elements/svgIcon\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { memo } from \"react\";\r\n\r\nconst AppNavbar = ({ isAuth, logout }) => {\r\n    const location = useLocation();\r\n\r\n    const navItems = [\r\n        { path: \"/feed\", icon: icon.home, label: \"Главная\" },\r\n        { path: \"/news/search\", icon: icon.lens, label: \"Поиск новостей\" },\r\n        ...(isAuth ? [\r\n            { path: \"/news/favorites\", icon: icon.notepad, label: \"Избранное\" },\r\n            { path: \"/news/create\", icon: icon.pencil, label: \"Создать новость\" }\r\n        ] : [])\r\n    ];\r\n\r\n    return (\r\n        <nav className=\"appnavbar__container\" aria-label=\"Основная навигация\">\r\n            <Link to=\"/\" className=\"appnavbar__link-logo\" aria-label=\"На главную\">\r\n                <span role=\"img\" aria-hidden=\"true\">{icon.logo}</span>\r\n            </Link>\r\n\r\n            <ul className=\"appnavbar__user-btn-box\">\r\n                {navItems.map((item) => (\r\n                    <li key={item.path}>\r\n                        <Link\r\n                            to={item.path}\r\n                            aria-current={location.pathname === item.path ? \"page\" : undefined}\r\n                            title={item.label}\r\n                        >\r\n                            <span role=\"img\" aria-label={item.label}>{item.icon}</span>\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <div className=\"appnavbar__user-box\">\r\n                {isAuth ? (\r\n                    <>\r\n                        <Link\r\n                            to=\"/auth/logout\"\r\n                            className=\"appnavbar__btn-quit\"\r\n                            onClick={logout}\r\n                            title=\"Выйти\"\r\n                        >\r\n                            <span role=\"img\" aria-label=\"Выйти\">{icon.quit}</span>\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/user/settings\"\r\n                            className=\"appnavbar__btn-user\"\r\n                            title=\"Настройки профиля\"\r\n                        >\r\n                            <span role=\"img\" aria-label=\"Профиль\">{icon.user}</span>\r\n                        </Link>\r\n                    </>\r\n                ) : (\r\n                    <Link\r\n                        to=\"/auth/sign-in\"\r\n                        className=\"appnavbar__btn-user\"\r\n                        title=\"Войти\"\r\n                    >\r\n                        <span role=\"img\" aria-label=\"Войти\">{icon.user}</span>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default memo(AppNavbar);","import AppNavbar from \"../components/App/AppNavbar\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport \"./AppLayout.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkToken, logoutUser } from \"../redux/reducers/userAuth/userAuthSlice\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\nconst AppLayout = () => {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, authCheckStatus } = useSelector(state => state.userAuth);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        let isMounted = true;\r\n\r\n        const startInterval = () => {\r\n            if (isMounted && isAuth && authCheckStatus !== 'logout') {\r\n                interval = setInterval(() => {\r\n                    console.log('проверка');\r\n                    dispatch(checkToken());\r\n                }, 10 * 1000);\r\n            }\r\n        };\r\n\r\n        if (authCheckStatus === 'idle') {\r\n            dispatch(checkToken());\r\n        }\r\n\r\n        startInterval();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n            if (interval) clearInterval(interval);\r\n        };\r\n    }, [dispatch, isAuth, authCheckStatus]);\r\n\r\n    const logout = (eo) => {\r\n        eo.preventDefault();\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    return (\r\n        <div className=\"applayout__container\">\r\n            <div className=\"applayout__nav\">\r\n                <AppNavbar isAuth={isAuth} logout={logout}/>\r\n            </div>\r\n            <main className=\"applayout__main\">\r\n                <Outlet />\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(AppLayout);","const NewsListPage = ({mode}) => {\r\n\r\n    return (\r\n        <div>\r\n            {mode}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsListPage;","const NewsItemPage = ({mode}) => {\r\n\r\n    return (\r\n        <div>\r\n            {mode}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsItemPage;","const FeedPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            Feed\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedPage;","import { Outlet } from \"react-router-dom\";\r\n\r\nconst NewsLayout = () => {\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Outlet />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsLayout;","import { Outlet } from \"react-router-dom\";\r\n\r\nconst UserLayout = () => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Outlet />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserLayout;","const UserSettingsPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            user set\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSettingsPage;","import { Outlet } from \"react-router-dom\";\r\nimport \"./AuthLayout.css\";\r\n\r\nconst AuthLayout = () => {\r\n\r\n    return (\r\n        <main className=\"authlayout__main\">\r\n            <Outlet />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default AuthLayout;","import PageAuth from \"../pages/app/auth/AuthPage\";\r\nimport SafeNavigate from \"../components/routes/SafeNavigate\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ErrorPage from \"../pages/app/error/ErrorPage\";\r\nimport { refreshToken } from \"../redux/reducers/userAuth/userAuthSlice\";\r\nimport AppLayout from \"../layouts/AppLayout\";\r\nimport NewsListPage from \"../pages/app/posts/NewsListPage\";\r\nimport NewsItemPage from \"../pages/app/posts/NewsItemPage\";\r\nimport FeedPage from \"../pages/app/feed/FeedPage\";\r\nimport NewsLayout from \"../layouts/NewsLayout\";\r\nimport UserLayout from \"../layouts/UserLayout\";\r\nimport UserSettingsPage from \"../pages/app/user/UserSettingsPage\";\r\nimport AuthLayout from \"../layouts/AuthLayout\";\r\n\r\nexport const routeConfig = [\r\n    {\r\n        path: \"/\",\r\n        element: <Outlet />,\r\n        children: [\r\n            // App\r\n            {\r\n                element: <AppLayout />,\r\n                ssrLoadData: () => refreshToken(), // Thunk\r\n                children: [\r\n                    // Home\r\n                    {\r\n                        index: true,\r\n                        element: <span>home</span>,\r\n                    },\r\n                    // Auth\r\n                    {\r\n                        path: \"auth\",\r\n                        element: <AuthLayout />,\r\n                        children: [\r\n                            // Sign-in\r\n                            {\r\n                                path: \"sign-in\",\r\n                                element: <PageAuth mode=\"login\" />,\r\n                            },\r\n                            // Sign-up\r\n                            {\r\n                                path: \"sign-up\",\r\n                                element: <PageAuth mode=\"register\" />,\r\n                            },\r\n                            // Verified\r\n                            {\r\n                                path: \"verified\",\r\n                                element: <PageAuth mode=\"verified\" />,\r\n                            },\r\n                            // Ошибка пути\r\n                            {\r\n                                path: \"*\",\r\n                                element: <SafeNavigate to=\"/auth/sign-in\" replace />\r\n                            }\r\n                        ],\r\n                    },\r\n                    // Feed\r\n                    {\r\n                        path: \"feed\",\r\n                        element: <FeedPage />,\r\n                    },\r\n                    // News\r\n                    {\r\n                        path: \"news\",\r\n                        element: <NewsLayout />,\r\n                        children: [\r\n                            // Posts - search\r\n                            {\r\n                                path: \"search\",\r\n                                element: <NewsListPage mode=\"search\" />,\r\n                            },\r\n                            // Posts - favorites\r\n                            {\r\n                                path: \"favorites\",\r\n                                element: <NewsListPage mode=\"favorites\" />,\r\n                                private: true,\r\n                                privateRedirectTo: \"/auth/sign-in\",\r\n                            },\r\n\r\n                            // Posts - view\r\n                            {\r\n                                path: \"view/:id(\\\\d+)\",\r\n                                element: <NewsItemPage mode=\"view\" />,\r\n                            },\r\n                            // Posts - create\r\n                            {\r\n                                path: \"create\",\r\n                                element: <NewsItemPage mode=\"create\" />,\r\n                                private: true,\r\n                                privateRedirectTo: \"/auth/sign-in\",\r\n                            },\r\n                            // Posts - edit\r\n                            {\r\n                                path: \"edit/:id(\\\\d+)\",\r\n                                element: <NewsItemPage mode=\"edit\" />,\r\n                                private: true,\r\n                                privateRedirectTo: \"/auth/sign-in\",\r\n                            },\r\n\r\n                            // Ошибка пути\r\n                            {\r\n                                path: \"*\",\r\n                                element: <SafeNavigate to=\"/news/search\" replace />,\r\n                            },\r\n\r\n                        ]\r\n                    },\r\n                    // User\r\n                    {\r\n                        path: \"user\",\r\n                        element: <UserLayout />,\r\n                        private: true,\r\n                        privateRedirectTo: \"/auth/sign-in\",\r\n                        children: [\r\n                            // Settings\r\n                            {\r\n                                path: \"settings\",\r\n                                element: <UserSettingsPage />,\r\n                            },\r\n                            // Ошибка пути\r\n                            {\r\n                                path: \"*\",\r\n                                element: <SafeNavigate to=\"/user/settings\" replace />,\r\n                            },\r\n                        ]\r\n                    },\r\n                    // Error\r\n                    {\r\n                        path: \"error\",\r\n                        element: <ErrorPage />,\r\n                    },\r\n                ],\r\n            },\r\n            // Ошибка пути\r\n            {\r\n                path: \"*\",\r\n                element: <SafeNavigate to=\"/error\" replace />,\r\n            }\r\n        ],\r\n    },\r\n];","import { Route, Routes } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport { routeConfig } from \"./routes\";\r\n\r\nfunction renderRoutes(routes) {\r\n    return routes.map((route, idx) => {\r\n        const element = route.private ? (\r\n            <ProtectedRoute redirectTo={route.privateRedirectTo}>\r\n                {route.element}\r\n            </ProtectedRoute>\r\n        ) : (\r\n            route.element\r\n        );\r\n\r\n        return (\r\n            <Route key={idx} path={route.path} element={element} index={route.index}>\r\n                {route.children && renderRoutes(route.children)}\r\n            </Route>\r\n        );\r\n    });\r\n}\r\n\r\nexport default function PagesRouter() {\r\n    return <Routes>{renderRoutes(routeConfig)}</Routes>;\r\n}","import \"./App.css\";\nimport PagesRouter from \"./routes/PagesRouter\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <div className=\"box\">\n                <PagesRouter/>\n            </div>\n        </div>\n    );\n}\n\n// App.fetchData = (store, params) => {\n//     // вызываем thunk через dispatch и возвращаем Promise\n//     //return store.dispatch(loginUser());\n// };\n\nexport default App;","import { StaticRouter } from \"react-router-dom/server\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"./redux/store\";\nimport App from \"./App\";\nimport { matchRoutes } from \"react-router-dom\";\nimport { routeConfig } from \"./routes/routes\";\nimport { createContext, useContext } from \"react\";\n\nexport async function createApp(req, context) {\n    const store = createStore({}, req);\n\n    async function loadDataForMatchedRoutes(url, store) {\n        const matchedRoutes = matchRoutes(routeConfig, url);\n        console.log(\"Выполняется SSR - \",url);\n\n        // вызов ssrLoadData из маршрутов\n        const promisesFromRoutes = matchedRoutes\n            .filter(({ route }) => route.ssrLoadData)\n            .map(({ route }) => store.dispatch(route.ssrLoadData()));\n\n        // вызов fetchData из компонентов\n        const promisesFromComponents = [];\n\n        matchedRoutes.forEach(({ route, params }) => {\n            const Component = route.element?.type; // если route.element — React элемент\n            if (Component && Component.fetchData) {\n                promisesFromComponents.push(Component.fetchData(store, params));\n            }\n        });\n\n        await Promise.all([...promisesFromRoutes, ...promisesFromComponents]);\n    }\n    await loadDataForMatchedRoutes(req.originalUrl, store);\n\n    context.preloadedState = store.getState();\n\n    return (\n        <SSRContext.Provider value={context}>\n            <Provider store={store}>\n                <StaticRouter location={req.originalUrl} context={context}>\n                    <App />\n                </StaticRouter>\n            </Provider>\n        </SSRContext.Provider>\n    );\n}\n\nexport const SSRContext = createContext(null);\n\nexport function useSSRContext() {\n    return useContext(SSRContext);\n}"],"names":["createAsyncThunk","initialState","createSlice","configureStore","userAuthSlice","jsx","Navigate","useDispatch","useSelector","useEffect","useState","jsxs","Fragment","memo","useLocation","useNavigate","AuthForm","useSearchParams","Link","AppNavbar","Outlet","AppLayout","Route","Routes","store","matchRoutes","Provider","StaticRouter","createContext","useContext"],"mappings":";;;;;;;;;;AAAO,MAAM,aAAa;AAAA,EACtB,MAAM;AAAA,IACF,OAAO;AAAA,IACP,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,YAAY;AAAA,IACZ,QAAQ;AAAA,EACX;AACL;ACNA,MAAM,WAAW,OAAO,WAAW;AACnC,MAAM,eAAe,WAAW,QAAQ,IAAI,gBAAgB,0BAA0B;AACtF,MAAM,iBAAwD;AAejD,MAAA,UAAU,OAAO,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACrD,QAAA;AAAA,IACF,SAAS;AAAA,IACT,UAAU,CAAC;AAAA,IACX;AAAA,EAAA,IACA;AAGE,QAAA,eAAe,IAAI,QAAQ;AAAA,IAC7B,QAAQ;AAAA,IACR,GAAG;AAAA,EAAA,CACN;AAGG,MAAA;AAEJ,MAAI,gBAAgB,UAAU;AAEnB,WAAA;AAAA,EAEA,WAAA,gBAAgB,QAAQ,gBAAgB,MAAM;AAC9C,WAAA;AAGP,QAAI,aAAa;AACA,mBAAA,IAAI,gBAAgB,WAAW;AAAA,IACrC,WAAA,CAAC,aAAa,IAAI,cAAc,EAAG;AAAA,EAE9C,WACO,OAAO,SAAS,UAAU;AAG1B,WAAA;AACP,QAAI,aAAa;AACA,mBAAA,IAAI,gBAAgB,WAAW;AAAA,IACrC,WAAA,CAAC,aAAa,IAAI,cAAc,GAAG;AAC7B,mBAAA,IAAI,gBAAgB,0BAA0B;AAAA,IAAA;AAAA,EAExD,WAAA,QAAQ,OAAO,SAAS,UAAU;AAElC,WAAA,KAAK,UAAU,IAAI;AAC1B,QAAI,aAAa;AACA,mBAAA,IAAI,gBAAgB,WAAW;AAAA,IACrC,WAAA,CAAC,aAAa,IAAI,cAAc,GAAG;AAC7B,mBAAA,IAAI,gBAAgB,gCAAgC;AAAA,IAAA;AAAA,EACrE,OACG;AAEI,WAAA;AAAA,EAAA;AAGL,QAAA,WAAW,MAAM,MAAM,GAAG,YAAY,GAAG,cAAc,GAAG,GAAG,IAAI;AAAA,IACnE,QAAQ;AAAA,IACR,SAAS;AAAA,IACT;AAAA,EAAA,CACH;AAED,QAAM,sBAAsB,SAAS,QAAQ,IAAI,cAAc,KAAK;AAEhE,MAAA;AACA,MAAA,oBAAoB,SAAS,kBAAkB,GAAG;AACnC,mBAAA,MAAM,SAAS,KAAK;AAAA,EAC5B,WAAA,oBAAoB,WAAW,OAAO,GAAG;AACjC,mBAAA,MAAM,SAAS,KAAK;AAAA,EAAA,WAEnC,oBAAoB,SAAS,0BAA0B,KACvD,oBAAoB,SAAS,iBAAiB,KAC9C,oBAAoB,WAAW,QAAQ,KACvC,oBAAoB,WAAW,QAAQ,KACvC,oBAAoB,WAAW,QAAQ,GACzC;AACiB,mBAAA,MAAM,SAAS,KAAK;AAAA,EAAA,OAChC;AAEY,mBAAA,MAAM,SAAS,KAAK;AAAA,EAAA;AAOvC,MAAI,CAAC,SAAS,MAAO,gBAAgB,aAAa,SAAS,SAAU;AAC7D,QAAA,eAAe,SAAS,cAAc;AAEtC,QAAA,gBAAgB,OAAO,iBAAiB,UAAU;AAClD,UAAI,aAAa,SAAS;AACtB,uBAAe,aAAa;AAAA,MAAA;AAG1B,YAAA,QAAQ,IAAI,MAAM,YAAY;AACpC,YAAM,SAAS,SAAS,UAAU,aAAa,UAAU;AAEzD,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AACrD,YAAI,QAAQ,WAAW;AACnB,gBAAM,GAAG,IAAI;AAAA,QAAA;AAAA,MACjB;AAGE,YAAA;AAAA,IAAA,OACH;AACG,YAAA,QAAQ,IAAI,MAAM,YAAY;AAC9B,YAAA,SAAS,SAAS,UAAU;AAC5B,YAAA;AAAA,IAAA;AAAA,EACV;AAEG,SAAA;AACX;AC7HO,MAAM,YAAY,CAAC,UAAU;AAChC,MAAI;AACA,UAAM,gBAAgB,MAAM,MAAM,GAAG,EAAE,CAAC;AACxC,UAAM,cAAc,KAAK,cAAc,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG,CAAC;AAC5E,WAAO,KAAK,MAAM,WAAW;AAAA,EAChC,SAAQ,GAAG;AACR,WAAO;AAAA,EACV;AACL;AAEO,MAAM,eAAe,CAAC,OAAO,kBAAkB,QAAQ;AAE1D,MAAI,CAAC,MAAO,QAAO;AAEnB,QAAM,UAAU,UAAU,KAAK;AAC/B,MAAI,EAAC,mCAAS,KAAK,QAAO;AAE1B,QAAM,cAAc,KAAK,IAAG,IAAK;AACjC,QAAM,YAAY,QAAQ,MAAM;AAEhC,SAAO,YAAY;AACvB;ACrBA,MAAM,gBAAgB,CAAC,SAAS;AAE5B,SAAO,sDAAsD,KAAK,IAAI;AAC1E;ACGA,MAAM,YAAY,CAAC,QAAQ;AACvB,SAAO,OAAO,CAAC,cAAc,GAAG,IAAI,MAAM;AAC9C;AAEO,MAAM,UAAUA,QAAAA,iBAAiB,oBAAoB,OAAO,MAAM,aAAa;AAClF,MAAI;AACA,WAAO,MAAM,QAAQ,WAAW,KAAK,UAAU,IAAI;AAAA,EACtD,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,uCAAuC;AAAA,EAC/G;AACA,CAAC;AAEM,MAAM,YAAYA,QAAAA,iBAAiB,sBAAsB,OAAO,MAAM,aAAa;AACtF,MAAI;AACA,WAAO,MAAM,QAAQ,WAAW,KAAK,OAAO,IAAI;AAAA,EACnD,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,uCAAuC;AAAA,EAC/G;AACA,CAAC;AAEM,MAAM,qBAAqBA,QAAAA,iBAAiB,+BAA+B,OAAO,MAAM,aAAa;;AACxG,MAAI;AACA,UAAM,QAAQ,SAAS,SAAU;AACjC,UAAM,kBAAgB,WAAM,aAAN,mBAAgB,kBAAiB,aAAa,QAAQ,eAAe;AAC3F,QAAI,CAAC,eAAe;AAChB,aAAO,SAAS,gBAAgB,wDAAwD;AAAA,IACpG;AACQ,WAAO,MAAM,QAAQ,WAAW,KAAK,oBAAoB,EAAE,eAAe;AAAA,EAC7E,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,4CAA4C;AAAA,EACpH;AACA,CAAC;AAEM,MAAM,aAAaA,QAAAA,iBAAiB,uBAAuB,OAAO,GAAG,aAAa;AACrF,MAAI;AACA,UAAM,QAAQ,SAAS,SAAU;AAEjC,UAAM,cAAc,MAAM,SAAS;AACnC,QAAI,eAAe,aAAa,WAAW,GAAG;AAC1C,aAAO,EAAE,YAAa;AAAA,IAClC;AACQ,WAAO,MAAM,SAAS,SAAS,aAAc,CAAA,EAAE,OAAQ;AAAA,EAC1D,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,0CAA0C;AAAA,EAClH;AACA,CAAC;AAEM,MAAM,eAAeA,QAAAA,iBAAiB,yBAAyB,OAAO,MAAM,aAAa;;AAC5F,MAAI;AACA,UAAM,QAAQ,SAAS,SAAU;AACjC,UAAM,gBAAc,WAAM,aAAN,mBAAgB,gBAAe;AACnD,WAAO,MAAM;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,CAAE;AAAA,MACF;AAAA;AAAA,QAEI,SAAS;AAAA,UACL,QAAQ,OAAO,WAAW,gBACpB,cAAS,UAAT,mBAAgB,IAAI,QAAQ,WAAU,KACtC;AAAA,UACN,eAAe,UAAU,WAAW;AAAA,QACxD;AAAA,MACA;AAAA,IACS;AAAA,EACJ,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,4CAA4C;AAAA,EACpH;AACA,CAAC;AAEM,MAAM,aAAaA,QAAAA,iBAAiB,uBAAuB,OAAO,GAAG,aAAa;;AACrF,MAAI;AACA,UAAM,QAAQ,SAAS,SAAU;AACjC,UAAM,gBAAc,WAAM,aAAN,mBAAgB,gBAAe;AACnD,WAAO,MAAM;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,EAAC,YAAW;AAAA,MACZ;AAAA,QACI,SAAS;AAAA,UACL,eAAe,UAAU,WAAW;AAAA,QACxD;AAAA,MACA;AAAA,IACS;AAAA,EACJ,SAAQ,KAAK;AACV,WAAO,SAAS,gBAAgB,OAAO,QAAQ,WAAW,MAAM,8CAA8C;AAAA,EACtH;AACA,CAAC;AAED,MAAMC,iBAAe;AAAA,EACjB,MAAM;AAAA;AAAA,EACN,QAAQ;AAAA;AAAA,EACR,iBAAiB;AAAA;AAAA,EACjB,SAAS;AAAA;AAAA,EACT,gBAAgB;AAAA;AAAA,EAChB,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA;AAAA,EACb,eAAe;AAAA;AAAA,EACf,aAAa;AAAA;AACjB;AAEO,MAAM,gBAAgBC,QAAAA,YAAY;AAAA,EACrC,MAAM;AAAA,EACV,cAAID;AAAAA,EACA,UAAU;AAAA,IACN,aAAa,CAAC,OAAO,WAAW;AAC5B,YAAM,OAAO,OAAO;AAAA,IACvB;AAAA,IACD,SAAS,CAAC,OAAO,WAAW;AACxB,YAAM,SAAS,OAAO;AAAA,IACzB;AAAA,IACD,YAAY,CAAC,OAAO,WAAW;AAC3B,UAAI,OAAO,QAAS,OAAM,UAAUA,eAAa;AAAA,IACpD;AAAA,IACD,cAAc,CAAC,OAAO,WAAW;AAC7B,UAAI,OAAO,YAAY,MAAM,iBAAiB,OAAO,OAAO,YAAY,UAAU;AAC9E,cAAM,gBAAgB,OAAO;AAAA,MAC7C;AAAA,IACS;AAAA,IACD,eAAe,OAAO,QAAQ;AAC1B,YAAM,cAAc,OAAO;AAAA,IAC9B;AAAA,IACD,mBAAmB,CAAC,OAAO,WAAW;AAClC,YAAM,iBAAiB,OAAO;AAAA,IAC1C;AAAA,EACK;AAAA,EACD,eAAe,CAAC,YAAY;AACxB,YAEK,QAAQ,QAAQ,SAAS,CAAC,UAAU;AACjC,YAAM,iBAAiB;AACvB,YAAM,kBAAkBA,eAAa;AACrC,YAAM,cAAcA,eAAa;AACjC,YAAM,UAAU;AAAA,IACnB,CAAA,EACA,QAAQ,QAAQ,WAAW,CAAC,OAAO,WAAW;;AAC3C,UAAI,OAAO,QAAQ,SAAS;AACxB,cAAM,iBAAiB;AACvB,YAAI,SAAO,YAAO,QAAQ,SAAf,mBAAqB,mBAAkB,UAAU;AACxD,gBAAM,iBAAgB,YAAO,QAAQ,SAAf,mBAAqB;AAC3C,uBAAa,QAAQ,kBAAiB,YAAO,QAAQ,SAAf,mBAAqB,aAAa;AAAA,QAChG;AAAA,MACA;AAAA,IACa,CAAA,EACA,QAAQ,QAAQ,UAAU,CAAC,OAAO,WAAW;;AAC1C,YAAM,iBAAiB;AACvB,YAAM,cAAY,YAAO,QAAQ,SAAf,mBAAqB,aAAU,YAAO,YAAP,mBAAgB;AACjE,YAAM,UAAU,UAAU,SAAS;AAAA,IACtC,CAAA,EAEA,QAAQ,UAAU,SAAS,CAAC,UAAU;AACnC,YAAM,cAAc;AACpB,YAAM,kBAAkBA,eAAa;AACrC,YAAM,iBAAiBA,eAAa;AACpC,YAAM,UAAU;AAAA,IACnB,CAAA,EACA,QAAQ,UAAU,WAAW,CAAC,OAAO,WAAW;;AAC7C,UAAI,OAAO,QAAQ,SAAS;AACxB,cAAM,cAAc;AACpB,cAAM,SAAS;AACf,cAAM,gBAAgBA,eAAa;AACnC,qBAAa,WAAW,eAAe;AACvC,cAAM,SAAO,YAAO,QAAQ,SAAf,mBAAqB,aAAY;AAC9C,cAAM,eAAc,YAAO,QAAQ,SAAf,mBAAqB;AAAA,MAC7D;AAAA,IACa,CAAA,EACA,QAAQ,UAAU,UAAU,CAAC,OAAO,WAAW;;AAC5C,YAAI,YAAO,YAAP,mBAAgB,UAAS,yBAAyB;AAClD,cAAM,cAAc;AACpB,YAAI,SAAO,YAAO,QAAQ,SAAf,mBAAqB,mBAAkB,UAAU;AACxD,gBAAM,iBAAgB,YAAO,QAAQ,SAAf,mBAAqB;AAC3C,uBAAa,QAAQ,kBAAiB,YAAO,QAAQ,SAAf,mBAAqB,aAAa;AAAA,QAChG;AAAA,MACA,OAAuB;AACH,cAAM,cAAc;AACpB,cAAM,cAAY,YAAO,QAAQ,SAAf,mBAAqB,aAAU,YAAO,YAAP,mBAAgB;AACjE,cAAM,UAAU,UAAU,SAAS;AAAA,MACvD;AAAA,IACa,CAAA,EAEA,QAAQ,mBAAmB,SAAS,CAAC,UAAU;AAC5C,YAAM,kBAAkB;AACxB,YAAM,UAAU;AAAA,IACnB,CAAA,EACA,QAAQ,mBAAmB,WAAW,CAAC,OAAO,WAAW;AACtD,UAAI,OAAO,QAAQ,SAAS;AACxB,cAAM,kBAAkB;AAAA,MAC5C;AAAA,IACa,CAAA,EACA,QAAQ,mBAAmB,UAAU,CAAC,OAAO,WAAW;;AACrD,YAAM,kBAAkB;AACxB,YAAM,cAAY,YAAO,QAAQ,SAAf,mBAAqB,aAAU,YAAO,YAAP,mBAAgB;AACjE,YAAM,UAAU,UAAU,SAAS;AAAA,IACtC,CAAA,EAEA,QAAQ,WAAW,SAAS,CAAC,UAAU;AACpC,YAAM,kBAAkB;AAAA,IAC3B,CAAA,EACA,QAAQ,WAAW,WAAW,CAAC,UAAU;AACtC,YAAM,SAAS;AACf,YAAM,kBAAkB;AAAA,IAC3B,CAAA,EACA,QAAQ,WAAW,UAAU,CAAC,UAAU;AACrC,YAAM,cAAc;AACpB,YAAM,SAAS;AACf,YAAM,kBAAkB;AAAA,IAC3B,CAAA,EAEA,QAAQ,aAAa,SAAS,CAAC,UAAU;AACtC,YAAM,UAAU;AAChB,YAAM,kBAAkB;AAAA,IAC3B,CAAA,EACA,QAAQ,aAAa,WAAW,CAAC,OAAO,WAAW;;AAChD,UAAI,OAAO,QAAQ,SAAS;AACxB,cAAM,cAAc;AACpB,cAAM,kBAAkB;AACxB,cAAM,SAAS;AACf,cAAM,SAAO,YAAO,QAAQ,SAAf,mBAAqB,aAAY;AAC9C,YAAI,SAAO,YAAO,QAAQ,SAAf,mBAAqB,iBAAgB,cAAY,YAAO,QAAQ,SAAf,mBAAqB,aAAY;AACzF,gBAAM,eAAc,YAAO,QAAQ,SAAf,mBAAqB;AAAA,QACjE;AAAA,MACA;AAAA,IACa,CAAA,EACA,QAAQ,aAAa,UAAU,CAAC,OAAO,WAAW;AAC/C,YAAM,cAAc;AACpB,YAAM,kBAAkB;AACxB,YAAM,SAAS;AACf,YAAM,cAAc;AAAA,IAGvB,CAAA,EAEA,QAAQ,WAAW,WAAW,CAAC,UAAU;AACtC,aAAO,OAAO,OAAOA,cAAY;AACjC,YAAM,cAAc;AAAA,IACvB,CAAA,EACA,QAAQ,WAAW,UAAU,CAAC,OAAO,WAAW;;AAC7C,YAAM,cAAY,YAAO,QAAQ,SAAf,mBAAqB,aAAU,YAAO,YAAP,mBAAgB;AACjE,YAAM,UAAU,UAAU,SAAS;AAAA,IACtC,CAAA;AAAA,EACR;AACL,CAAC;AAEM,MAAM,EAAE,aAAa,SAAS,YAAY,cAAc,UAAU,gBAAgB,mBAAmB,2BAA2B,cAAc;AACrJ,MAAe,kBAAA,cAAc;ACrPtB,SAAS,YAAY,iBAAiB,IAAI,YAAY,MAAM;AAC/D,SAAOE,uBAAe;AAAA,IAClB,SAAS;AAAA,MACL,UAAUC;AAAAA,IACb;AAAA,IACD;AAAA,IACA,YAAY,CAAC,yBACT,qBAAqB;AAAA,MACjB,mBAAmB;AAAA,MACnB,OAAO;AAAA,QACH,eAAe,EAAE,KAAK,UAAW;AAAA,MACpC;AAAA,IACjB,CAAa;AAAA,EACb,CAAK;AACL;ACdwB,SAAA,aAAa,EAAE,MAAM;AACzC,QAAM,UAAU,cAAc;AAC1B,MAAA,OAAO,WAAW,aAAa;AAC/B,YAAQ,MAAM;AACP,WAAA;AAAA,EAAA;AAEX,SAAQC,2BAAAA,IAAAC,WAAAA,UAAA,EAAS,IAAQ,SAAO,KAAC,CAAA;AACrC;ACPA,MAAM,iBAAiB,MACnBD,2BAAA,IAAC,OAAI,EAAA,WAAU,mBACX,UAACA,2BAAAA,IAAA,OAAA,EAAI,WAAU,UAAA,CAAU,EAC7B,CAAA;ACAJ,MAAM,iBAAiB,CAAC,EAAE,eAAe;AACrC,QAAM,WAAWE,WAAAA,YAAY;AACvB,QAAA,EAAE,QAAQ,aAAa,gBAAA,IAAoBC,WAAAA,YAAY,CAAA,UAAS,MAAM,QAAQ;AAEpFC,QAAAA,UAAU,MAAM;AACZ,QAAI,aAAa;AACb,eAAS,YAAY;AAAA,IAAA;AAAA,EACzB,GACD,CAAC,UAAU,WAAW,CAAC;AAEtB,MAAA,oBAAoB,UAAU,oBAAoB,WAAW;AACtD,WAAAJ,2BAAA,IAAC,gBAAe,EAAA,YAAU,KAAC,CAAA;AAAA,EAAA;AAGlC,MAAA,oBAAoB,YAAY,CAAC,QAAQ;AACzC,WAAQA,2BAAAA,IAAA,cAAA,EAAa,IAAG,iBAAgB,SAAO,MAAC;AAAA,EAAA;AAG7C,SAAA;AACX;ACrBA,MAAM,eAAe;AAAA,EACjB,UAA4C;AAAA,EAC5C,OAA0C;AAAA,EAC1C,UAA4C;AAAA,EAC5C,OAA0C;AAC9C;AAEA,SAAS,gBAAgB,KAAK;AACtB,MAAA,OAAO,QAAQ,UAAU;AACjB,WAAAA,2BAAA,IAAA,MAAA,EAAa,WAAU,eAAe,iBAA9B,GAAkC;AAAA,EAAA;AAGlD,MAAA,MAAM,eAAe,GAAG,GAAG;AAC3B,0CAAQ,MAAA,EAAG,WAAU,eAAe,UAAI,KAAA;AAAA,EAAA;AAGxC,MAAA,MAAM,QAAQ,GAAG,GAAG;AACpB,WAAO,IAAI,IAAI,CAAC,QAAQ,gBAAgB,GAAG,CAAC;AAAA,EAAA;AAG5C,MAAA,OAAO,OAAO,QAAQ,UAAU;AACzB,WAAA,OAAO,QAAQ,GAAG,EAAE;AAAA,MAAQ,CAAC,CAAC,GAAG,KAAK,MACzC,gBAAgB,KAAK;AAAA,IACzB;AAAA,EAAA;wCAGI,MAAG,EAAA,WAAU,eAAe,UAAA,OAAO,GAAG,GAAE;AACpD;AAEA,SAAS,SAAS,EAAE,OAAO,SAAS,UAAW,eAAe,aAAY;AACtE,QAAM,CAAC,MAAM,OAAO,IAAIK,MAAAA,SAAS,YAAY;AAC7C,QAAM,CAAC,QAAQ,SAAS,IAAIA,MAAAA,SAAS,CAAA,CAAE;AAEjC,QAAA,eAAe,CAAC,MAAM;AACxB,UAAM,EAAE,MAAM,MAAM,IAAI,EAAE;AAClB,YAAA,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAA,EAAQ;AAAA,EAClD;AAEM,QAAA,eAAe,CAAC,MAAM;AACxB,MAAE,eAAe;AACjB,UAAM,mBAAmB;AAAA,MAAU;AAAA,MAC/B;AAAA,QACI,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,MAAA;AAAA,IACf;AAEL,QAAI,OAAO,KAAK,gBAAgB,EAAE,SAAS,GAAG;AAC1C,gBAAU,gBAAgB;AAC1B;AAAA,IAAA;AAEJ,cAAU,CAAA,CAAE;AACZ,QAAI,SAAS,YAAY;AACZ,eAAA;AAAA,QACL,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,MAAA,CAClB;AAAA,IAAA,OACE;AACM,eAAA;AAAA,QACL,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,MAAA,CAClB;AAAA,IAAA;AAAA,EAET;AAEAD,QAAAA,UAAU,MAAM;AACZ,YAAQ,YAAY;AACpB,cAAU,CAAA,CAAE;AAAA,EAAA,GACb,CAAC,IAAI,CAAC;AAET,yCACK,QAAA,EAAK,UAAU,cAAc,WAAU,cACpC,UAAA;AAAA,IAAAJ,+BAAC,QAAG,WAAU,eAAe,UAAS,SAAA,aAAa,gBAAgB,eAAc;AAAA,IAEhF,SAAS,aACLM,gCAAA,OAAA,EAAI,WAAU,mBACX,UAAA;AAAA,qCAAC,SAAA,EAAM,SAAQ,YAAW,UAAgB,oBAAA;AAAA,MAC1CN,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,MAAK;AAAA,UACL,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ,UAAU;AAAA,UACV,WAAU;AAAA,UACV,cAAa;AAAA,QAAA;AAAA,MAAA;AAAA,IACjB,EACJ,CAAA,IAEAM,2BAAAA,KAAC,OAAI,EAAA,WAAU,mBACX,UAAA;AAAA,qCAAC,SAAA,EAAM,SAAQ,SAAQ,UAAK,SAAA;AAAA,MAC5BN,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,MAAK;AAAA,UACL,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ,UAAU;AAAA,UACV,WAAU;AAAA,UACV,cAAa;AAAA,QAAA;AAAA,MAAA;AAAA,IACjB,GACJ;AAAA,IAGH,SAAS,cACLM,gCAAA,OAAA,EAAI,WAAU,mBACX,UAAA;AAAA,qCAAC,SAAA,EAAM,SAAQ,SAAQ,UAAK,SAAA;AAAA,MAC5BN,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,MAAK;AAAA,UACL,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ,UAAU;AAAA,UACV,WAAU;AAAA,UACV,cAAa;AAAA,QAAA;AAAA,MAAA;AAAA,IACjB,GACJ;AAAA,IAGHM,2BAAAA,KAAA,OAAI,EAAA,WAAU,mBACX,UAAA;AAAA,qCAAC,SAAA,EAAM,SAAQ,YAAW,UAAM,UAAA;AAAA,MAChCN,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,MAAK;AAAA,UACL,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ,UAAU;AAAA,UACV,WAAU;AAAA,UACV,cAAa;AAAA,QAAA;AAAA,MAAA;AAAA,IACjB,GACJ;AAAA,KAEE,OAAO,KAAK,MAAM,EAAE,SAAS,KAAK,kBAE5BM,2BAAA,KAAAC,qBAAA,EAAA,UAAA;AAAA,MAACP,2BAAAA,IAAA,MAAA,EAAG,WAAU,iBAAgB;AAAA,MAC7BM,2BAAAA,KAAA,MAAG,EAAA,WAAU,gBACT,UAAA;AAAA,QAAA,OAAO,KAAK,MAAM,EAAE,SAAS,KAAK,gBAAgB,MAAM;AAAA,QACxD,iBAAiB,gBAAgB,aAAa;AAAA,MAAA,EACnD,CAAA;AAAA,IAAA,GACJ;AAAA,IAGHN,2BAAAA,IAAA,YAAO,MAAK,UAAS,WAAU,gBAC3B,UAAA,SAAS,aAAa,uBAAuB,QAClD,CAAA;AAAA,EAAA,GACJ;AAER;AAEA,MAAeQ,aAAAA,MAAAA,KAAK,QAAQ;ACtJ5B,SAAwB,iBAAiB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,GAAG;AACC,QAAM,CAAC,UAAU,WAAW,IAAIH,MAAAA,SAAS,CAAC;AAE1CD,QAAAA,UAAU,MAAM;AACZ,QAAI,QAAQ;AACR,kBAAY,EAAE;AACR,YAAA,QAAQ,YAAY,MAAM;AAC5B,oBAAY,CAAQ,SAAA;AAChB,cAAI,QAAQ,GAAG;AACX,0BAAc,KAAK;AACZ,mBAAA;AAAA,UAAA;AAEX,iBAAO,OAAO;AAAA,QAAA,CACjB;AAAA,SACF,GAAI;AACA,aAAA,MAAM,cAAc,KAAK;AAAA,IAAA;AAAA,EACpC,GACD,CAAC,MAAM,CAAC;AAEX,QAAM,iBAAiB,MAAM;AACzB,QAAI,CAAC,UAAU;AACJ,aAAA;AAAA,QACH,UAAU;AAAA,QACV,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IAAA;AAGJ,QAAI,WAAW;AACJ,aAAA;AAAA,QACH,UAAU;AAAA,QACV,MAAM;AAAA,MACV;AAAA,IAAA;AAGJ,QAAI,WAAW,GAAG;AACP,aAAA;AAAA,QACH,UAAU;AAAA,QACV,MAAM,gBAAgB,QAAQ;AAAA,MAClC;AAAA,IAAA;AAGJ,QAAI,OAAO;AACA,aAAA;AAAA,QACH,UAAU;AAAA,QACV,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IAAA;AAGG,WAAA;AAAA,MACH,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AAAA,EACJ;AAEA,QAAM,cAAc,eAAe;AAG/B,SAAAE,2BAAA,KAAC,OAAI,EAAA,WAAU,oBACX,UAAA;AAAA,IAAAN,2BAAAA,IAAC,OAAE,UAAkE,qEAAA,CAAA;AAAA,IACpE,YAAY,QAAQA,2BAAA,IAAC,OAAE,WAAU,sBAAsB,sBAAY,MAAK;AAAA,IACzEA,2BAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,MAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,YAAY;AAAA,QACtB,WAAU;AAAA,QAET,UAAY,YAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACjB,GACJ;AAER;AC/EA,SAAS,SAAU,MAAM,EAAC,UAAU,OAAO,UAAU,MAAK,GAAG;AAEzD,QAAM,OAAO,CAAA;AAEb,QAAM,gBAAgB;AAEtB,QAAM,aAAa;AACnB,QAAM,gBAAgB;AAEtB,QAAM,iBAAiB;AAAA,IACnB,UAAU;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACZ;AAAA,IACD,OAAO;AAAA,MACH,UAAU;AAAA,MACV,SAAS;AAAA,IACZ;AAAA,IACD,OAAO;AAAA,MACH,UAAU;AAAA;AAAA,MAEV,cAAc;AAAA,MACd,SAAS;AAAA,IACZ;AAAA,IACD,UAAU;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACZ;AAAA,EACT;AAEI,MAAI,SAAS,YAAY;AACrB,QAAI,CAAC,SAAS,QAAQ;AAClB,WAAK,WAAW,eAAe,SAAS;AAAA,IAC3C,WAAU,CAAC,cAAc,KAAK,QAAQ,GAAG;AACtC,WAAK,WAAW,eAAe,SAAS;AAAA,IAC3C;AAED,QAAI,CAAC,MAAM,QAAQ;AACf,WAAK,QAAQ,eAAe,MAAM;AAAA,IACrC,WAAU,CAAC,WAAW,KAAK,KAAK,GAAG;AAChC,WAAK,QAAQ,eAAe,MAAM;AAAA,IACrC;AAAA,EACT,OAAW;AAEH,QAAI,CAAC,MAAM,QAAQ;AACf,WAAK,aAAa,eAAe,MAAM;AAAA,IACnD,WAAmB,MAAM,SAAS,IAAI;AAC1B,WAAK,aAAa,eAAe,MAAM;AAAA,IAC1C,WAAU,CAAC,WAAW,KAAK,KAAK,GAAG;AAChC,WAAK,aAAa,eAAe,MAAM;AAAA,IAC1C;AAAA,EACJ;AAmBD,MAAI,CAAC,SAAS,QAAQ;AAClB,SAAK,WAAW,eAAe,SAAS;AAAA,EAChD,WAAe,SAAS,cAAc,CAAC,cAAc,KAAK,QAAQ,GAAG;AAC7D,SAAK,WAAW,eAAe,SAAS;AAAA,EAC3C;AAED,SAAO;AACX;AC5EO,SAAS,aAAa,OAAO;AAChC,QAAM,WAAWS,WAAAA,YAAY;AAE7BL,QAAAA,UAAU,MAAM;AACZ,aAAS,QAAQ;AAAA,EAAA,GAClB,CAAC,UAAU,KAAK,CAAC;AACxB;ACOA,MAAM,aAAa;AAAA,EACf,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AACd;AAEA,MAAM,kBAAkB;AAAA,EACpB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AACd;AAEA,SAAS,SAAS,EAAE,QAAQ;AACxB,QAAM,WAAWM,WAAAA,YAAY;AAC7B,QAAM,WAAWR,WAAAA,YAAY;AAC7B,QAAM,EAAE,eAAe,SAAS,QAAQ,gBAAgB,aAAa,gBAAgB,IAAIC,WAAAA,YAAY,CAAC,UAAU,MAAM,QAAQ;AAEjH,eAAA,GAAG,WAAW,IAAI,CAAC,MAAM,UAA4C,EAAE;AAGpFC,QAAAA,UAAU,MAAM;AACN,UAAA,kBAAkB,SAAS,cAAc,0BAA0B;AACzE,QAAI,iBAAiB;AACD,sBAAA,UAAU,gBAAgB,IAAI;AAAA,IAAA,OAC3C;AACG,YAAA,OAAO,SAAS,cAAc,MAAM;AAC1C,WAAK,OAAO;AACP,WAAA,UAAU,gBAAgB,IAAI;AAC1B,eAAA,KAAK,YAAY,IAAI;AAAA,IAAA;AAIlC,UAAM,eAAe,GAAG,OAAO,SAAS,MAAM,SAAS,SAAS,UAAU,YAAY,SAAS,aAAa,YAAY,UAAU;AAC9H,QAAA,gBAAgB,SAAS,cAAc,uBAAuB;AAClE,QAAI,CAAC,eAAe;AACA,sBAAA,SAAS,cAAc,MAAM;AAC7C,oBAAc,MAAM;AACX,eAAA,KAAK,YAAY,aAAa;AAAA,IAAA;AAE3C,kBAAc,OAAO;AAEZ,aAAA,WAAW,IAAI,CAAC;AAAA,EAAA,GAC1B,CAAC,MAAM,QAAQ,CAAC;AAGnBA,QAAAA,UAAU,MAAM;AACZ,QAAI,QAAQ;AACR,eAAS,OAAO;AAAA,IAAA,WACT,gBAAgB,eAAe;AACtC,eAAS,gBAAgB;AAAA,IAAA;AAAA,EAC7B,GACD,CAAC,QAAQ,WAAW,CAAC;AAExBA,QAAAA,UAAU,MAAM;AACZ,QAAI,mBAAmB,cAAc;AACjC,eAAS,gBAAgB;AAAA,IAAA;AAAA,EAC7B,GACD,CAAC,cAAc,CAAC;AAEb,QAAA,eAAe,OAAO,SAAS;AACjC,UAAM,SAAS,SAAS,aAAa,QAAQ,IAAI,IAAI,UAAU,IAAI;AACnE,UAAM,SAAS,MAAM;AAAA,EACzB;AAEA,QAAM,eAAe,YAAY;AACvB,UAAA,SAAS,oBAAoB;AAAA,EACvC;AAEA,QAAM,mBAAmB,MAAM;AAClB,aAAA,WAAW,IAAI,CAAC;AACrB,QAAA;AACJ,YAAQ,MAAM;AAAA,MACV,KAAK;AACI,aAAA;AACL;AAAA,MACJ,KAAK;AACI,aAAA;AACL;AAAA,MACJ,KAAK;AACI,aAAA;AACL;AAAA,MACJ;AACS,aAAA;AAAA,IAAA;AAEb,aAAS,EAAE;AAAA,EACf;AAEAA,QAAAA,UAAU,MAAM;AACN,UAAA,QAAQ,aAAa,QAAQ,eAAe;AAClD,QAAI,MAAO,UAAS,aAAa,KAAK,CAAC;AACvC,QAAI,SAAS,cAAc,CAAC,gBAAgB,eAAe;AAAA,EAC5D,GAAA,CAAC,MAAM,UAAU,QAAQ,CAAC;AAE7B,QAAM,kBAAkB,MAAM;;AACnB,WAAA;AAAA,MACH,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ,SAAS;AAAA,MACjB,gBAAe,cAAS,cAAc,0BAA0B,MAAjD,mBAAoD;AAAA,MACnE,OAAO,OAAO,SAAS;AAAA,IAC3B;AAAA,EACJ;AAIQ,SAAAE,2BAAA,KAAAC,qBAAA,EAAA,UAAA;AAAA,IAAAP,+BAAC,YAAO,MAAK,uBACR,eAAK,UAAU,gBAAiB,CAAA,GACrC;AAAA,oCAEC,QAAK,EAAA,WAAU,mBAAkB,WAAS,MAAC,UAAS,8BACjD,UAAA;AAAA,MAAAA,2BAAA,IAAC,MAAG,EAAA,WAAU,mBAAmB,UAAA,SAAS,OAAM;AAAA,OAE9C,SAAS,cAAc,SAAS,2CAC7B,WAAQ,EAAA,WAAS,MAAC,UAAS,2BACxB,UAAAA,2BAAA;AAAA,QAACW;AAAAA,QAAA;AAAA,UACG;AAAA,UACA,UAAU;AAAA,UACV,WAAW;AAAA,UACX,eAAe,UAAU,UAAU;AAAA,QAAA;AAAA,MAAA,GAE3C;AAAA,MAGH,SAAS,cACLX,2BAAA,IAAA,aAAQ,WAAS,MAAC,UAAS,oCACxB,UAAAA,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,UAAU;AAAA,UACV,WAAW,oBAAoB;AAAA,UAC/B,QAAQ,oBAAoB;AAAA,UAC5B,UAAU,CAAC,CAAC;AAAA,UACZ,OAAO;AAAA,QAAA;AAAA,MAAA,GAEf;AAAA,MAGJM,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,WAAU;AAAA,UACV,SAAS,MAAM,iBAAqB;AAAA,UACpC,cACI,SAAS,aAAa,6BAClB,SAAS,UAAU,mCACf;AAAA,UAGX,UAAA;AAAA,YAAA,SAAS,cAAc;AAAA,YACvB,SAAS,WAAW;AAAA,YACpB,SAAS,cAAc;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAC5B,EACJ,CAAA;AAAA,EAAA,GACJ;AAER;AAEA,MAAeE,WAAAA,MAAAA,KAAK,QAAQ;ACxKrB,MAAM,OAAO;AAAA;AAAA,EAEhB,qCAAO,OAAI,EAAA,MAAK,WAAU,OAAM,QAAO,QAAO,QAAO,SAAQ,aAAY,MAAK,OAAM,WAAU,SAAQ,eAAY,QAAO,OAAM,8BAA6B,UAACR,2BAAA,IAAA,QAAA,EAAK,GAAE,kYAAA,CAAiY,EAAE,CAAA;AAAA;AAAA,EAGviB,MAAOA,2BAAAA,IAAA,OAAA,EAAI,GAAE,OAAM,GAAE,OAAM,OAAM,YAAW,QAAO,YAAW,SAAQ,qBAAoB,UAACA,+BAAA,KAAA,EAAE,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAAA,+BAAC,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,wQAAuQ,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,kSAAiS,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,yNAAyN,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,sNAAqN,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,kOAAiO,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAAA,IAAC,QAAK,EAAA,GAAE,+HAA6H,EAAE,CAAA;AAAA,EAAA,EAAI,CAAA,EAAI,CAAA,GAAI;AAAA;AAAA,EAGlgD,MAAOA,2BAAAA,IAAA,OAAA,EAAI,GAAE,OAAM,GAAE,OAAM,OAAM,YAAW,QAAO,YAAW,SAAQ,qBAAoB,UAACA,+BAAA,KAAA,EAAE,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAAA,+BAAC,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,yRAAwR,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,wOAAuO,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAA,IAAC,QAAK,EAAA,GAAE,sNAAqN,CAAA,GAAE;AAAA,mCAAK,KAAE,EAAA,UAAAA,2BAAAA,IAAC,QAAK,EAAA,GAAE,onBAAknB,EAAE,CAAA;AAAA,EAAA,EAAI,CAAA,EAAI,CAAA,GAAI;AAAA;AAAA;AAAA;AAAA,EAMl/C,SAASA,2BAAA,IAAC,OAAI,EAAA,GAAE,OAAM,GAAE,OAAM,OAAM,QAAO,QAAO,QAAO,SAAQ,aAAY,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAA;AAAA,oCAAE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,6SAA4S,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,sGAAqG,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,kKAAiK,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,qPAAoP,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,yZAAwZ,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,IAAA,EAAC,CAAA;AAAA,EAAA,EAAA,CAAI,EAAI,CAAA;AAAA;AAAA,EAGx4C,QAAQA,2BAAA,IAAC,OAAI,EAAA,GAAE,OAAM,GAAE,OAAM,OAAM,QAAO,QAAO,QAAO,SAAQ,aAAY,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAA;AAAA,oCAAE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0pBAAypB,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0NAAyN,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0NAAyN,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,oNAAmN,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0NAAyN,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,wNAAuN,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,2NAA0N,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,IAAA,EAAC,CAAA;AAAA,EAAA,EAAA,CAAI,EAAI,CAAA;AAAA;AAAA;AAAA;AAAA,EAMhpE,MAAMA,2BAAA,IAAC,OAAI,EAAA,GAAE,OAAM,GAAE,OAAM,OAAM,YAAW,QAAO,YAAW,SAAQ,qBAAoB,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAA;AAAA,oCAAE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,ogBAAmgB,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,4NAA4N,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,iRAAgR,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0VAAyV,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0MAAyM,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,wNAAuN,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,MAAA,EAAC,CAAA;AAAA,IAAA,EAAI,CAAA;AAAA,EAAA,EAAA,CAAI,EAAI,CAAA;AAAA;AAAA,EAGl9D,MAAMA,2BAAA,IAAC,OAAI,EAAA,GAAE,OAAM,GAAE,OAAM,OAAM,YAAW,QAAO,YAAW,SAAQ,qBAAoB,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAA;AAAA,oCAAE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,iTAAgT,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,2LAA0L,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0OAAyO,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,2dAA0d,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,IAAA,EAAC,CAAA;AAAA,EAAA,EAAA,CAAI,EAAI,CAAA;AAAA;AAAA,EAGh3C,OAAOA,2BAAA,IAAC,OAAI,EAAA,GAAE,OAAM,GAAE,OAAM,OAAM,YAAW,QAAO,YAAW,SAAQ,qBAAoB,0CAAC,KAAE,EAAA,UAAA;AAAA,IAAA;AAAA,oCAAE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,wCAAE,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,igBAAggB,CAAA;AAAA,UAAE;AAAA,QAAA,GAAC;AAAA,QAAI;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,iIAAgI,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0GAAyG,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,wGAAuG,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,0GAAyG,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,sCAAE,KAAE,EAAA,UAAA;AAAA,QAAA;AAAA,QAACA,2BAAAA,IAAC,QAAK,EAAA,GAAE,iIAAgI,CAAA;AAAA,QAAE;AAAA,MAAA,GAAC;AAAA,MAAI;AAAA,IAAA,EAAC,CAAA;AAAA,EAAA,EAAA,CAAI,EAAI,CAAA;AAEzyC;AC1BA,MAAM,eAAe,CAAC,QAAQ;AACtB,MAAA,CAAC,IAAY,QAAA;AACV,SAAA,OAAO,GAAG,EAChB,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ,EACtB,QAAQ,MAAM,QAAQ;AAC3B;AAGA,MAAM,gBAAgB;AAAA,EAClB,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EAAA;AAErB;AAEA,MAAM,YAAY,MAAM;AACd,QAAA,CAAC,YAAY,IAAIY,yBAAgB;AAEvC,QAAM,YAAY,aAAa,aAAa,IAAI,MAAM,CAAC,KAAK;AACtD,QAAA,gBAAgB,aAAa,IAAI,SAAS;AAE1C,QAAA,EAAE,OAAO,YAAY,IAAI,cAAc,SAAS,KAAK,cAAc,KAAK;AAC9E,QAAM,oBAAoB,gBACpB,aAAa,mBAAmB,aAAa,CAAC,IAC9C;AAEN,eAAa,GAAG,KAAK,MAAM,UAA4C,EAAE;AAEzE,yCACK,OAAA,EAAI,WAAU,mBAAkB,MAAK,SAClC,UAAA;AAAA,mCAAC,MAAA,EAAG,WAAU,mBAAmB,UAAM,OAAA;AAAA,IACtCZ,2BAAAA,IAAA,UAAO,EAAA,MAAK,uBACR,UAAA;AAAA;AAAA;AAAA,6BAGY,KAAK;AAAA,oCACE,qBAAqB,WAAW;AAAA,oBAExD;AAAA,IAECM,2BAAAA,KAAA,OAAI,EAAA,WAAU,cACX,UAAA;AAAA,MAAAN,2BAAAA,IAAC,SAAI,WAAU,oBAAmB,eAAY,QACzC,UAAA,KAAK,SAAS,KAAA,CACnB;AAAA,MAECM,2BAAAA,KAAA,OAAI,EAAA,WAAU,wBACX,UAAA;AAAA,QAACA,2BAAAA,KAAA,MAAA,EAAG,WAAU,oBAAmB,UAAA;AAAA,UAAA;AAAA,UAAQ;AAAA,QAAA,GAAU;AAAA,QAElDN,2BAAA,IAAA,KAAA,EAAE,WAAU,2BACR,+BAAqB,aAC1B;AAAA,QAEAA,2BAAA;AAAA,UAACa,SAAA;AAAA,UAAA;AAAA,YACG,IAAG;AAAA,YACH,WAAU;AAAA,YACV,cAAW;AAAA,YACd,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAED,EACJ,CAAA;AAAA,IAAA,EACJ,CAAA;AAAA,EAAA,GACJ;AAER;ACnFA,MAAM,YAAY,CAAC,EAAE,QAAQ,aAAa;AACtC,QAAM,WAAWJ,WAAAA,YAAY;AAE7B,QAAM,WAAW;AAAA,IACb,EAAE,MAAM,SAAS,MAAM,KAAK,MAAM,OAAO,UAAU;AAAA,IACnD,EAAE,MAAM,gBAAgB,MAAM,KAAK,MAAM,OAAO,iBAAiB;AAAA,IACjE,GAAI,SAAS;AAAA,MACT,EAAE,MAAM,mBAAmB,MAAM,KAAK,SAAS,OAAO,YAAY;AAAA,MAClE,EAAE,MAAM,gBAAgB,MAAM,KAAK,QAAQ,OAAO,kBAAkB;AAAA,IAAA,IACpE,CAAA;AAAA,EACR;AAEA,SACKH,2BAAAA,KAAA,OAAA,EAAI,WAAU,wBAAuB,cAAW,sBAC7C,UAAA;AAAA,IAAAN,+BAACa,SAAAA,MAAK,EAAA,IAAG,KAAI,WAAU,wBAAuB,cAAW,cACrD,UAACb,2BAAAA,IAAA,QAAA,EAAK,MAAK,OAAM,eAAY,QAAQ,UAAA,KAAK,KAAK,CAAA,GACnD;AAAA,IAEAA,2BAAAA,IAAC,QAAG,WAAU,2BACT,mBAAS,IAAI,CAAC,SACXA,2BAAAA,IAAC,MACG,EAAA,UAAAA,2BAAA;AAAA,MAACa,SAAA;AAAA,MAAA;AAAA,QACG,IAAI,KAAK;AAAA,QACT,gBAAc,SAAS,aAAa,KAAK,OAAO,SAAS;AAAA,QACzD,OAAO,KAAK;AAAA,QAEZ,UAAAb,2BAAA,IAAC,UAAK,MAAK,OAAM,cAAY,KAAK,OAAQ,eAAK,KAAK,CAAA;AAAA,MAAA;AAAA,IANnD,EAAA,GAAA,KAAK,IAQd,CACH,GACL;AAAA,IAECA,+BAAA,OAAA,EAAI,WAAU,uBACV,mBAEOM,2BAAA,KAAAC,qBAAA,EAAA,UAAA;AAAA,MAAAP,2BAAA;AAAA,QAACa,SAAA;AAAA,QAAA;AAAA,UACG,IAAG;AAAA,UACH,WAAU;AAAA,UACV,SAAS;AAAA,UACT,OAAM;AAAA,UAEN,yCAAC,QAAK,EAAA,MAAK,OAAM,cAAW,SAAS,eAAK,KAAK,CAAA;AAAA,QAAA;AAAA,MACnD;AAAA,MACAb,2BAAA;AAAA,QAACa,SAAA;AAAA,QAAA;AAAA,UACG,IAAG;AAAA,UACH,WAAU;AAAA,UACV,OAAM;AAAA,UAEN,yCAAC,QAAK,EAAA,MAAK,OAAM,cAAW,WAAW,eAAK,KAAK,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACrD,EAAA,CACJ,IAEAb,2BAAA;AAAA,MAACa,SAAA;AAAA,MAAA;AAAA,QACG,IAAG;AAAA,QACH,WAAU;AAAA,QACV,OAAM;AAAA,QAEN,yCAAC,QAAK,EAAA,MAAK,OAAM,cAAW,SAAS,eAAK,KAAK,CAAA;AAAA,MAAA;AAAA,IAAA,EAG3D,CAAA;AAAA,EAAA,GACJ;AAER;AAEA,MAAeL,cAAAA,MAAAA,KAAK,SAAS;AC/D7B,MAAM,YAAY,MAAM;AACpB,QAAM,WAAWN,WAAAA,YAAY;AAC7B,QAAM,EAAE,QAAQ,oBAAoBC,WAAY,YAAA,CAAA,UAAS,MAAM,QAAQ;AAEvEC,QAAAA,UAAU,MAAM;AACR,QAAA;AACJ,QAAI,YAAY;AAEhB,UAAM,gBAAgB,MAAM;AACpB,UAAA,aAAa,UAAU,oBAAoB,UAAU;AACrD,mBAAW,YAAY,MAAM;AACzB,kBAAQ,IAAI,UAAU;AACtB,mBAAS,YAAY;AAAA,QAAA,GACtB,KAAK,GAAI;AAAA,MAAA;AAAA,IAEpB;AAEA,QAAI,oBAAoB,QAAQ;AAC5B,eAAS,YAAY;AAAA,IAAA;AAGX,kBAAA;AAEd,WAAO,MAAM;AACG,kBAAA;AACR,UAAA,wBAAwB,QAAQ;AAAA,IACxC;AAAA,EACD,GAAA,CAAC,UAAU,QAAQ,eAAe,CAAC;AAEhC,QAAA,SAAS,CAAC,OAAO;AACnB,OAAG,eAAe;AAClB,aAAS,YAAY;AAAA,EACzB;AAGI,SAAAE,2BAAA,KAAC,OAAI,EAAA,WAAU,wBACX,UAAA;AAAA,IAAAN,2BAAAA,IAAC,SAAI,WAAU,kBACX,yCAACc,aAAU,EAAA,QAAgB,QAAe,EAC9C,CAAA;AAAA,mCACC,QAAK,EAAA,WAAU,mBACZ,UAAAd,2BAAA,IAACe,qBAAO,EACZ,CAAA;AAAA,EAAA,GACJ;AAER;AAEA,MAAeP,cAAAA,MAAAA,KAAK,SAAS;ACrD7B,MAAM,eAAe,CAAC,EAAC,WAAU;AAGzB,SAAAR,2BAAA,IAAC,SACI,UACL,KAAA,CAAA;AAER;ACPA,MAAM,eAAe,CAAC,EAAC,WAAU;AAGzB,SAAAA,2BAAA,IAAC,SACI,UACL,KAAA,CAAA;AAER;ACPA,MAAM,WAAW,MAAM;AAGf,SAAAA,2BAAA,IAAC,SAAI,UAEL,OAAA,CAAA;AAER;ACLA,MAAM,aAAa,MAAM;AAErB,SACKA,2BAAAA,IAAA,OAAA,EAEO,UAACA,2BAAAA,IAAAe,WAAA,QAAA,CAAO,CAAA,GAEhB;AAER;ACTA,MAAM,aAAa,MAAM;AAErB,SACKf,2BAAAA,IAAA,OAAA,EAEG,UAACA,2BAAAA,IAAAe,WAAA,QAAA,CAAO,CAAA,GAEZ;AAER;ACXA,MAAM,mBAAmB,MAAM;AAGvB,SAAAf,2BAAA,IAAC,SAAI,UAEL,WAAA,CAAA;AAER;ACJA,MAAM,aAAa,MAAM;AAErB,wCACK,QAAK,EAAA,WAAU,oBACZ,UAAAA,+BAACe,WAAAA,SAAO,CAAA,GACZ;AAER;ACIO,MAAM,cAAc;AAAA,EACvB;AAAA,IACI,MAAM;AAAA,IACN,wCAAUA,WAAO,QAAA,EAAA;AAAA,IACjB,UAAU;AAAA;AAAA,MAEN;AAAA,QACI,wCAAUC,aAAU,EAAA;AAAA,QACpB,aAAa,MAAM,aAAa;AAAA;AAAA,QAChC,UAAU;AAAA;AAAA,UAEN;AAAA,YACI,OAAO;AAAA,YACP,SAAUhB,2BAAAA,IAAA,QAAA,EAAK,UAAI,OAAA,CAAA;AAAA,UACvB;AAAA;AAAA,UAEA;AAAA,YACI,MAAM;AAAA,YACN,wCAAU,YAAW,EAAA;AAAA,YACrB,UAAU;AAAA;AAAA,cAEN;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,UAAS,EAAA,MAAK,QAAQ,CAAA;AAAA,cACpC;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,UAAS,EAAA,MAAK,WAAW,CAAA;AAAA,cACvC;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,UAAS,EAAA,MAAK,WAAW,CAAA;AAAA,cACvC;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAAUA,2BAAA,IAAA,cAAA,EAAa,IAAG,iBAAgB,SAAO,KAAC,CAAA;AAAA,cAAA;AAAA,YACtD;AAAA,UAER;AAAA;AAAA,UAEA;AAAA,YACI,MAAM;AAAA,YACN,wCAAU,UAAS,CAAA,CAAA;AAAA,UACvB;AAAA;AAAA,UAEA;AAAA,YACI,MAAM;AAAA,YACN,wCAAU,YAAW,EAAA;AAAA,YACrB,UAAU;AAAA;AAAA,cAEN;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,cAAa,EAAA,MAAK,SAAS,CAAA;AAAA,cACzC;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,cAAa,EAAA,MAAK,YAAY,CAAA;AAAA,gBACxC,SAAS;AAAA,gBACT,mBAAmB;AAAA,cACvB;AAAA;AAAA,cAGA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,cAAa,EAAA,MAAK,OAAO,CAAA;AAAA,cACvC;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,cAAa,EAAA,MAAK,SAAS,CAAA;AAAA,gBACrC,SAAS;AAAA,gBACT,mBAAmB;AAAA,cACvB;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAASA,2BAAAA,IAAC,cAAa,EAAA,MAAK,OAAO,CAAA;AAAA,gBACnC,SAAS;AAAA,gBACT,mBAAmB;AAAA,cACvB;AAAA;AAAA,cAGA;AAAA,gBACI,MAAM;AAAA,gBACN,SAAUA,2BAAA,IAAA,cAAA,EAAa,IAAG,gBAAe,SAAO,KAAC,CAAA;AAAA,cAAA;AAAA,YACrD;AAAA,UAGR;AAAA;AAAA,UAEA;AAAA,YACI,MAAM;AAAA,YACN,wCAAU,YAAW,EAAA;AAAA,YACrB,SAAS;AAAA,YACT,mBAAmB;AAAA,YACnB,UAAU;AAAA;AAAA,cAEN;AAAA,gBACI,MAAM;AAAA,gBACN,wCAAU,kBAAiB,CAAA,CAAA;AAAA,cAC/B;AAAA;AAAA,cAEA;AAAA,gBACI,MAAM;AAAA,gBACN,SAAUA,2BAAA,IAAA,cAAA,EAAa,IAAG,kBAAiB,SAAO,KAAC,CAAA;AAAA,cAAA;AAAA,YACvD;AAAA,UAER;AAAA;AAAA,UAEA;AAAA,YACI,MAAM;AAAA,YACN,wCAAU,WAAU,CAAA,CAAA;AAAA,UAAA;AAAA,QACxB;AAAA,MAER;AAAA;AAAA,MAEA;AAAA,QACI,MAAM;AAAA,QACN,SAAUA,2BAAA,IAAA,cAAA,EAAa,IAAG,UAAS,SAAO,KAAC,CAAA;AAAA,MAAA;AAAA,IAC/C;AAAA,EACJ;AAER;ACxIA,SAAS,aAAa,QAAQ;AAC1B,SAAO,OAAO,IAAI,CAAC,OAAO,QAAQ;AACxB,UAAA,UAAU,MAAM,UACjBA,2BAAAA,IAAA,gBAAA,EAAe,YAAY,MAAM,mBAC7B,UAAA,MAAM,QACX,CAAA,IAEA,MAAM;AAGV,WACKA,2BAAAA,IAAAiB,WAAAA,OAAA,EAAgB,MAAM,MAAM,MAAM,SAAkB,OAAO,MAAM,OAC7D,gBAAM,YAAY,aAAa,MAAM,QAAQ,KADtC,GAEZ;AAAA,EAAA,CAEP;AACL;AAEA,SAAwB,cAAc;AAClC,SAAQjB,2BAAAA,IAAAkB,WAAAA,QAAA,EAAQ,UAAa,aAAA,WAAW,GAAE;AAC9C;ACrBA,SAAS,MAAM;AAEP,SAAAlB,2BAAAA,IAAC,OAAI,EAAA,WAAU,aACX,UAAAA,2BAAAA,IAAC,OAAI,EAAA,WAAU,OACX,UAAAA,2BAAA,IAAC,aAAW,CAAA,CAAA,EAChB,CAAA,GACJ;AAER;ACHsB,eAAA,UAAU,KAAK,SAAS;AAC1C,QAAM,QAAQ,YAAY,CAAC,GAAG,GAAG;AAElB,iBAAA,yBAAyB,KAAKmB,QAAO;AAC1C,UAAA,gBAAgBC,WAAAA,YAAY,aAAa,GAAG;AAC1C,YAAA,IAAI,sBAAqB,GAAG;AAG9B,UAAA,qBAAqB,cACtB,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,WAAW,EACvC,IAAI,CAAC,EAAE,YAAYD,OAAM,SAAS,MAAM,YAAA,CAAa,CAAC;AAG3D,UAAM,yBAAyB,CAAC;AAEhC,kBAAc,QAAQ,CAAC,EAAE,OAAO,aAAa;;AACnC,YAAA,aAAY,WAAM,YAAN,mBAAe;AAC7B,UAAA,aAAa,UAAU,WAAW;AAClC,+BAAuB,KAAK,UAAU,UAAUA,QAAO,MAAM,CAAC;AAAA,MAAA;AAAA,IAClE,CACH;AAED,UAAM,QAAQ,IAAI,CAAC,GAAG,oBAAoB,GAAG,sBAAsB,CAAC;AAAA,EAAA;AAElE,QAAA,yBAAyB,IAAI,aAAa,KAAK;AAE7C,UAAA,iBAAiB,MAAM,SAAS;AAExC,wCACK,WAAW,UAAX,EAAoB,OAAO,SACxB,yCAACE,WAAAA,UAAS,EAAA,OACN,yCAACC,SAAa,cAAA,cAAA,EAAA,UAAU,IAAI,aAAa,SACrC,yCAAC,KAAI,CAAA,CAAA,GACT,GACJ,EACJ,CAAA;AAER;AAEa,MAAA,aAAaC,oBAAc,IAAI;AAErC,SAAS,gBAAgB;AAC5B,SAAOC,MAAAA,WAAW,UAAU;AAChC;;;;"}