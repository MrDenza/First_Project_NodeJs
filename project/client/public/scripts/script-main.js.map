{"version":3,"file":"script-main.js","sources":["../../source/constants/apiRoutes.js","../../source/utils/postApi.js","../../source/utils/token.js","../../source/utils/isEnglistText.js","../../source/redux/reducers/postsData/favoritesThunks.js","../../source/redux/reducers/userData/userDataSlice.js","../../source/redux/reducers/appSettings/appSettingsSlice.js","../../source/utils/deepMerge.js","../../source/utils/db.js","../../source/utils/fileUtils.js","../../source/utils/getApi.js","../../source/redux/reducers/postsData/postsDataSlice.js","../../source/redux/store.js","../../source/components/Auth/AuthForm/AuthForm.jsx","../../source/components/Auth/UnverifiedNotice/UnverifiedNotice.jsx","../../source/utils/validateAuthForm.js","../../source/hooks/usePageTitle.jsx","../../source/pages/app/auth/AuthPage.jsx","../../source/elements/svgIcon.jsx","../../source/pages/app/error/ErrorPage.jsx","../../source/components/App/AppNavbar.jsx","../../source/components/App/ConfirmNavigationModal.jsx","../../source/layouts/AppLayout.jsx","../../source/components/common/LoadingSpinner/LoadingSpinner.jsx","../../source/pages/app/posts/PostsListPage.jsx","../../source/components/Post/PostCard.jsx","../../source/pages/app/feed/FeedPage.jsx","../../source/layouts/PostsLayout.jsx","../../source/layouts/UserLayout.jsx","../../source/layouts/AuthLayout.jsx","../../source/hooks/useDeepCompareEffect.jsx","../../source/components/Editor/Blocks/MetaBlock.jsx","../../source/components/Editor/AddMenu.jsx","../../source/components/Editor/Blocks/TextBlock.jsx","../../source/components/Editor/Blocks/HeadingBlock.jsx","../../source/utils/imageSrc.js","../../source/components/Editor/Blocks/ImageBlock.jsx","../../source/components/Editor/BlockComponent.jsx","../../source/utils/generateUuid.js","../../source/components/Editor/ListBlock.jsx","../../source/components/Editor/PostEditor.jsx","../../source/components/Editor/PostView.jsx","../../source/components/Post/PostsNav.jsx","../../source/pages/app/posts/PostsItemPage.jsx","../../source/pages/app/auth/AuthLogout.jsx","../../source/pages/app/developed/DevelopedPage.jsx","../../source/pages/app/posts/PostsSearchPage.jsx","../../source/pages/app/home/HomePage.jsx","../../source/routes/routes.jsx","../../source/entry-server.jsx","../../source/components/routes/SafeNavigate.jsx","../../source/routes/ProtectedRoute.jsx","../../source/routes/PagesRouter.jsx","../../source/App.jsx","../../source/main.jsx"],"sourcesContent":["export const API_ROUTES = {\r\n    user: {\r\n        login: \"/api/user/login\",\r\n        register: \"/api/user/register\",\r\n        resendVerification: \"/api/user/resend-verification\",\r\n        validToken: \"/api/user/validate-tokens\",\r\n        logout: \"/api/user/logout\",\r\n    },\r\n    posts: {\r\n        create: \"/api/posts/create\",\r\n        update: \"/api/posts/update\",\r\n        upload: \"/api/posts/upload\",\r\n        delete: \"/api/posts/delete\",\r\n        get: \"/api/posts/get\",\r\n        userPosts: '/api/posts/user',\r\n        favorites: '/api/posts/favorites',\r\n        feed: '/api/posts/feed',\r\n        search: '/api/posts/search',\r\n    },\r\n    favorites: {\r\n        add: '/api/user/favorites',\r\n        remove: '/api/user/favorites',\r\n    },\r\n};","\"use strict\";\n\nconst isServer = typeof window === \"undefined\";\nconst API_BASE_URL = isServer ? process.env.API_BASE_URL || \"http://localhost:3100\" : \"\";\nconst PROXY_API_PATH = import.meta.env.VITE_PROXY_API_PATH || \"\";\n\nexport const postApi = async (uri, data = {}, options = {}) => {\n    const {\n        accept = \"application/json\",\n        headers = {},\n        contentType,\n        method = \"POST\",\n    } = options;\n\n    // Определяем заголовки\n    const fetchHeaders = new Headers({\n        Accept: accept,\n        ...headers,\n    });\n\n    let body;\n\n    if (data instanceof FormData) {\n        // Для FormData Content-Type не нужно ставить, браузер сам поставит с boundary\n        body = data;\n\n    } else if (data instanceof Blob || data instanceof File) {\n        body = data;\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            // Не ставим Content-Type, браузер сам поставит\n        }\n    } else if (typeof data === \"string\") {\n        body = data;\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            fetchHeaders.set(\"Content-Type\", \"text/plain;charset=UTF-8\");\n        }\n    } else if (data && typeof data === \"object\") {\n        body = JSON.stringify(data);\n        if (contentType) {\n            fetchHeaders.set(\"Content-Type\", contentType);\n        } else if (!fetchHeaders.has(\"Content-Type\")) {\n            fetchHeaders.set(\"Content-Type\", \"application/json;charset=UTF-8\");\n        }\n    } else {\n        // Если data null или undefined\n        body = null;\n    }\n\n    const response = await fetch(`${API_BASE_URL}${PROXY_API_PATH}${uri}`, {\n        method: method,\n        headers: fetchHeaders,\n        body,\n    });\n\n    const contentTypeResponse = response.headers.get(\"Content-Type\") || \"\";\n\n    let responseBody;\n    if (contentTypeResponse.includes(\"application/json\")) {\n        responseBody = await response.json();\n    } else if (contentTypeResponse.startsWith(\"text/\")) {\n        responseBody = await response.text();\n    } else if (\n        contentTypeResponse.includes(\"application/octet-stream\") ||\n        contentTypeResponse.includes(\"application/pdf\") ||\n        contentTypeResponse.startsWith(\"image/\") ||\n        contentTypeResponse.startsWith(\"audio/\") ||\n        contentTypeResponse.startsWith(\"video/\")\n    ) {\n        responseBody = await response.blob();\n    } else {\n        responseBody = await response.text();\n    }\n\n    if (import.meta.env.DEV) {\n        console.log(\"Ответ запроса POST \", responseBody);\n    }\n\n    if (!response.ok || (responseBody && responseBody.type === \"error\")) {\n        let errorMessage = response.statusText || \"Неизвестная ошибка\";\n\n        if (responseBody && typeof responseBody === \"object\") {\n            if (responseBody.message) {\n                errorMessage = responseBody.message;\n            }\n\n            const error = new Error(errorMessage);\n            error.status = response.status || responseBody.status || 500;\n\n            for (const [key, value] of Object.entries(responseBody)) {\n                if (key !== 'message') {\n                    error[key] = value;\n                }\n            }\n\n            throw error;\n        } else {\n            const error = new Error(errorMessage);\n            error.status = response.status || 500;\n            throw error;\n        }\n    }\n    return responseBody;\n};","export const decodeJwt = (token) => {\r\n    try {\r\n        const payloadBase64 = token.split('.')[1];\r\n        const payloadJson = atob(payloadBase64.replace(/-/g, '+').replace(/_/g, '/'));\r\n        return JSON.parse(payloadJson);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const isTokenValid = (token, expireThreshold = 300) => {\r\n    // истёк ли токен и срок действия не меньше 5 минут\r\n    if (!token) return false;\r\n\r\n    const payload = decodeJwt(token);\r\n    if (!payload?.exp) return false;\r\n\r\n    const currentTime = Date.now() / 1000;\r\n    const expiresIn = payload.exp - currentTime;\r\n\r\n    return expiresIn > expireThreshold;\r\n};","const isEnglishText = (text) => {\r\n    // Регулярное выражение для проверки английских символов\r\n    return /^[a-zA-Z0-9\\s\\.,!?;:'\"@#$%^&*()_+\\-=\\[\\]{}<>\\\\\\/]+$/.test(text);\r\n};\r\n\r\nexport default isEnglishText;","import { API_ROUTES } from \"../../../constants/apiRoutes\";\nimport { postApi } from \"../../../utils/postApi\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const addFavorite = createAsyncThunk(\"favorites/addFavorite\", async ({ userId, postId }, { getState, rejectWithValue }) => {\n    try {\n        const state = getState();\n        const accessToken = state.userData?.accessToken || \"\";\n\n        const response = await postApi(\n            `${API_ROUTES.favorites.add}/${postId}`,\n            { userId },\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n\n        return response.data.userFavoritesIdList;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const removeFavorite = createAsyncThunk(\"favorites/removeFavorite\", async ({ userId, postId }, { getState, rejectWithValue }) => {\n    try {\n        const state = getState();\n        const accessToken = state.userData?.accessToken || \"\";\n\n        const response = await postApi(\n            `${API_ROUTES.favorites.remove}/${postId}`,\n            { userId },\n            {\n                method: \"DELETE\",\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n\n        return response.data.userFavoritesIdList;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { API_ROUTES } from \"../../../constants/apiRoutes\";\nimport { postApi } from \"../../../utils/postApi\";\nimport { isTokenValid } from \"../../../utils/token\";\nimport isEnglishText from \"../../../utils/isEnglistText\";\nimport { addFavorite, removeFavorite } from \"../postsData/favoritesThunks\";\n\nconst setErrMsg = (err) => {\n    return err && !isEnglishText(err) ? err : \"Ошибка сервера. Попробуйте позже.\";\n};\n\nexport const regUser = createAsyncThunk(\"userData/regUser\", async (data, thunkAPI) => {\n    try {\n        return await postApi(API_ROUTES.user.register, data);\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка регистрации. Попробуйте позже.\");\n    }\n});\n\nexport const loginUser = createAsyncThunk(\"userData/loginUser\", async (data, thunkAPI) => {\n    try {\n        return await postApi(API_ROUTES.user.login, data);\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка авторизации. Попробуйте позже.\");\n    }\n});\n\nexport const resendVerification = createAsyncThunk(\"userData/resendVerification\", async (data, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const tempAuthToken = state.userData?.tempAuthToken || localStorage.getItem(\"tempAuthToken\");\n        if (!tempAuthToken) {\n            return thunkAPI.rejectWithValue(\"Ошибка отправки письма активации. Авторизуйтесь снова.\");\n        }\n        return await postApi(API_ROUTES.user.resendVerification, { tempAuthToken });\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Время сессии истекло. Авторизуйтесь снова.\");\n    }\n});\n\nexport const checkToken = createAsyncThunk(\"userData/checkToken\", async (_, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n\n        const accessToken = state.userData.accessToken;\n        if (accessToken && isTokenValid(accessToken)) {\n            return { accessToken };\n        }\n        return await thunkAPI.dispatch(refreshToken()).unwrap();\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка авторизации. Авторизуйтесь снова.\");\n    }\n});\n\nexport const refreshToken = createAsyncThunk(\"userData/refreshToken\", async (data, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const accessToken = state.userData?.accessToken || \"\";\n        return await postApi(\n            API_ROUTES.user.validToken,\n            {},\n            {\n                // Для SSR передаем куки из запроса\n                headers: {\n                    Cookie: typeof window === \"undefined\" ? thunkAPI.extra?.req.headers.cookie || \"\" : \"\",\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Время сессии истекло. Авторизуйтесь снова.\");\n    }\n});\n\nexport const logoutUser = createAsyncThunk(\"userData/logoutUser\", async (_, thunkAPI) => {\n    try {\n        const state = thunkAPI.getState();\n        const accessToken = state.userData?.accessToken || \"\";\n        return await postApi(\n            API_ROUTES.user.logout,\n            { accessToken },\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n    } catch (err) {\n        return thunkAPI.rejectWithValue(typeof err === \"object\" ? err : \"Ошибка выхода из аккаунта. Попробуйте позже.\");\n    }\n});\n\nconst initialState = {\n    user: \"\", // имя пользователя\n    userFavorites: [], // избранные посты пользователя\n    isAuth: false, // если пользователь успешно авторизован и активирован\n    isAdmin: false,\n    authCheckStatus: \"idle\", // состояние автоматической авторизации 'idle' | 'pending' | 'succeeded' | 'failed' | 'logout'\n    errAuth: null, // ошибки авторизации\n    errFav: null, // ошибки списка избранных\n    favStatus: \"idle\", // состояние запроса списка избранных: 'idle' | 'loading' | 'succeeded' | 'error'\n    registerStatus: \"idle\", // состояние запроса regUser: 'idle' | 'pending' | 'registered' | 'error'\n    resendActStatus: \"idle\", // состояние запроса resendVerification: 'idle' | 'pending' | 'shipped' | 'error'\n    loginStatus: \"idle\", // состояние запроса loginUser: 'idle' | 'pending' | 'authenticated' | 'unactivated' | 'error' | 'logout'\n    tempAuthToken: null, // временный токен для отправки активации\n    accessToken: null, // токен доступа - даётся в статусе authenticated\n};\n\nexport const userDataSlice = createSlice({\n    name: \"userData\",\n    initialState,\n    reducers: {\n        clearError: (state, action) => {\n            if (action.payload) state.errAuth = initialState.errAuth;\n        },\n        setAuthToken: (state, action) => {\n            if (action.payload !== state.tempAuthToken && typeof action.payload === \"string\") {\n                state.tempAuthToken = action.payload;\n            }\n        },\n        updateUserFavorites: (state, action) => {\n            const postId = action.payload;\n            const index = state.userFavorites.indexOf(postId);\n\n            if (index === -1) {\n                // Добавляем пост в избранное\n                state.userFavorites.push(postId);\n            } else {\n                // Удаляем пост из избранного\n                state.userFavorites.splice(index, 1);\n            }\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            // --- regUser ---\n            .addCase(regUser.pending, (state) => {\n                state.registerStatus = \"pending\";\n                state.resendActStatus = initialState.resendActStatus;\n                state.loginStatus = initialState.loginStatus;\n                state.errAuth = null;\n            })\n            .addCase(regUser.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.registerStatus = \"registered\";\n                    if (typeof action.payload.data?.tempAuthToken === \"string\") {\n                        state.tempAuthToken = action.payload.data?.tempAuthToken;\n                        localStorage.setItem(\"tempAuthToken\", action.payload.data?.tempAuthToken);\n                    }\n                }\n            })\n            .addCase(regUser.rejected, (state, action) => {\n                state.registerStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n            // --- loginUser ---\n            .addCase(loginUser.pending, (state) => {\n                state.loginStatus = \"pending\";\n                state.resendActStatus = initialState.resendActStatus;\n                state.registerStatus = initialState.registerStatus;\n                state.errAuth = null;\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.loginStatus = \"authenticated\";\n                    state.isAuth = true;\n                    state.isAdmin = action.payload.data?.isAdmin;\n                    state.userFavorites = action.payload.data?.userFavoritesIdList || [];\n                    state.authCheckStatus = \"succeeded\";\n                    state.tempAuthToken = initialState.tempAuthToken;\n                    localStorage.removeItem(\"tempAuthToken\");\n                    state.user = action.payload.data?.username || \"\";\n                    state.accessToken = action.payload.data?.accessToken;\n                }\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                if (action.payload?.code === \"ACCOUNT_NOT_ACTIVATED\") {\n                    state.loginStatus = \"unactivated\";\n                    if (typeof action.payload.data?.tempAuthToken === \"string\") {\n                        state.tempAuthToken = action.payload.data?.tempAuthToken;\n                        localStorage.setItem(\"tempAuthToken\", action.payload.data?.tempAuthToken);\n                    }\n                } else {\n                    state.authCheckStatus = \"failed\";\n                    state.loginStatus = \"error\";\n                    const bodyError = action.payload.data?.errors || action.payload?.message;\n                    state.errAuth = setErrMsg(bodyError);\n                }\n            })\n            // --- resendVerification ---\n            .addCase(resendVerification.pending, (state) => {\n                state.resendActStatus = \"pending\";\n                state.errAuth = null;\n            })\n            .addCase(resendVerification.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.resendActStatus = \"shipped\";\n                }\n            })\n            .addCase(resendVerification.rejected, (state, action) => {\n                state.resendActStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n            // --- checkToken ---\n            .addCase(checkToken.fulfilled, (state) => {\n                state.isAuth = true;\n                state.authCheckStatus = \"succeeded\";\n            })\n            .addCase(checkToken.rejected, (state) => {\n                state.accessToken = null;\n                state.isAuth = false;\n                state.authCheckStatus = \"failed\";\n            })\n            // --- refreshToken ---\n            .addCase(refreshToken.pending, (state) => {\n                state.errAuth = null;\n                state.authCheckStatus = \"pending\";\n            })\n            .addCase(refreshToken.fulfilled, (state, action) => {\n                if (action.payload.success) {\n                    state.loginStatus = \"authenticated\";\n                    state.authCheckStatus = \"succeeded\";\n                    state.isAuth = true;\n                    state.isAdmin = action.payload.data?.isAdmin;\n                    state.userFavorites = action.payload.data?.userFavoritesIdList || [];\n                    state.user = action.payload.data?.username || \"\";\n                    if (typeof action.payload.data?.accessToken === \"string\" && action.payload.data?.isNewToken) {\n                        state.accessToken = action.payload.data?.accessToken;\n                    }\n                }\n            })\n            .addCase(refreshToken.rejected, (state) => {\n                state.loginStatus = \"error\";\n                state.authCheckStatus = \"failed\";\n                state.isAuth = false;\n                state.isAdmin = false;\n                state.accessToken = null;\n            })\n            // --- Logout ---\n            .addCase(logoutUser.fulfilled, (state) => {\n                Object.assign(state, initialState);\n                state.loginStatus = \"logout\";\n                state.authCheckStatus = \"logout\";\n            })\n            .addCase(logoutUser.rejected, (state, action) => {\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errAuth = setErrMsg(bodyError);\n            })\n            // --- Favorites Add ---\n            .addCase(addFavorite.pending, (state) => {\n                state.favStatus = \"loading\";\n            })\n            .addCase(addFavorite.fulfilled, (state, action) => {\n                state.favStatus = \"succeeded\";\n                state.userFavorites = action.payload;\n            })\n            .addCase(addFavorite.rejected, (state, action) => {\n                state.favStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errFav = setErrMsg(bodyError);\n            })\n            // --- Favorites Remove ---\n            .addCase(removeFavorite.pending, (state) => {\n                state.favStatus = \"loading\";\n            })\n            .addCase(removeFavorite.fulfilled, (state, action) => {\n                state.favStatus = \"succeeded\";\n                state.userFavorites = action.payload;\n            })\n            .addCase(removeFavorite.rejected, (state, action) => {\n                state.favStatus = \"error\";\n                const bodyError = action.payload.data?.errors || action.payload?.message;\n                state.errFav = setErrMsg(bodyError);\n            });\n    },\n});\n\nexport const { clearError, setAuthToken, updateUserFavorites } = userDataSlice.actions;\nexport default userDataSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    hasUnsavedChanges: false,\n    pendingNavigation: null,\n};\n\nconst appSettingsSlice = createSlice({\n    name: \"appSettings\",\n    initialState,\n    reducers: {\n        setUnsavedChanges: (state, action) => {\n            state.hasUnsavedChanges = action.payload;\n        },\n        setPendingNavigation: (state, action) => {\n            state.pendingNavigation = action.payload;\n        },\n        clearPendingNavigation: (state) => {\n            state.pendingNavigation = null;\n        },\n    },\n});\n\nexport const { setUnsavedChanges, setPendingNavigation, clearPendingNavigation } = appSettingsSlice.actions;\n\nexport default appSettingsSlice.reducer;\n","export const deepMerge = (target, source) => {\r\n    if (typeof target !== 'object' || typeof source !== 'object') {\r\n        return source || target;\r\n    }\r\n\r\n    const result = { ...target };\r\n\r\n    for (const key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n            if (typeof source[key] === 'object' && !Array.isArray(source[key]) &&\r\n                typeof target[key] === 'object' && !Array.isArray(target[key])) {\r\n                result[key] = deepMerge(target[key], source[key]);\r\n            } else {\r\n                result[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","const DB_NAME = \"PostImagesDB\";\nconst STORE_NAME = \"images\";\n\n// Инициализация базы данных\nconst initDB = () => {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open(DB_NAME, 1);\n\n        request.onerror = (event) => {\n            reject(`IndexedDB error: ${event.target.error}`);\n        };\n\n        request.onsuccess = (event) => {\n            resolve(event.target.result);\n        };\n\n        request.onupgradeneeded = (event) => {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(STORE_NAME)) {\n                db.createObjectStore(STORE_NAME, { keyPath: \"key\" });\n            }\n        };\n    });\n};\n\n// Сохранение файла в IndexedDB\nexport const saveToIndexedDB = async (key, file) => {\n    const db = await initDB();\n    const transaction = db.transaction(STORE_NAME, \"readwrite\");\n    const store = transaction.objectStore(STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n        const request = store.put({ key, file });\n\n        request.onsuccess = () => resolve();\n        request.onerror = (event) => reject(event.target.error);\n    });\n};\n\n// Получение файла из IndexedDB\nexport const getFromIndexedDB = async (key) => {\n    const db = await initDB();\n    const transaction = db.transaction(STORE_NAME, \"readonly\");\n    const store = transaction.objectStore(STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n        const request = store.get(key);\n\n        request.onsuccess = (event) => {\n            if (event.target.result) {\n                resolve(event.target.result.file);\n            } else {\n                reject(new Error(\"File not found in IndexedDB\"));\n            }\n        };\n\n        request.onerror = (event) => reject(event.target.error);\n    });\n};\n\n// Удаление файла из IndexedDB\nexport const deleteFromIndexedDB = async (key) => {\n    const db = await initDB();\n    const transaction = db.transaction(STORE_NAME, \"readwrite\");\n    const store = transaction.objectStore(STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n        const request = store.delete(key);\n\n        request.onsuccess = () => resolve();\n        request.onerror = (event) => reject(event.target.error);\n    });\n};\n\n// Очистка всех временных изображений\nexport const clearTempImages = async () => {\n    const db = await initDB();\n    const transaction = db.transaction(STORE_NAME, \"readwrite\");\n    const store = transaction.objectStore(STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n        const request = store.clear();\n\n        request.onsuccess = () => resolve();\n        request.onerror = (event) => reject(event.target.error);\n    });\n};\n","export const getFileExtension = (mimeType) => {\r\n    const extensions = {\r\n        'image/jpeg': 'jpg',\r\n        'image/jpg': 'jpg',\r\n        'image/png': 'png',\r\n        'image/gif': 'gif',\r\n        'image/webp': 'webp',\r\n        'image/svg+xml': 'svg'\r\n    };\r\n\r\n    return extensions[mimeType] || 'bin';\r\n};","\"use strict\";\r\n\r\nconst isServer = typeof window === \"undefined\";\r\nconst API_BASE_URL = isServer ? process.env.API_BASE_URL || \"http://localhost:3060\" : \"\";\r\nconst PROXY_API_PATH = import.meta.env.VITE_PROXY_API_PATH || \"\";\r\n\r\nexport const getApi = async (\r\n    uri,\r\n    params = {},\r\n    options = {}\r\n) => {\r\n    const { accept = \"application/json\", headers = {} } = options;\r\n\r\n    // Сериализация параметров в query string\r\n    const queryString = new URLSearchParams(params).toString();\r\n    const url = `${API_BASE_URL}${PROXY_API_PATH}${uri}${queryString ? `?${queryString}` : \"\"}`;\r\n\r\n    const fetchHeaders = new Headers({\r\n        Accept: accept,\r\n        ...headers,\r\n    });\r\n\r\n    const response = await fetch(url, {\r\n        method: \"GET\",\r\n        headers: fetchHeaders,\r\n    });\r\n\r\n    const contentType = response.headers.get(\"Content-Type\") || \"\";\r\n\r\n    let responseBody;\r\n    if (contentType.includes(\"application/json\")) {\r\n        responseBody = await response.json();\r\n    } else if (contentType.startsWith(\"text/\")) {\r\n        responseBody = await response.text();\r\n    } else if (\r\n        contentType.includes(\"application/octet-stream\") ||\r\n        contentType.includes(\"application/pdf\") ||\r\n        contentType.startsWith(\"image/\") ||\r\n        contentType.startsWith(\"audio/\") ||\r\n        contentType.startsWith(\"video/\")\r\n    ) {\r\n        responseBody = await response.blob();\r\n    } else {\r\n        responseBody = await response.text();\r\n    }\r\n\r\n    if (import.meta.env.DEV) {\r\n        console.log(\"Ответ запроса GET \", responseBody);\r\n    }\r\n\r\n    if (!response.ok) {\r\n        const errorMessage =\r\n            responseBody && typeof responseBody === \"object\" && responseBody.error\r\n                ? responseBody.error\r\n                : response.statusText || \"Unknown error\";\r\n\r\n        const error = new Error(errorMessage);\r\n        error.status = response.status;\r\n        error.body = responseBody;\r\n        throw error;\r\n    }\r\n\r\n    return responseBody;\r\n};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { postApi } from \"../../../utils/postApi\";\nimport { deepMerge } from \"../../../utils/deepMerge\";\nimport { API_ROUTES } from \"../../../constants/apiRoutes\";\nimport { clearTempImages, getFromIndexedDB } from \"../../../utils/db\";\nimport { getFileExtension } from \"../../../utils/fileUtils\";\nimport isEnglishText from \"../../../utils/isEnglistText\";\nimport { getApi } from \"../../../utils/getApi\";\n\nconst setErrMsg = (err) => {\n    return err && !isEnglishText(err) ? err : \"Ошибка сервера. Попробуйте снова.\";\n};\n\nexport const fetchPost = createAsyncThunk(\"post/fetchPost\", async (postId, { rejectWithValue }) => {\n    try {\n        return await getApi(`${API_ROUTES.posts.get}/${postId}`);\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const fetchUserPosts = createAsyncThunk(\"postsData/fetchUserPosts\", async (_, { getState, rejectWithValue }) => {\n    const state = getState();\n    const accessToken = state.userData?.accessToken || \"\";\n\n    const postOptions = {\n        headers: {\n            Authorization: `Bearer ${accessToken}`,\n        },\n    };\n    try {\n        return await getApi(`${API_ROUTES.posts.userPosts}`, {}, postOptions);\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const fetchFavoritePosts = createAsyncThunk(\"postsData/fetchFavoritePosts\", async (_, { getState, rejectWithValue }) => {\n    const state = getState();\n    const accessToken = state.userData?.accessToken || \"\";\n    const postOptions = {\n        headers: {\n            Authorization: `Bearer ${accessToken}`,\n        },\n    };\n    try {\n        return await getApi(`${API_ROUTES.posts.favorites}`, {}, postOptions);\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const fetchFeedPosts = createAsyncThunk(\"postsData/fetchFeedPosts\", async ({ page = 1 } = {}, { rejectWithValue }) => {\n    try {\n        const response = await getApi(`${API_ROUTES.posts.feed}?page=${page}&limit=10`);\n\n        return {\n            posts: response.data.posts,\n            page,\n            total: response.data.total,\n            totalPages: response.data.totalPages,\n        };\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const savePost = createAsyncThunk(\"postsData/savePost\", async ({ isNew }, { getState, rejectWithValue }) => {\n    try {\n        const state = getState();\n        const { postData, images } = state.postsData;\n        const accessToken = state.userData?.accessToken || \"\";\n        const postOptions = {\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n            },\n        };\n\n        let postId;\n        console.log();\n        if (isNew) {\n            const savedPost = await postApi(API_ROUTES.posts.create, postData, postOptions);\n            postId = savedPost.data.postId;\n        } else {\n            await postApi(`${API_ROUTES.posts.update}/${postData.meta.id}`, postData, postOptions);\n            postId = postData.meta.id;\n        }\n\n        const updatedBlocks = [...postData.content];\n        const uploadPromises = [];\n\n        for (const [blockId, imageInfo] of Object.entries(images)) {\n            const blockIndex = updatedBlocks.findIndex((b) => b.id === blockId);\n            if (blockIndex === -1) continue;\n\n            const block = updatedBlocks[blockIndex];\n            if (block.type !== \"image\") continue;\n\n            // Получаем файл из IndexedDB\n            const file = await getFromIndexedDB(imageInfo.key);\n\n            // Определяем имя и расширение файла\n            const fileExtension = getFileExtension(block.data.fileType);\n            const serverFileName = `${block.data.fileName}.${fileExtension}`;\n\n            const headers = {\n                ...postOptions.headers,\n                \"x-post-id\": postId,\n                \"x-file-name\": encodeURIComponent(serverFileName),\n                \"x-block-id\": encodeURIComponent(blockId),\n            };\n\n            uploadPromises.push(\n                // с await - последовательно загружаем, без - лимит параллельной загрузки\n                await postApi(`${API_ROUTES.posts.upload}/${postId}`, file, { headers })\n            );\n        }\n\n        await Promise.all(uploadPromises);\n        await clearTempImages();\n        return true;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nexport const deletePost = createAsyncThunk(\"postsData/deletePost\", async (postId, { getState, rejectWithValue }) => {\n    try {\n        const state = getState();\n        const accessToken = state.userData?.accessToken || \"\";\n        await postApi(`${API_ROUTES.posts.delete}/${postId}`, null, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n            },\n        });\n        return postId;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nconst postsDataSlice = createSlice({\n    name: \"postsData\",\n    initialState: {\n        userPosts: [],\n        favoritePosts: [],\n        postData: {},\n        statusFavList: \"idle\", // idle, loading, succeeded, error\n        statusFav: \"idle\", // idle, loading, succeeded, error\n        statusDelete: \"idle\", // idle, loading, succeeded, error\n        statusGet: \"idle\", // idle, loading, succeeded, error\n        statusSend: \"idle\", // idle, loading, succeeded, error\n        error: false, // {status, message}\n        errorFavList: false, // {status, message}\n        images: {},\n        feedPosts: [],\n        feedPage: 1,\n        feedTotal: 0,\n        feedTotalPages: 1,\n        feedStatus: \"idle\", // 'idle' | 'loading' | 'loading-more' | 'succeeded' | 'failed'\n        errorFeed: false, // {status, message}\n    },\n    reducers: {\n        setPostData: (state, action) => {\n            state.postData = action.payload;\n        },\n        mergePostData: (state, action) => {\n            state.postData = deepMerge(state.postData, action.payload);\n        },\n        updatePostData: (state, action) => {\n            if (state.postData) {\n                state.postData = { meta: { ...state.postData.meta, ...action.payload.meta }, content: action.payload.content };\n            } else {\n                state.postData = action.payload;\n            }\n        },\n        addImage: (state, action) => {\n            const { blockId, key, file, fileName } = action.payload;\n            state.images[blockId] = { key, file, fileName };\n        },\n        clearPostState: (state) => {\n            state.postData = {};\n            state.statusSend = \"idle\";\n            state.error = null;\n            state.images = {};\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchPost.pending, (state) => {\n                state.statusGet = \"loading\";\n            })\n            .addCase(fetchPost.fulfilled, (state, action) => {\n                state.statusGet = \"succeeded\";\n                state.postData = action.payload.data;\n            })\n            .addCase(fetchPost.rejected, (state, action) => {\n                state.statusGet = \"error\";\n                const bodyError = action.payload?.message;\n                state.error = bodyError || \"Ошибка загрузки поста\";\n            })\n            .addCase(savePost.pending, (state) => {\n                state.statusSend = \"loading\";\n            })\n            .addCase(savePost.fulfilled, (state, action) => {\n                state.statusSend = \"succeeded\";\n                state.data = action.payload;\n                state.images = {};\n                if (action.payload.isNew) {\n                    state.postData.meta.id = action.payload.postId;\n                }\n            })\n            .addCase(savePost.rejected, (state, action) => {\n                state.statusSend = \"error\";\n                const bodyError = action.payload?.message;\n                state.error = setErrMsg(bodyError);\n            })\n            .addCase(deletePost.pending, (state) => {\n                state.statusDelete = \"loading\";\n            })\n            .addCase(deletePost.fulfilled, (state) => {\n                state.statusDelete = \"succeeded\";\n                state.postData = {};\n            })\n            .addCase(deletePost.rejected, (state, action) => {\n                state.statusDelete = \"error\";\n                const bodyError = action.payload?.message;\n                state.error = setErrMsg(bodyError);\n            })\n\n            .addCase(fetchUserPosts.pending, (state) => {\n                state.statusFavList = \"loading\";\n            })\n            .addCase(fetchUserPosts.fulfilled, (state, action) => {\n                state.statusFavList = \"succeeded\";\n                state.userPosts = action.payload.data;\n            })\n            .addCase(fetchUserPosts.rejected, (state, action) => {\n                state.statusFavList = \"error\";\n                const bodyError = action.payload?.message;\n                state.errorFavList = setErrMsg(bodyError);\n            })\n            .addCase(fetchFavoritePosts.pending, (state) => {\n                state.statusFavList = \"loading\";\n            })\n            .addCase(fetchFavoritePosts.fulfilled, (state, action) => {\n                state.statusFavList = \"succeeded\";\n                state.favoritePosts = action.payload.data;\n            })\n            .addCase(fetchFavoritePosts.rejected, (state, action) => {\n                state.statusFavList = \"error\";\n                const bodyError = action.payload?.message;\n                state.errorFavList = setErrMsg(bodyError);\n            })\n            .addCase(fetchFeedPosts.pending, (state, action) => {\n                if (action.meta.arg.page === 1) {\n                    state.feedStatus = \"loading\";\n                } else {\n                    state.feedStatus = \"loading-more\";\n                }\n            })\n            .addCase(fetchFeedPosts.fulfilled, (state, action) => {\n                state.feedStatus = \"succeeded\";\n                if (action.payload.page === 1) {\n                    state.feedPosts = action.payload.posts;\n                } else {\n                    state.feedPosts = [...state.feedPosts, ...action.payload.posts];\n                }\n                state.feedPage = action.payload.page;\n                state.feedTotal = action.payload.total;\n                state.feedTotalPages = action.payload.totalPages;\n            })\n            .addCase(fetchFeedPosts.rejected, (state, action) => {\n                state.feedStatus = \"failed\";\n                state.errorFeed = action.payload?.message;\n            });\n    },\n});\n\nexport const { setPostData, updatePostData, addImage, clearPostState, mergePostData } = postsDataSlice.actions;\nexport default postsDataSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport userDataSlice from \"./reducers/userData/userDataSlice\";\nimport appSettingsSlice from \"./reducers/appSettings/appSettingsSlice\";\nimport postsDataSlice from \"./reducers/postsData/postsDataSlice\";\n\nexport function createStore(preloadedState = {}, serverReq = null) {\n    return configureStore({\n        reducer: {\n            userData: userDataSlice,\n            appSettings: appSettingsSlice,\n            postsData: postsDataSlice,\n        },\n        preloadedState,\n        middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware({\n                serializableCheck: false,\n                thunk: {\n                    extraArgument: { req: serverReq },\n                },\n            }),\n    });\n}","import React from 'react';\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport \"./AuthForm.css\";\r\n\r\nconst initialState = {\r\n    username: import.meta.env.VITE_AUTH_NAME || \"\",\r\n    email: import.meta.env.VITE_AUTH_EMAIL || \"\",\r\n    password: import.meta.env.VITE_AUTH_PASS || \"\",\r\n    login: import.meta.env.VITE_AUTH_LOGIN || \"\",\r\n};\r\n\r\nfunction generateErrList(err) {\r\n    if (typeof err === \"string\") {\r\n        return <li key={err} className=\"auth__error\">{err}</li>;\r\n    }\r\n    if (React.isValidElement(err)) {\r\n        return <li className=\"auth__error\">{err}</li>;\r\n    }\r\n    if (Array.isArray(err)) {\r\n        return err.map((msg) => generateErrList(msg));\r\n    }\r\n    if (err && typeof err === \"object\") {\r\n        return Object.entries(err).flatMap(([_, value]) =>\r\n            generateErrList(value)\r\n        );\r\n    }\r\n    return <li className=\"auth__error\">{String(err)}</li>;\r\n}\r\n\r\nfunction AuthForm({ mode = 'login', onSubmit , externalError, validator}) {\r\n    const [form, setForm] = useState(initialState);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validator(mode,\r\n            {\r\n                username: form.username,\r\n                email: form.email,\r\n                password: form.password,\r\n                login: form.login,\r\n            });\r\n\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n        setErrors({});\r\n        if (mode === 'register') {\r\n            onSubmit({\r\n                username: form.username,\r\n                email: form.email,\r\n                password: form.password\r\n            });\r\n        } else {\r\n            onSubmit({\r\n                login: form.login,\r\n                password: form.password\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setForm(initialState);\r\n        setErrors({});\r\n    }, [mode]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"auth__form\">\r\n            <h2 className=\"auth__title\">{mode === 'register' ? 'Регистрация' : 'Авторизация'}</h2>\r\n\r\n            {mode === 'register' ? (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='username'>Ник пользователя</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        value={form.username}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='login'>Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"login\"\r\n                        name=\"login\"\r\n                        value={form.login}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {mode === 'register' && (\r\n                <div className=\"auth__field-box\">\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={handleChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"email\"\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"auth__field-box\">\r\n                <label htmlFor=\"password\">Пароль</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"current-password\"\r\n                />\r\n            </div>\r\n\r\n            {(Object.keys(errors).length > 0 || externalError) && (\r\n                <>\r\n                    <hr className=\"auth__divider\" />\r\n                    <ul className=\"auth__errors\">\r\n                        {Object.keys(errors).length > 0 && generateErrList(errors)}\r\n                        {externalError && generateErrList(externalError)}\r\n                    </ul>\r\n                </>\r\n            )}\r\n\r\n            <button type=\"submit\" className=\"auth__button\">\r\n                {mode === 'register' ? 'Зарегистрироваться' : 'Войти'}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default memo(AuthForm);","import { useEffect, useState } from \"react\";\nimport \"./UnverifiedNotice.css\";\n\nexport default function UnverifiedNotice({ onResend, isLoading, isSend, hasToken, error }) {\n    const [cooldown, setCooldown] = useState(0);\n\n    useEffect(() => {\n        if (isSend) {\n            setCooldown(60);\n            const timer = setInterval(() => {\n                setCooldown((prev) => {\n                    if (prev <= 1) {\n                        clearInterval(timer);\n                        return 0;\n                    }\n                    return prev - 1;\n                });\n            }, 1000);\n            return () => clearInterval(timer);\n        }\n    }, [isSend]);\n\n    const getButtonState = () => {\n        if (!hasToken) {\n            return {\n                disabled: true,\n                text: \"Требуется авторизация\",\n                hint: \"Время сессии истекло. Авторизуйтесь снова.\",\n            };\n        }\n        if (isLoading) {\n            return {\n                disabled: true,\n                text: \"Отправка...\",\n            };\n        }\n        if (cooldown > 0) {\n            return {\n                disabled: true,\n                text: `Повтор через ${cooldown} сек`,\n            };\n        }\n        if (error) {\n            return {\n                disabled: false,\n                text: \"Повторить отправку\",\n                hint: error,\n            };\n        }\n        return {\n            disabled: false,\n            text: \"Отправить письмо повторно\",\n        };\n    };\n\n    const buttonState = getButtonState();\n\n    return (\n        <div className=\"auth__unverified\">\n            <p>Аккаунт не активирован. Проверьте почту и подтвердите регистрацию.</p>\n            {buttonState.hint && <p className=\"auth__error-resend\">{buttonState.hint}</p>}\n            <button\n                type=\"button\"\n                onClick={onResend}\n                disabled={buttonState.disabled}\n                className=\"auth__resend-button\"\n            >\n                {buttonState.text}\n            </button>\n        </div>\n    );\n}","function validate (mode, {username, email, password, login}) {\r\n    // mode = 'register' или 'login'\r\n    const errs = {};\r\n\r\n    const usernameRegex = /^[A-Za-z0-9]{1,20}$/;\r\n    //const loginRegex = /^[A-Za-z0-9]+$/;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{8,}$/;\r\n\r\n    const ERROR_MESSAGES = {\r\n        username: {\r\n            required: \"Введите логин\",\r\n            invalid: \"Логин может содержать только английские буквы и цифры, максимум 20 символов\",\r\n        },\r\n        email: {\r\n            required: \"Введите email\",\r\n            invalid: \"Некорректный email\",\r\n        },\r\n        login: {\r\n            required: \"Введите email\",\r\n            //invalidChars: \"Логин может содержать только латинские буквы и цифры\",\r\n            invalidEmail: \"Некорректный email\",\r\n            tooLong: \"Максимум 50 символов\",\r\n        },\r\n        password: {\r\n            required: \"Введите пароль\",\r\n            invalid: \"Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спецсимвол\",\r\n        },\r\n    };\r\n\r\n    if (mode === 'register') {\r\n        if (!username.trim()) {\r\n            errs.username = ERROR_MESSAGES.username.required;\r\n        } else if (!usernameRegex.test(username)) {\r\n            errs.username = ERROR_MESSAGES.username.invalid;\r\n        }\r\n\r\n        if (!email.trim()) {\r\n            errs.email = ERROR_MESSAGES.email.required;\r\n        } else if (!emailRegex.test(email)) {\r\n            errs.email = ERROR_MESSAGES.email.invalid;\r\n        }\r\n    } else {\r\n        // В режиме login поле login — это только email\r\n        if (!login.trim()) {\r\n            errs.identifier = ERROR_MESSAGES.login.required;\r\n        } else if (login.length > 50) {\r\n            errs.identifier = ERROR_MESSAGES.login.tooLong;\r\n        } else if (!emailRegex.test(login)) {\r\n            errs.identifier = ERROR_MESSAGES.login.invalidEmail;\r\n        }\r\n    }\r\n\r\n    // Валидация поля login, когда логином может быть username или email\r\n    // else {\r\n    //     if (!login.trim()) {\r\n    //         errs.identifier = ERROR_MESSAGES.login.required;\r\n    //     } else if (login.length > 50) {\r\n    //         errs.identifier = ERROR_MESSAGES.login.tooLong;\r\n    //     } else if (login.includes(\"@\")) {\r\n    //         if (!emailRegex.test(login)) {\r\n    //             errs.login = ERROR_MESSAGES.login.invalidEmail;\r\n    //         }\r\n    //     } else {\r\n    //         if (!loginRegex.test(login)) {\r\n    //             errs.login = ERROR_MESSAGES.login.invalidChars;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    if (!password.trim()) {\r\n        errs.password = ERROR_MESSAGES.password.required;\r\n    } else if (mode === 'register' && !passwordRegex.test(password)) {\r\n        errs.password = ERROR_MESSAGES.password.invalid;\r\n    }\r\n\r\n    return errs;\r\n}\r\n\r\nexport default validate;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport function usePageTitle(title) {\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [location, title]);\r\n}","import { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AuthForm from \"../../../components/Auth/AuthForm/AuthForm\";\nimport \"./AuthPage.css\";\nimport UnverifiedNotice from \"../../../components/Auth/UnverifiedNotice/UnverifiedNotice\";\nimport validate from \"../../../utils/validateAuthForm\";\nimport {\n    regUser,\n    loginUser,\n    setAuthToken,\n    clearError,\n    resendVerification,\n} from \"../../../redux/reducers/userData/userDataSlice\";\nimport { memo, useEffect } from \"react\";\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\n\nconst pageTitles = {\n    login: \"Вход в систему\",\n    register: \"Регистрация\",\n    verified: \"Подтверждение email\"\n};\n\nfunction AuthPage({ mode }) {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { tempAuthToken, errAuth, isAuth, registerStatus, loginStatus, resendActStatus } = useSelector((state) => state.userData);\n\n    usePageTitle(`${pageTitles[mode]} | ${import.meta.env.VITE_SITE_NAME || \"Messaria\"}`);\n\n    // Обработка авторизации и активации\n    useEffect(() => {\n        if (isAuth) {\n            navigate(\"/feed\");\n        } else if (loginStatus === \"unactivated\") {\n            navigate(\"/auth/verified\");\n        }\n    }, [isAuth, loginStatus]);\n\n    useEffect(() => {\n        if (registerStatus === \"registered\") {\n            navigate(\"/auth/verified\");\n        }\n    }, [registerStatus]);\n\n    const handleSubmit = async (data) => {\n        const action = mode === \"register\" ? regUser(data) : loginUser(data);\n        await dispatch(action);\n    };\n\n    const handleResend = async () => {\n        await dispatch(resendVerification());\n    };\n\n    const handleSwitchMode = () => {\n        dispatch(clearError(true));\n        let to;\n        switch (mode) {\n            case \"register\":\n                to = \"/auth/sign-in\";\n                break;\n            case \"login\":\n                to = \"/auth/sign-up\";\n                break;\n            case \"verified\":\n                to = \"/auth/sign-in\";\n                break;\n            default:\n                to = \"/auth/sign-in\";\n        }\n        navigate(to);\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"tempAuthToken\");\n        if (token) dispatch(setAuthToken(token));\n        if (mode === \"verified\" && !token) navigate(\"/auth/sign-in\");\n    }, [mode, dispatch, navigate]);\n\n    return (\n        <>\n            <main className=\"auth__container\">\n                <h1 className=\"visually-hidden\">{document.title}</h1>\n\n                {(mode === \"register\" || mode === \"login\") && (\n                    <section>\n                        <AuthForm\n                            mode={mode}\n                            onSubmit={handleSubmit}\n                            validator={validate}\n                            externalError={errAuth ? errAuth : \"\"}\n                        />\n                    </section>\n                )}\n\n                {mode === \"verified\" && (\n                    <section>\n                        <UnverifiedNotice\n                            onResend={handleResend}\n                            isLoading={resendActStatus === \"pending\"}\n                            isSend={resendActStatus === \"shipped\"}\n                            hasToken={!!tempAuthToken}\n                            error={errAuth}\n                        />\n                    </section>\n                )}\n\n                <button\n                    className=\"auth__button\"\n                    onClick={() => handleSwitchMode(mode)}\n                    aria-label={\n                        mode === \"register\" ? \"Перейти к странице входа\" :\n                            mode === \"login\" ? \"Перейти к странице регистрации\" :\n                                \"Перейти к странице авторизации\"\n                    }\n                >\n                    {mode === \"register\" && \"Уже есть аккаунт? Войти\"}\n                    {mode === \"login\" && \"Нет аккаунта? Зарегистрироваться\"}\n                    {mode === \"verified\" && \"Подтвердил почту? Авторизация\"}\n                </button>\n            </main>\n        </>\n    );\n}\n\nexport default memo(AuthPage);","\r\nexport const icon = {\r\n    // Лого\r\n    logo: <svg fill=\"#000000\" width=\"58px\" height=\"58px\" viewBox=\"0 0 14 14\" role=\"img\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 7,1 C 3.6825,1 1,3.6865 1,7.0075 1,7.675 1.114,8.311 1.309,8.9125 l 1.7885,0 0,-5.048 L 7,7.7725 10.9025,3.865 l 0,5.0475 1.7885,0 C 12.8855,8.311 13,7.675 13,7.0075 13,3.6875 10.3175,1 7,1 Z M 6.106,8.6535 4.3975,6.943 l 0,3.1755 -2.5185,0 C 2.935,11.8445 4.839,13 7,13 c 2.161,0 4.081,-1.1555 5.1225,-2.882 l -2.52,0 0,-3.1755 -1.693,1.7105 -0.894,0.895 -0.907,-0.895 -0.0025,0 z\"/></svg>,\r\n\r\n    // Дом\r\n    home: <svg x=\"0px\" y=\"0px\" width=\"70.001px\" height=\"70.002px\" viewBox=\"0 0 70.001 70.002\"><g><g><g><path d=\"M52.001,69.438h-34c-7.57,0-9.619-2.521-9.619-10.375V23.438c0-1.104,0.896-2,2-2s2,0.896,2,2v35.625c0,5.721,0.235,6.375,5.619,6.375h34c5.383,0,6.381-0.654,6.381-6.375V23.438c0-1.104,0.896-2,2-2c1.104,0,2,0.896,2,2v35.625C62.382,66.918,59.571,69.438,52.001,69.438z\"/></g><g><path d=\"M43.382,68.438c-0.553,0-1-0.446-1-1V48.464c0-1.987-0.381-2.025-2.581-2.025h-9.599c-2.2,0-1.819,0.038-1.819,2.025v18.975c0,0.554-0.448,1-1,1c-0.553,0-1-0.446-1-1V48.464c0-3.444,0.915-4.025,3.819-4.025h9.599c2.904,0,4.581,0.581,4.581,4.025v18.975C44.382,67.992,43.934,68.438,43.382,68.438z\"/></g><g><path d=\"M2.002,29.396c-0.606,0-1.206-0.275-1.6-0.797c-0.664-0.883-0.486-2.137,0.396-2.801l33-24.833c0.883-0.664,2.137-0.487,2.801,0.396c0.664,0.883,0.487,2.137-0.396,2.801l-33,24.833C2.843,29.266,2.421,29.396,2.002,29.396z\" /></g><g><path d=\"M68,29.396c-0.419,0-0.841-0.131-1.201-0.402l-33-24.833c-0.881-0.664-1.059-1.918-0.396-2.801c0.665-0.883,1.919-1.058,2.802-0.396l33,24.833c0.883,0.664,1.06,1.918,0.396,2.801C69.207,29.123,68.606,29.396,68,29.396z\"/></g><g><path d=\"M17.382,38.438c-0.553,0-1-0.446-1-1V26.063c0-0.311-0.046-0.604,0.201-0.793l13.03-10.063c0.438-0.336,1.019-0.253,1.354,0.185c0.336,0.438,0.421,1.066-0.018,1.402l-12.567,9.762v10.882C18.382,37.992,17.934,38.438,17.382,38.438z\"/></g><g><path d=\"M17.382,43.438c-0.553,0-1-0.446-1-1v-1c0-0.553,0.447-1,1-1c0.552,0,1,0.447,1,1v1C18.382,42.992,17.934,43.438,17.382,43.438z\"/></g></g></g></svg>,\r\n\r\n    // Лупа\r\n    lens: <svg x=\"0px\" y=\"0px\" width=\"64.738px\" height=\"64.738px\" viewBox=\"0 0 64.738 64.738\"><g><g><g><path d=\"M24.5,49.333C10.991,49.333,0,38.344,0,24.834s10.991-24.5,24.5-24.5c13.51,0,24.5,10.99,24.5,24.5C49.001,38.344,38.012,49.333,24.5,49.333z M24.5,4.334C13.196,4.334,4,13.53,4,24.834c0,11.305,9.196,20.499,20.5,20.499c11.303,0,20.5-9.194,20.5-20.499C45,13.53,35.805,4.334,24.5,4.334z\"/></g><g><path d=\"M10.017,17.25c-0.174,0-0.35-0.045-0.51-0.141c-0.475-0.281-0.631-0.896-0.349-1.37c3.201-5.39,9.08-8.738,15.342-8.738c0.553,0,1,0.447,1,1c0,0.553-0.447,1-1,1c-5.56,0-10.779,2.974-13.622,7.76C10.691,17.076,10.359,17.25,10.017,17.25z\"/></g><g><path d=\"M7.667,25.248c-0.552,0-1-0.447-1-1c0-1.42,0.169-2.211,0.468-3.487c0.126-0.538,0.664-0.87,1.201-0.746c0.538,0.126,0.872,0.663,0.746,1.201c-0.28,1.198-0.415,1.827-0.415,3.032C8.667,24.801,8.22,25.248,7.667,25.248z\"/></g><g><path d=\"M58.739,64.404c-1.604,0-3.108-0.623-4.244-1.756L38.354,46.505c-1.252-1.252-1.664-2.799-1.161-4.356c0.409-1.269,1.37-2.338,2.161-3.127c1.173-1.172,2.613-2.371,4.423-2.371c0.771,0,1.93,0.238,3.063,1.371l16.143,16.141c1.133,1.135,1.756,2.641,1.756,4.244c0,1.602-0.623,3.109-1.756,4.242C61.848,63.781,60.342,64.404,58.739,64.404zM40.982,43.445c0.007,0,0.06,0.094,0.199,0.232L57.323,59.82c0.756,0.754,2.073,0.754,2.83,0c0.377-0.379,0.584-0.881,0.584-1.414c0-0.535-0.207-1.037-0.586-1.416L44.012,40.85c-0.144-0.144-0.236-0.195-0.263-0.203c-0.014,0.008-0.426,0.061-1.565,1.203C41.04,42.99,40.985,43.402,40.982,43.445L40.982,43.445z\"/></g></g></g></svg>,\r\n\r\n    // Блокнот\r\n    notepad: <svg x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\"><g> <g> <g> <path d=\"M59,57.068C59,60.896,55.896,64,52.068,64H11.932C8.104,64,5,60.896,5,57.068V6.932C5,3.104,8.104,0,11.932,0h40.136 C55.896,0,59,3.104,59,6.932V57.068z M55,6.932C55,5.313,53.688,4,52.068,4H11.932C10.313,4,9,5.313,9,6.932v50.136 C9,58.688,10.313,60,11.932,60h40.136C53.688,60,55,58.688,55,57.068V6.932z\"/> </g> <g> <path d=\"M19,63c-0.553,0-1-0.447-1-1V2c0-0.553,0.447-1,1-1c0.552,0,1,0.447,1,1v60C20,62.553,19.552,63,19,63z\"/> </g> <g> <g> <path d=\"M47.527,58H31.125c-0.553,0-1-0.447-1-1s0.447-1,1-1h16.402C49.105,56,51,54.109,51,51.184V48c0-0.553,0.447-1,1-1 s1,0.447,1,1v3.184C53,55.325,50.32,58,47.527,58z\"/> </g> <g> <path d=\"M51.245,43.951c-0.271,0-0.521-0.102-0.71-0.29c-0.182-0.181-0.29-0.44-0.29-0.71c0-0.262,0.108-0.521,0.29-0.71 c0.369-0.36,1.04-0.37,1.408,0c0.19,0.188,0.302,0.448,0.302,0.71c0,0.27-0.11,0.52-0.29,0.71 C51.766,43.85,51.505,43.951,51.245,43.951z\"/> </g> </g> <g> <path d=\"M45,22.432c-0.146,0-0.295-0.032-0.432-0.099L39,19.666l-5.568,2.668c-0.31,0.15-0.677,0.128-0.968-0.055 c-0.291-0.184-0.471-0.503-0.471-0.847V2c0-0.553,0.454-1.318,1.007-1.318h12c0.553,0,0.993,0.766,0.993,1.318v19.432 c0,0.344-0.175,0.663-0.464,0.847C45.368,22.38,45.186,22.432,45,22.432z M39,17.557c0.146,0,0.292,0.033,0.43,0.099l4.563,2.188 V2.682h-10v17.162l4.571-2.188C38.7,17.59,38.854,17.557,39,17.557z\"/> </g> </g></g></svg>,\r\n\r\n    // Карандаш\r\n    pencil: <svg x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\"><g> <g> <g> <path d=\"M2.435,63.924c-0.524,0-1.035-0.206-1.414-0.586l-0.435-0.434c-0.494-0.494-0.694-1.209-0.529-1.889 c0.606-2.49,3.786-15.07,6.883-18.166L47.062,2.728c1.71-1.711,4.009-2.652,6.475-2.652c2.606,0,5.08,1.036,6.961,2.918 l0.435,0.435c1.79,1.789,2.901,4.265,3.05,6.792c0.158,2.686-0.732,5.143-2.509,6.918L21.349,57.26 c-3.111,3.111-15.943,6.059-18.484,6.617C2.722,63.91,2.578,63.924,2.435,63.924z M53.536,4.076c-1.396,0-2.69,0.525-3.646,1.48 L9.768,45.678c-1.455,1.455-3.673,8.178-5.156,13.686c5.608-1.381,12.461-3.483,13.909-4.932L58.645,14.31 c0.956-0.957,1.435-2.326,1.344-3.854c-0.092-1.563-0.777-3.094-1.885-4.199l-0.435-0.435 C56.543,4.696,55.075,4.076,53.536,4.076z\"/> </g> <g> <path d=\"M56.956,18.171c-0.256,0-0.513-0.098-0.707-0.293L45.495,7.125c-0.392-0.391-0.392-1.023,0-1.414 c0.391-0.391,1.022-0.391,1.414,0l10.754,10.754c0.391,0.391,0.391,1.023,0,1.414C57.468,18.074,57.212,18.171,56.956,18.171z\"/> </g> <g> <path d=\"M20.556,54.573c-0.256,0-0.512-0.099-0.707-0.293L9.094,43.523c-0.391-0.391-0.391-1.022,0-1.414 c0.391-0.391,1.023-0.391,1.414,0l10.755,10.757c0.391,0.391,0.391,1.022,0,1.414C21.068,54.475,20.812,54.573,20.556,54.573z\"/> </g> <g> <path d=\"M12.69,59.708c-0.256,0-0.512-0.099-0.707-0.293l-6.889-6.892c-0.391-0.391-0.391-1.022,0-1.414 c0.391-0.391,1.023-0.391,1.414,0L13.397,58c0.391,0.391,0.391,1.023,0,1.414C13.202,59.609,12.946,59.708,12.69,59.708z\"/> </g> <g> <path d=\"M13.938,47.954c-0.256,0-0.512-0.099-0.707-0.293c-0.391-0.392-0.391-1.022,0-1.414l29.783-29.782 c0.391-0.391,1.023-0.391,1.414,0c0.391,0.391,0.391,1.023,0,1.414L14.645,47.661C14.45,47.855,14.194,47.954,13.938,47.954z\"/> </g> <g> <path d=\"M46.615,15.276c-0.257,0-0.513-0.098-0.707-0.293c-0.392-0.391-0.392-1.023,0-1.414l3.723-3.723 c0.391-0.391,1.022-0.391,1.414,0c0.391,0.391,0.391,1.023,0,1.414l-3.724,3.723C47.127,15.178,46.871,15.276,46.615,15.276z\"/> </g> <g> <path d=\"M17.247,51.262c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l36.399-36.398 c0.392-0.391,1.023-0.391,1.414,0c0.392,0.391,0.392,1.023,0,1.414L17.954,50.969C17.758,51.165,17.502,51.262,17.247,51.262z\"/> </g> </g></g></svg>,\r\n\r\n    // Выход\r\n    quit: <svg x=\"0px\" y=\"0px\" width=\"65.994px\" height=\"65.994px\" viewBox=\"0 0 65.994 65.994\"><g> <g> <g> <path d=\"M33.753,50.937c-5.351,0-10.35-2.052-14.076-5.776l-0.658-0.658c-3.777-3.778-5.829-8.849-5.776-14.278 c0.053-5.392,2.17-10.448,5.96-14.237L29.48,5.707c0.75-0.75,2.078-0.75,2.828,0L58.472,31.87 c0.375,0.375,0.586,0.884,0.586,1.414s-0.211,1.04-0.586,1.415L48.193,44.976C44.351,48.82,39.222,50.937,33.753,50.937z M30.895,9.95l-8.863,8.863c-3.045,3.045-4.745,7.111-4.788,11.449c-0.042,4.346,1.593,8.398,4.605,11.411l0.658,0.658 c2.97,2.97,6.964,4.604,11.247,4.604c4.399,0,8.523-1.7,11.613-4.789l8.862-8.863L30.895,9.95z\"/> </g> <g> <path d=\"M25.359,22.142c-0.256,0-0.513-0.098-0.708-0.293c-0.39-0.391-0.39-1.023,0.001-1.414l0.707-0.707 c0.391-0.391,1.024-0.391,1.415,0c0.39,0.392,0.39,1.024-0.001,1.414l-0.707,0.707C25.872,22.044,25.616,22.142,25.359,22.142z\" /> </g> <g> <path d=\"M22.17,34.815c-0.445,0-0.852-0.299-0.968-0.75c-0.964-3.733-0.402-7.773,1.541-11.083 c0.279-0.476,0.892-0.637,1.368-0.355c0.477,0.279,0.636,0.893,0.356,1.368c-1.677,2.856-2.161,6.345-1.329,9.57 c0.139,0.535-0.184,1.08-0.718,1.219C22.337,34.807,22.253,34.815,22.17,34.815z\"/> </g> <g> <path d=\"M3.816,65.994c-0.103,0-0.208-0.008-0.313-0.024c-1.089-0.172-1.834-1.19-1.664-2.281 c0.063-0.408,1.644-10.062,8.861-13.604c5.075-2.488,6.701-8.313,6.717-8.371c0.287-1.063,1.383-1.698,2.447-1.413 c1.065,0.283,1.7,1.372,1.42,2.438c-0.082,0.311-2.076,7.631-8.822,10.938c-5.336,2.617-6.66,10.55-6.673,10.631 C5.633,65.292,4.784,65.994,3.816,65.994z\"/> </g> <g> <g> <path d=\"M37.966,16.192c-0.512,0-1.023-0.194-1.414-0.586c-0.781-0.78-0.781-2.047,0-2.827L48.744,0.586 c0.779-0.781,2.048-0.781,2.828,0s0.78,2.047,0,2.828L39.38,15.606C38.99,15.997,38.477,16.192,37.966,16.192z\"/> </g> <g> <path d=\"M49.985,28.213c-0.512,0-1.022-0.195-1.413-0.586c-0.781-0.781-0.781-2.047,0-2.828l12.192-12.192 c0.78-0.78,2.048-0.78,2.828,0c0.781,0.781,0.781,2.048,0,2.828L51.399,27.627C51.011,28.018,50.498,28.213,49.985,28.213z\"/> </g> </g></g></g></svg>,\r\n\r\n    // Пользователь\r\n    user: <svg x=\"0px\" y=\"0px\" width=\"66.949px\" height=\"66.949px\" viewBox=\"0 0 66.949 66.949\"><g> <g> <g> <path d=\"M33.558,42.628c-9.49,0-16.428-17.231-16.428-26.2C17.129,7.369,24.499,0,33.558,0c9.059,0,16.428,7.369,16.428,16.428 C49.985,25.396,43.048,42.628,33.558,42.628z M33.558,4c-6.853,0-12.428,5.575-12.428,12.428c0,7.764,6.388,22.2,12.428,22.2 c6.039,0,12.428-14.437,12.428-22.2C45.985,9.575,40.411,4,33.558,4z\"/> </g> <g> <g> <path d=\"M25.163,17.899c-0.553,0-1-0.447-1-1c0-5.499,4.474-9.973,9.973-9.973c0.552,0,1,0.448,1,1c0,0.553-0.448,1-1,1 c-4.396,0-7.973,3.577-7.973,7.973C26.163,17.452,25.715,17.899,25.163,17.899z\"/> </g> <g> <path d=\"M25.514,21.738c-0.27,0-0.52-0.1-0.71-0.29c-0.189-0.189-0.29-0.45-0.29-0.71c0-0.26,0.101-0.52,0.29-0.71 c0.37-0.37,1.04-0.37,1.41,0c0.19,0.19,0.3,0.45,0.3,0.71c0,0.271-0.109,0.521-0.3,0.71 C26.035,21.639,25.774,21.738,25.514,21.738z\"/> </g> </g> <g> <path d=\"M33.475,66.949c-5.649,0-24.083-0.577-24.083-8c0-10.635,7.018-20.227,17.066-23.326l1.225-0.378l0.855,0.955 c3.062,3.42,6.725,3.581,10.01-0.065l0.861-0.957l1.227,0.387c9.963,3.145,16.922,12.761,16.922,23.386 C57.558,66.372,39.124,66.949,33.475,66.949z M26.502,39.834c-7.777,2.934-13.111,10.625-13.111,19.115c0,1.102,6.175,4,20.083,4 c13.907,0,20.083-2.898,20.083-4c0-8.486-5.283-16.199-12.986-19.17c-2.141,2-4.543,3.049-7.014,3.049 C31.03,42.828,28.614,41.799,26.502,39.834z\"/> </g> </g></g></svg>,\r\n\r\n    // Ошибка\r\n    error: <svg x=\"0px\" y=\"0px\" width=\"66.109px\" height=\"66.109px\" viewBox=\"0 0 66.109 66.109\"><g> <g> <g> <g> <path d=\"M52.311,66.109c-0.005,0-0.013,0-0.02,0H13.346c-0.621,0-1.207-0.289-1.586-0.781c-0.378-0.492-0.507-1.133-0.347-1.732 c0.55-2.065,13.49-50.68,15.78-57.185C28.162,3.659,29.792,0,32.755,0c2.94,0,4.552,3.597,5.508,6.303 c2.405,6.803,14.717,52.655,15.89,57.024c0.103,0.24,0.158,0.506,0.158,0.783C54.311,65.215,53.416,66.109,52.311,66.109z M15.95,62.109h33.733c-2.757-10.248-13.088-48.524-15.19-54.474c-0.789-2.231-1.424-3.138-1.737-3.482 c-0.321,0.35-0.975,1.277-1.787,3.586C29.021,13.267,18.696,51.824,15.95,62.109z\"/> </g> </g> <g> <path d=\"M59.055,66.109h-52c-1.104,0-2-0.895-2-2c0-1.104,0.896-2,2-2h52c1.104,0,2,0.896,2,2 C61.055,65.215,60.158,66.109,59.055,66.109z\"/> </g> <g> <path d=\"M48.055,53.109h-32c-0.553,0-1-0.447-1-1s0.447-1,1-1h32c0.553,0,1,0.447,1,1S48.607,53.109,48.055,53.109z\"/> </g> <g> <path d=\"M45.055,38.109h-7c-0.553,0-1-0.447-1-1s0.447-1,1-1h7c0.553,0,1,0.447,1,1S45.607,38.109,45.055,38.109z\"/> </g> <g> <path d=\"M34.054,38.109h-14c-0.553,0-1-0.447-1-1s0.447-1,1-1h14c0.553,0,1,0.447,1,1S34.606,38.109,34.054,38.109z\"/> </g> <g> <path d=\"M41.055,23.109h-16c-0.553,0-1-0.447-1-1c0-0.553,0.447-1,1-1h16c0.553,0,1,0.447,1,1 C42.055,22.662,41.607,23.109,41.055,23.109z\"/> </g> </g></g></svg>,\r\n}","import { Link, useSearchParams } from \"react-router-dom\";\r\nimport \"./ErrorPage.css\";\r\nimport { icon } from \"../../../elements/svgIcon\";\r\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\r\n\r\nconst sanitizeText = (str) => {\r\n    if (!str) return '';\r\n    return String(str)\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#x27;');\r\n};\r\n\r\nconst errorMessages = {\r\n    '400': {\r\n        title: 'Ошибка 400 - Неверный запрос',\r\n        description: 'Сервер не может обработать ваш запрос из-за некорректного синтаксиса.'\r\n    },\r\n    '401': {\r\n        title: 'Ошибка 401 - Требуется авторизация',\r\n        description: 'Для доступа к этой странице необходимо войти в систему.'\r\n    },\r\n    '403': {\r\n        title: 'Ошибка 403 - Доступ запрещён',\r\n        description: 'У вас нет прав для просмотра этой страницы.'\r\n    },\r\n    '404': {\r\n        title: 'Ошибка 404 - Страница не найдена',\r\n        description: 'Запрошенная страница не существует или была перемещена.'\r\n    },\r\n    '500': {\r\n        title: 'Ошибка 500 - Ошибка сервера',\r\n        description: 'Внутренняя ошибка сервера. Пожалуйста, попробуйте позже.'\r\n    }\r\n};\r\n\r\nconst ErrorPage = () => {\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const errorCode = sanitizeText(searchParams.get('code')) || '404';\r\n    const customMessage = searchParams.get('message');\r\n\r\n    const { title, description } = errorMessages[errorCode] || errorMessages['404'];\r\n    const safeCustomMessage = customMessage\r\n        ? sanitizeText(decodeURIComponent(customMessage))\r\n        : null;\r\n\r\n    usePageTitle(`${title} | ${import.meta.env.VITE_SITE_NAME || \"Messaria\"}`);\r\n\r\n    return (\r\n        <div className=\"error-page__box\" role=\"alert\">\r\n            <h1 className=\"visually-hidden\">{title}</h1>\r\n\r\n            <div className=\"error-page\">\r\n                <div className=\"error-page__icon\" aria-hidden=\"true\">\r\n                    {icon.error || '⚠️'}\r\n                </div>\r\n\r\n                <div className=\"error-page__text-box\">\r\n                    <h2 className=\"error-page__code\">Ошибка {errorCode}</h2>\r\n\r\n                    <p className=\"error-page__description\">\r\n                        {safeCustomMessage || description}\r\n                    </p>\r\n\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"error-page__button\"\r\n                        aria-label=\"Вернуться на главную страницу\"\r\n                    >\r\n                        На главную\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","import \"./AppNavbar.css\";\nimport { icon } from \"../../elements/svgIcon\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPendingNavigation } from \"../../redux/reducers/appSettings/appSettingsSlice\";\n\nconst AppNavbar = ({ isAuth }) => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const hasUnsavedChanges = useSelector(state => state.appSettings.hasUnsavedChanges);\n\n    const navItems = [\n        { path: \"/feed\", icon: icon.home, label: \"Главная\" },\n        { path: \"/posts/search\", icon: icon.lens, label: \"Поиск новостей\" },\n        ...(isAuth ? [\n            { path: \"/posts/favorites\", icon: icon.notepad, label: \"Избранное\" },\n            { path: \"/posts/create\", icon: icon.pencil, label: \"Создать новость\" }\n        ] : [])\n    ];\n\n    const isActivePath = (path) => {\n        if (path === '/') {\n            return location.pathname === '/';\n        }\n        return location.pathname.startsWith(path);\n    };\n\n    // Обработчик для всех защищенных ссылок\n    const handleProtectedClick = (path) => (e) => {\n        if (isActivePath(path)) {\n            e.preventDefault();\n            return;\n        }\n        if (hasUnsavedChanges) {\n            e.preventDefault();\n            dispatch(setPendingNavigation(path));\n        }\n        // Если нет изменений - переход произойдет как обычно\n    };\n\n    return (\n        <nav className=\"appnavbar__container\" aria-label=\"Основная навигация\">\n            {/* Логотип */}\n            <Link\n                to=\"/\"\n                className={`appnavbar__link-logo`}\n                aria-label=\"На главную\"\n                onClick={handleProtectedClick(\"/\")}\n            >\n                <span role=\"img\" aria-hidden=\"true\">{icon.logo}</span>\n            </Link>\n\n            {/* Основные навигационные ссылки */}\n            <ul className=\"appnavbar__user-btn-box\">\n                {navItems.map((item) => (\n                    <li key={item.path}>\n                        <Link\n                            to={item.path}\n                            className={isActivePath(item.path) ? \"appnavbar__active-btn\" : \"\"}\n                            aria-current={isActivePath(item.path) ? \"page\" : undefined}\n                            title={item.label}\n                            onClick={handleProtectedClick(item.path)}\n                        >\n                            <span role=\"img\" aria-label={item.label}>{item.icon}</span>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n\n            {/* Блок пользователя */}\n            <div className=\"appnavbar__user-box\">\n                {isAuth ? (\n                    <>\n                        <Link\n                            to=\"/auth/logout\"\n                            className={`appnavbar__btn-quit`}\n                            onClick={(e) => {\n                                handleProtectedClick(\"/auth/logout\")(e);\n                            }}\n                            title=\"Выйти\"\n                        >\n                            <span role=\"img\" aria-label=\"Выйти\">{icon.quit}</span>\n                        </Link>\n                        <Link\n                            to=\"/user/settings\"\n                            className={`appnavbar__btn-user`}\n                            title=\"Настройки профиля\"\n                            onClick={handleProtectedClick(\"/user/settings\")}\n                        >\n                            <span role=\"img\" aria-label=\"Профиль\">{icon.user}</span>\n                        </Link>\n                    </>\n                ) : (\n                    <Link\n                        to=\"/auth/sign-in\"\n                        className={`appnavbar__btn-user`}\n                        title=\"Войти\"\n                        onClick={handleProtectedClick(\"/auth/sign-in\")}\n                    >\n                        <span role=\"img\" aria-label=\"Войти\">{icon.user}</span>\n                    </Link>\n                )}\n            </div>\n        </nav>\n    );\n};\n\nexport default memo(AppNavbar);","import { useDispatch, useSelector } from 'react-redux';\r\nimport { clearPendingNavigation, setUnsavedChanges } from \"../../redux/reducers/appSettings/appSettingsSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport './ConfirmNavigationModal.css';\r\n\r\nconst ConfirmNavigationModal = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { pendingNavigation, hasUnsavedChanges} = useSelector(state => state.appSettings);\r\n\r\n    const handleBeforeUnload = (e) => {\r\n        if (hasUnsavedChanges) {\r\n            e.preventDefault();\r\n            e.returnValue = 'У вас есть несохраненные изменения. Вы уверены, что хотите уйти?';\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('beforeunload', handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        };\r\n    }, [hasUnsavedChanges]);\r\n\r\n    const handleConfirm = () => {\r\n        // Разрешаем навигацию\r\n        window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        dispatch(setUnsavedChanges(false));\r\n        if (pendingNavigation) {\r\n            navigate(pendingNavigation);\r\n        }\r\n        dispatch(clearPendingNavigation());\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        dispatch(clearPendingNavigation());\r\n    };\r\n\r\n    if (!pendingNavigation) return null;\r\n\r\n    return (\r\n        <div className=\"confirm-modal\">\r\n            <div className=\"confirm-modal__content\">\r\n                <h2 className=\"confirm-modal__title\">Несохраненные изменения</h2>\r\n                <p className=\"confirm-modal__message\">\r\n                    У вас есть несохраненные изменения. <br />Вы уверены, что хотите уйти?<br />\r\n                    Все несохраненные изменения будут потеряны.\r\n                </p>\r\n                <div className=\"confirm-modal__actions\">\r\n                    <button\r\n                        className=\"confirm-modal__button confirm-modal__button--cancel\"\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Отмена\r\n                    </button>\r\n                    <button\r\n                        className=\"confirm-modal__button confirm-modal__button--confirm\"\r\n                        onClick={handleConfirm}\r\n                    >\r\n                        Выйти\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmNavigationModal;","import AppNavbar from \"../components/App/AppNavbar\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport \"./AppLayout.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkToken, logoutUser } from \"../redux/reducers/userData/userDataSlice\";\r\nimport { memo, useEffect } from \"react\";\r\nimport ConfirmNavigationModal from \"../components/App/ConfirmNavigationModal\";\r\n\r\nconst AppLayout = () => {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, authCheckStatus } = useSelector(state => state.userData);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        let isMounted = true;\r\n\r\n        const startInterval = () => {\r\n            if (isMounted && isAuth && authCheckStatus !== 'logout') {\r\n                interval = setInterval(() => {\r\n                    dispatch(checkToken());\r\n                }, 6 * 60 * 1000); // Автопроверка авторизации\r\n            }\r\n        };\r\n\r\n        if (authCheckStatus === 'idle') {\r\n            dispatch(checkToken());\r\n        }\r\n\r\n        startInterval();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n            if (interval) clearInterval(interval);\r\n        };\r\n    }, [dispatch, isAuth, authCheckStatus]);\r\n\r\n    const logout = (eo) => {\r\n        eo.preventDefault();\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    return (\r\n        <div className=\"applayout__container\">\r\n            <div className=\"applayout__nav\">\r\n                <AppNavbar isAuth={isAuth} logout={logout}/>\r\n            </div>\r\n            <main className=\"applayout__main\">\r\n                <ConfirmNavigationModal />\r\n                <Outlet />\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(AppLayout);","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = () => (\r\n    <div className=\"loading-spinner\">\r\n        <div className=\"spinner\" />\r\n    </div>\r\n);\r\n\r\nexport default LoadingSpinner;","import React, { useState, useEffect, memo } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    fetchUserPosts,\r\n    fetchFavoritePosts,\r\n    deletePost,\r\n} from \"../../../redux/reducers/postsData/postsDataSlice\";\r\nimport { addFavorite, removeFavorite } from '../../../redux/reducers/postsData/favoritesThunks';\r\nimport LoadingSpinner from '../../../components/common/LoadingSpinner/LoadingSpinner';\r\nimport { FaBookmark } from \"react-icons/fa\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { RiDeleteBin7Fill } from \"react-icons/ri\";\r\nimport './PostsListPage.css';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst PostsListPage = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { isAuth, isAdmin } = useSelector(state => state.userData);\r\n    const { userPosts, favoritePosts, statusFavList } = useSelector(state => state.postsData);\r\n    const [activeTab, setActiveTab] = useState('my');\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(fetchUserPosts());\r\n            dispatch(fetchFavoritePosts());\r\n        }\r\n    }, [dispatch, isAuth]);\r\n\r\n    const handleDelete = async (postId, e) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Вы уверены, что хотите удалить этот пост?')) {\r\n            await dispatch(deletePost(postId));\r\n            // Обновляем списки после удаления\r\n            dispatch(fetchUserPosts());\r\n            dispatch(fetchFavoritePosts());\r\n        }\r\n    };\r\n\r\n    const handleToggleFavorite = async (postId, e) => {\r\n        e.stopPropagation();\r\n        const isFav = favoritePosts.some(p => p.id === postId);\r\n        const action = isFav ? removeFavorite : addFavorite;\r\n\r\n        await dispatch(action({ postId }));\r\n        dispatch(fetchFavoritePosts());\r\n    };\r\n\r\n    const handlePostClick = (postId) => {\r\n        navigate(`/posts/view/${postId}`);\r\n    };\r\n\r\n    const handleEdit = (postId, e) => {\r\n        e.stopPropagation();\r\n        navigate(`/posts/edit/${postId}`);\r\n    };\r\n\r\n    if (statusFavList === 'loading') return <LoadingSpinner />;\r\n\r\n    return (\r\n        <div className=\"posts-list-page\">\r\n            <Helmet>\r\n                <title>Блокнот | Messarea</title>\r\n                <meta name=\"description\" content=\"Список избранного\" />\r\n            </Helmet>\r\n            <h1 className=\"posts-list-page__page-title\"> Блокнот </h1>\r\n\r\n            <div className=\"posts-list-page__tabs\">\r\n                <button\r\n                    className={`posts-list-page__tab-btn ${activeTab === 'my' ? 'posts-list-page__tab-btn--active' : ''}`}\r\n                    onClick={() => setActiveTab('my')}\r\n                >\r\n                    Мои посты\r\n                </button>\r\n                <button\r\n                    className={`posts-list-page__tab-btn ${activeTab === 'favorites' ? 'posts-list-page__tab-btn--active' : ''}`}\r\n                    onClick={() => setActiveTab('favorites')}\r\n                >\r\n                    Избранное\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"posts-list-page__posts-container\">\r\n                {(activeTab === 'my' ? userPosts : favoritePosts).map(post => (\r\n                    <div\r\n                        key={post.id}\r\n                        className=\"posts-list-page__post-item\"\r\n                        onClick={() => handlePostClick(post.id)}\r\n                    >\r\n                        <div className=\"posts-list-page__post-content\">\r\n                            <h3 className=\"posts-list-page__post-title\">{post.title}</h3>\r\n                            <p className=\"posts-list-page__post-description\">{post.description || 'Без описания'}</p>\r\n                            <div className=\"posts-list-page__post-meta\">\r\n                                <span>Автор: {post.author?.username || 'Неизвестно'}</span>\r\n                                <span>Статус: {post.status === 'published' ? 'Опубликован' : 'Черновик'}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"posts-list-page__post-actions\">\r\n                            {/* Для \"Мои посты\" - кнопки редактирования и удаления */}\r\n                            {activeTab === 'my' && (\r\n                                <>\r\n                                    <button\r\n                                        className=\"posts-list-page__action-btn\"\r\n                                        onClick={(e) => handleEdit(post.id, e)}\r\n                                        title=\"Редактировать\"\r\n                                    >\r\n                                        <MdEdit size={20} />\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"posts-list-page__action-btn\"\r\n                                        onClick={(e) => handleDelete(post.id, e)}\r\n                                        title=\"Удалить\"\r\n                                    >\r\n                                        <RiDeleteBin7Fill size={20} />\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n\r\n                            {/* Для \"Избранное\" - кнопка избранного и админские кнопки */}\r\n                            {activeTab === 'favorites' && (\r\n                                <>\r\n                                    <button\r\n                                        className={`posts-list-page__action-btn posts-list-page__fav-btn`}\r\n                                        onClick={(e) => handleToggleFavorite(post.id, e)}\r\n                                        title=\"Убрать из избранного\"\r\n                                    >\r\n                                        <FaBookmark size={20} />\r\n                                    </button>\r\n\r\n                                    {isAdmin && (\r\n                                        <>\r\n                                            <button\r\n                                                className=\"posts-list-page__action-btn\"\r\n                                                onClick={(e) => handleEdit(post.id, e)}\r\n                                                title=\"Редактировать\"\r\n                                            >\r\n                                                <MdEdit size={20} />\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"posts-list-page__action-btn\"\r\n                                                onClick={(e) => handleDelete(post.id, e)}\r\n                                                title=\"Удалить\"\r\n                                            >\r\n                                                <RiDeleteBin7Fill size={20} />\r\n                                            </button>\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                {(activeTab === 'my' && userPosts.length === 0) && (\r\n                    <div className=\"posts-list-page__empty-state\">\r\n                        <p>У вас пока нет постов</p>\r\n                        <button\r\n                            className=\"posts-list-page__create-btn\"\r\n                            onClick={() => navigate('/posts/create')}\r\n                        >\r\n                            Создать первый пост\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {(activeTab === 'favorites' && favoritePosts.length === 0) && (\r\n                    <div className=\"posts-list-page__empty-state\">\r\n                        <p>У вас пока нет избранных постов</p>\r\n                        <button\r\n                            className=\"posts-list-page__search-btn\"\r\n                            onClick={() => navigate('/posts/search')}\r\n                        >\r\n                            Найти интересные посты\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PostsListPage);","import React, { forwardRef, memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./PostCard.css\";\r\n\r\nconst PostCard = forwardRef(({ post }, ref) => {\r\n    return (\r\n        <div className=\"post-card\" ref={ref}>\r\n            <div className=\"post-card__content\">\r\n                <h2 className=\"post-card__title\">\r\n                    <Link to={`/posts/view/${post.id}`}>{post.title}</Link>\r\n                </h2>\r\n\r\n                <div className=\"post-card__meta\">\r\n                    <span className=\"post-card__author\">\r\n                        Автор: {post.author?.username || \"Неизвестный автор\"}\r\n                    </span>\r\n                    <span className=\"post-card__date\">\r\n                        {new Date(post.createdAt).toLocaleDateString(\"ru-RU\", {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: 'numeric'\r\n                        })}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"post-card__excerpt\">\r\n                    {post.excerpt}\r\n                    <div className=\"post-card__fade\"></div>\r\n                </div>\r\n\r\n                <div className=\"post-card__actions\">\r\n                    <Link to={`/posts/view/${post.id}`} className=\"post-card__read-more\">\r\n                        Читать полностью\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(PostCard);","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchFeedPosts } from \"../../../redux/reducers/postsData/postsDataSlice\";\r\nimport PostCard from \"../../../components/Post/PostCard\";\r\nimport LoadingSpinner from \"../../../components/common/LoadingSpinner/LoadingSpinner\";\r\nimport \"./FeedPage.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst FeedPage = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        feedPosts,\r\n        feedPage,\r\n        feedTotalPages,\r\n        feedStatus\r\n    } = useSelector(state => state.postsData);\r\n\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n    const observer = useRef();\r\n\r\n    // Загрузка начальных данных\r\n    useEffect(() => {\r\n        dispatch(fetchFeedPosts({ page: 1 }));\r\n    }, []);\r\n\r\n    // Обработчик для бесконечной прокрутки\r\n    const lastPostRef = useCallback(node => {\r\n        if (feedStatus === 'loading' || feedStatus === 'loading-more') return;\r\n        if (observer.current) observer.current.disconnect();\r\n\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting && feedPage < feedTotalPages) {\r\n                setIsLoadingMore(true);\r\n                dispatch(fetchFeedPosts({ page: feedPage + 1 }))\r\n                .finally(() => setIsLoadingMore(false));\r\n            }\r\n        });\r\n\r\n        if (node) observer.current.observe(node);\r\n    }, [feedStatus, feedPage, feedTotalPages, dispatch]);\r\n\r\n    return (\r\n        <div className=\"feed-page\">\r\n            <Helmet>\r\n                <title>Лента постов | Messarea</title>\r\n                <meta name=\"description\" content=\"Лента с постами\" />\r\n            </Helmet>\r\n\r\n            <h1 className=\"feed-page__title\">Лента постов</h1>\r\n\r\n            <div className=\"feed-page__posts\">\r\n                {feedPosts.map((post, index) => (\r\n                    <PostCard\r\n                        key={`${post.id}-${index}`}\r\n                        post={post}\r\n                        ref={index === feedPosts.length - 1 ? lastPostRef : null}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {(feedStatus === 'loading' || isLoadingMore) && (\r\n                <div className=\"feed-page__loader\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n\r\n            {feedStatus === 'succeeded' && feedPosts.length === 0 && (\r\n                <div className=\"feed-page__empty\">\r\n                    <p>Пока нет постов в ленте</p>\r\n                    <p>Будьте первым, кто создаст пост!</p>\r\n                </div>\r\n            )}\r\n\r\n            {feedStatus === 'succeeded' && feedPosts.length > 0 && feedPage < feedTotalPages && !isLoadingMore && (\r\n                <div className=\"feed-page__pagination\">\r\n                    <button\r\n                        className=\"feed-page__load-more\"\r\n                        onClick={() => {\r\n                            setIsLoadingMore(true);\r\n                            dispatch(fetchFeedPosts({ page: feedPage + 1 }))\r\n                            .finally(() => setIsLoadingMore(false));\r\n                        }}\r\n                        disabled={isLoadingMore}\r\n                    >\r\n                        {isLoadingMore ? 'Загрузка...' : 'Загрузить еще'}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedPage;","import { Outlet } from \"react-router-dom\";\r\nimport \"./PostsLayout.css\";\r\n\r\nconst PostsLayout = () => {\r\n    return (\r\n        <div className=\"postslayout__container\">\r\n            <Outlet />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsLayout;","import { Outlet } from \"react-router-dom\";\r\n\r\nconst UserLayout = () => {\r\n    return (\r\n        <Outlet />\r\n    );\r\n};\r\n\r\nexport default UserLayout;","import { Outlet } from \"react-router-dom\";\r\nimport \"./AuthLayout.css\";\r\n\r\nconst AuthLayout = () => {\r\n    return (\r\n        <main className=\"authlayout__main\">\r\n            <Outlet />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default AuthLayout;","import { useEffect, useRef } from 'react';\r\n\r\nfunction useDeepCompareEffect(callback, dependencies) {\r\n    const prevDepsRef = useRef([]);\r\n    const isFirstRender = useRef(true);\r\n\r\n    // Сериализуем зависимости в строки\r\n    const serializedDeps = dependencies.map(dep => JSON.stringify(dep));\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            // Пропускаем первый вызов эффекта\r\n            isFirstRender.current = false;\r\n            prevDepsRef.current = serializedDeps;\r\n            return;\r\n        }\r\n\r\n        // Сравниваем с предыдущими сериализованными зависимостями\r\n        const hasChanged = serializedDeps.some(\r\n            (dep, index) => dep !== prevDepsRef.current[index]\r\n        );\r\n\r\n        if (hasChanged) {\r\n            callback();\r\n            prevDepsRef.current = serializedDeps;\r\n        }\r\n    }, [callback, ...serializedDeps]);\r\n}\r\n\r\nexport default useDeepCompareEffect;\r\n\r\n// пример вызова\r\n// useDeepCompareEffect(() => {\r\n//     onChanged(); // что вызвать если изменилось состояние\r\n// }, [Arr1, Obj1, ...);","import React, { useRef, useState, useImperativeHandle, forwardRef, useEffect, memo } from \"react\";\r\nimport './MetaBlock.css';\r\nimport useDeepCompareEffect from \"../../../hooks/useDeepCompareEffect\";\r\n\r\nconst MetaBlock = forwardRef(({ initialMeta, onChange }, ref) => {\r\n    const titleRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const keywordsRef = useRef();\r\n    const [localMeta, setLocalMeta] = useState({\r\n        title: initialMeta?.title || '',\r\n        description: initialMeta?.description || '',\r\n        keywords: initialMeta?.keywords || '',\r\n    });\r\n    const [errors, setErrors] = useState({\r\n        title: false,\r\n        description: false,\r\n        keywords: false,\r\n    });\r\n\r\n    useDeepCompareEffect(() => {\r\n        onChange();\r\n    }, [localMeta]);\r\n\r\n    useEffect(() => {\r\n        setLocalMeta({\r\n            title: initialMeta?.title || '',\r\n            description: initialMeta?.description || '',\r\n            keywords: initialMeta?.keywords || '',\r\n        });\r\n        setErrors({ title: false, description: false, keywords: false });\r\n    }, [initialMeta]);\r\n\r\n    const onUpdate = (updatedFields) => {\r\n        setLocalMeta(prev => ({\r\n            ...prev,\r\n            ...updatedFields\r\n        }));\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        validateMeta() {\r\n            const newErrors = {\r\n                title: !localMeta.title.trim(),\r\n                description: !localMeta.description.trim(),\r\n                keywords: !localMeta.keywords.trim(),\r\n            };\r\n            setErrors(newErrors);\r\n\r\n            if (newErrors.title) {\r\n                titleRef.current.focus();\r\n                return false;\r\n            }\r\n            if (newErrors.description) {\r\n                descriptionRef.current.focus();\r\n                return false;\r\n            }\r\n            if (newErrors.keywords) {\r\n                keywordsRef.current.focus();\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        getMeta() {\r\n            return {...localMeta}\r\n        },\r\n    }));\r\n\r\n    return (\r\n        <div className=\"metablock\">\r\n            <div className=\"metablock__field\">\r\n                <label className=\"metablock__label\">\r\n                    Заглавие*\r\n                    <input\r\n                        ref={titleRef}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={localMeta.title}\r\n                        onChange={e => onUpdate({ title: e.target.value })}\r\n                        className={`metablock__input ${errors.title ? 'metablock__input--error' : ''}`}\r\n                        placeholder=\"Заглавие статьи\"\r\n                    />\r\n                </label>\r\n                {errors.title && <div className=\"metablock__error\">Поле обязательно для заполнения (заглавие статьи).</div>}\r\n            </div>\r\n\r\n            <div className=\"metablock__field\">\r\n                <label className=\"metablock__label\">\r\n                    Meta description*\r\n                    <textarea\r\n                        name=\"description\"\r\n                        ref={descriptionRef}\r\n                        value={localMeta.description}\r\n                        onChange={e => onUpdate({ description: e.target.value })}\r\n                        className={`metablock__textarea ${errors.description ? 'metablock__textarea--error' : ''}`}\r\n                        placeholder=\"Короткое описание для поисковых систем\"\r\n                    />\r\n                </label>\r\n                {errors.description && <div className=\"metablock__error\">Поле обязательно для заполнения (короткое описание статьи).</div>}\r\n            </div>\r\n\r\n            <div className=\"metablock__field\">\r\n                <label className=\"metablock__label\">\r\n                    Meta keywords*\r\n                    <input\r\n                        ref={keywordsRef}\r\n                        type=\"text\"\r\n                        name=\"keywords\"\r\n                        value={localMeta.keywords}\r\n                        onChange={e => onUpdate({ keywords: e.target.value })}\r\n                        className={`metablock__input ${errors.keywords ? 'metablock__input--error' : ''}`}\r\n                        placeholder=\"Ключевые слова через запятую\"\r\n                    />\r\n                </label>\r\n                {errors.keywords && <div className=\"metablock__error\">Поле обязательно для заполнения (ключевые слова через запятую).</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(MetaBlock);","import React, { useState, useRef, useEffect, memo } from \"react\";\r\nimport { FaPlus, FaRegImage } from \"react-icons/fa\";\r\nimport { FaT } from \"react-icons/fa6\";\r\nimport { LuHeading } from \"react-icons/lu\";\r\nimport './AddMenu.css';\r\n\r\nconst AddMenu = ({ index, onAdd }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const menuRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const toggle = (e) => {\r\n        e.stopPropagation();\r\n        setOpen(prev => !prev);\r\n    };\r\n\r\n    const handleAdd = (type) => {\r\n        onAdd(index, type);\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div ref={menuRef} className=\"addmenu\">\r\n            <div className=\"addmenu__container\">\r\n                <button\r\n                    onClick={toggle}\r\n                    className=\"addmenu__toggle\"\r\n                    title=\"Добавить блок\"\r\n                    type=\"button\"\r\n                >\r\n                    <FaPlus size=\"20\"/>\r\n                </button>\r\n                <div className=\"addmenu__divider\" />\r\n            </div>\r\n\r\n            {open && (\r\n                <div className=\"addmenu__menu\">\r\n                    <button\r\n                        onClick={() => handleAdd('text')}\r\n                        className=\"addmenu__button\"\r\n                        title=\"Текст\"\r\n                        type=\"button\"\r\n                    >\r\n                        <FaT className=\"addmenu__icon\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleAdd('heading')}\r\n                        className=\"addmenu__button\"\r\n                        title=\"Заголовок\"\r\n                        type=\"button\"\r\n                    >\r\n                        <LuHeading className=\"addmenu__icon\" size=\"20\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleAdd('image')}\r\n                        className=\"addmenu__button\"\r\n                        title=\"Изображение\"\r\n                        type=\"button\"\r\n                    >\r\n                        <FaRegImage className=\"addmenu__icon\" size=\"20\" />\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(AddMenu);","import React, { useImperativeHandle, forwardRef, useRef, useState, useEffect, useCallback, memo } from \"react\";\r\nimport {\r\n    FaAlignCenter,\r\n    FaAlignLeft,\r\n    FaAlignRight,\r\n    FaAlignJustify,\r\n    FaBold,\r\n    FaItalic,\r\n    FaUnderline,\r\n    FaStrikethrough\r\n} from \"react-icons/fa\";\r\nimport { MdVerticalAlignTop, MdVerticalAlignBottom } from \"react-icons/md\";\r\nimport './TextBlock.css';\r\nimport useDeepCompareEffect from \"../../../hooks/useDeepCompareEffect\";\r\n\r\nconst DEFAULT_FORMATTING = {\r\n    bold: false,\r\n    italic: false,\r\n    underline: false,\r\n    strikethrough: false,\r\n    color: '#000000',\r\n    alignment: 'left',\r\n    fontSize: 14,\r\n    useMarginTop: false,\r\n    marginTop: 0,\r\n    useMarginBottom: false,\r\n    marginBottom: 0,\r\n}\r\n\r\nconst formatButtons = [\r\n    {\r\n        format: 'bold',\r\n        icon: <FaBold />,\r\n        title: 'Жирный',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        format: 'italic',\r\n        icon: <FaItalic />,\r\n        title: 'Курсив',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        format: 'underline',\r\n        icon: <FaUnderline />,\r\n        title: 'Подчёркнутый',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        format: 'strikethrough',\r\n        icon: <FaStrikethrough />,\r\n        title: 'Зачёркнутый',\r\n        disabledBtn: false,\r\n    }\r\n];\r\n\r\nconst alignmentButtons = [\r\n    {\r\n        value: 'left',\r\n        icon: <FaAlignLeft />,\r\n        title: 'По левому краю',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'center',\r\n        icon: <FaAlignCenter />,\r\n        title: 'По центру',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'right',\r\n        icon: <FaAlignRight />,\r\n        title: 'По правому краю',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'justify',\r\n        icon: <FaAlignJustify />,\r\n        title: 'Растянуть',\r\n        disabledBtn: false,\r\n    }\r\n];\r\n\r\nconst fontSizeOptions = [\r\n    { value: 10, label: '10px' },\r\n    { value: 12, label: '12px' },\r\n    { value: 14, label: '14px' },\r\n    { value: 16, label: '16px' },\r\n    { value: 18, label: '18px' },\r\n    { value: 20, label: '20px' },\r\n    { value: 24, label: '24px' }\r\n];\r\n\r\nconst TextBlock = forwardRef(({ block, onChange, showSettings }, ref) => {\r\n    const textareaRef = useRef();\r\n    const [text, setText] = useState(block.content || '');\r\n    const [formatting, setFormatting] = useState({\r\n        ...DEFAULT_FORMATTING,\r\n        ...block.formatting\r\n    });\r\n    const [error, setError] = useState(false);\r\n\r\n    useDeepCompareEffect(() => {\r\n        onChange();\r\n    }, [text, formatting]);\r\n\r\n    useEffect(() => {\r\n        const adjustHeight = () => {\r\n            if (textareaRef.current) {\r\n                textareaRef.current.style.height = 'auto';\r\n                textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n            }\r\n        };\r\n\r\n        adjustHeight();\r\n        window.addEventListener('resize', adjustHeight);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', adjustHeight);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (textareaRef.current) {\r\n            textareaRef.current.style.height = 'auto';\r\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n        }\r\n    }, [text]);\r\n\r\n    const updateFormatting = useCallback((changesObj) => {\r\n        const newFormatting = { ...formatting, ...changesObj };\r\n        setFormatting(newFormatting);\r\n    }, [formatting]);\r\n\r\n    const isFormatActive = useCallback((button) => {\r\n        if (button.format) {\r\n            return formatting[button.format];\r\n        }\r\n        return formatting.alignment === button.value;\r\n    }, [formatting]);\r\n\r\n    const handleInputChange = useCallback((key, value, min = 0, max = 100) => {\r\n        let numValue = parseInt(value, 10) || min;\r\n        numValue = Math.max(min, Math.min(max, numValue));\r\n        updateFormatting({ [key]: numValue });\r\n    }, [updateFormatting]);\r\n\r\n    const handleFontSizeChange = useCallback((e) => {\r\n        updateFormatting({ fontSize: Number(e.target.value) })\r\n    }, [updateFormatting]);\r\n\r\n    const handleFormatButtonClick = useCallback((button) => (e) => {\r\n        e.preventDefault();\r\n        if (button.format) {\r\n            updateFormatting({ [button.format]: !formatting[button.format] });\r\n        } else if (button.value) {\r\n            updateFormatting({ alignment: button.value });\r\n        }\r\n    }, [updateFormatting, formatting]);\r\n\r\n    const renderFormatButton = useCallback((button) => (\r\n        <button\r\n            type=\"button\"\r\n            key={button.format || button.value}\r\n            disabled={button.disabledBtn}\r\n            onClick={handleFormatButtonClick(button)}\r\n            className={`textblock__format-btn ${isFormatActive(button) ? 'textblock__format-btn--active' : ''}`}\r\n            title={`${button.title} ${button.disabledBtn ? `- недоступно` : ``}`}\r\n        >\r\n            {button.icon}\r\n        </button>\r\n    ), [handleFormatButtonClick, isFormatActive, formatting]);\r\n\r\n    const handleFontColorChange = useCallback((e) => {\r\n        updateFormatting({ color: e.target.value })\r\n    }, [updateFormatting]);\r\n\r\n    const handleMarginTopToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginTop: !formatting.useMarginTop,\r\n            marginTop: formatting.useMarginTop ? undefined : DEFAULT_FORMATTING.marginTop\r\n        });\r\n    }, [formatting.useMarginTop, updateFormatting]);\r\n\r\n    const handleMarginTopChange  = useCallback((e) => {\r\n        handleInputChange('marginTop', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleMarginBottomToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginBottom: !formatting.useMarginBottom,\r\n            marginBottom: formatting.useMarginBottom ? undefined : DEFAULT_FORMATTING.marginBottom\r\n        });\r\n    }, [formatting.useMarginBottom, updateFormatting]);\r\n\r\n    const handleMarginBottomChange = useCallback((e) => {\r\n        handleInputChange('marginBottom', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleTextChange = useCallback((e) => {\r\n        const newText = e.target.value;\r\n        setText(newText);\r\n        setError(false);\r\n    }, []);\r\n\r\n    const getTextareaStyle = () => {\r\n        return {\r\n            textAlign: formatting.alignment,\r\n            fontWeight: formatting.bold ? 'bold' : 'normal',\r\n            fontStyle: formatting.italic ? 'italic' : 'normal',\r\n            textDecoration: formatting.underline\r\n                ? (formatting.strikethrough ? 'underline line-through' : 'underline')\r\n                : (formatting.strikethrough ? 'line-through' : 'none'),\r\n            color: formatting.color,\r\n            fontSize: `${formatting.fontSize}px`,\r\n            marginTop: formatting.useMarginTop ? `${formatting.marginTop}px` : '0',\r\n            marginBottom: formatting.useMarginBottom ? `${formatting.marginBottom}px` : '0',\r\n        };\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        validate() {\r\n            if (!text.trim()) {\r\n                setError('Текст не может быть пустым');\r\n                textareaRef.current?.focus();\r\n                return false;\r\n            }\r\n            setError(null);\r\n            return true;\r\n        },\r\n        getContent: () => ({\r\n            content: text,\r\n            formatting: {...formatting}\r\n        })\r\n    }));\r\n\r\n    return (\r\n        <div className=\"textblock\">\r\n            {/* Блок форматирования */}\r\n            {showSettings && (\r\n                <div className=\"textblock__toolbar\">\r\n                    {/* Размер шрифта */}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        <div className=\"textblock__format-group\">\r\n                            <select\r\n                                value={formatting.fontSize}\r\n                                onChange={handleFontSizeChange}\r\n                                className=\"textblock__select\"\r\n                                title=\"Размер шрифта\"\r\n                            >\r\n                                {fontSizeOptions.map(option => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {/* Стиль шрифта */}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        {formatButtons.map(renderFormatButton)}\r\n                    </div>\r\n                    {/* Расположение текса */}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        {alignmentButtons.map(renderFormatButton)}\r\n                    </div>\r\n                    {/*Цвет текста*/}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        <div className=\"textblock__color-container\">\r\n                            <input\r\n                                type=\"color\"\r\n                                value={formatting.color}\r\n                                onChange={handleFontColorChange}\r\n                                className=\"textblock__color-input\"\r\n                                title=\"Цвет текста\"\r\n                            />\r\n                            <div\r\n                                className=\"textblock__color-preview\"\r\n                                style={{ backgroundColor: formatting.color }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/*Отступ сверху*/}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginTopToggle}\r\n                            className={`textblock__format-btn ${formatting.useMarginTop ? 'textblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginTop ? 'Убрать отступ сверху' : 'Добавить отступ сверху'}\r\n                        >\r\n                            <MdVerticalAlignTop />\r\n                        </button>\r\n\r\n                        {formatting.useMarginTop && (\r\n                            <div className=\"textblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginTop}\r\n                                    onChange={handleMarginTopChange}\r\n                                    className=\"textblock__number-input\"\r\n                                    title=\"Отступ сверху (1-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*Отступ снизу*/}\r\n                    <div className=\"textblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginBottomToggle}\r\n                            className={`textblock__format-btn ${formatting.useMarginBottom ? 'textblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginBottom ? 'Убрать отступ снизу' : 'Добавить отступ снизу'}\r\n                        >\r\n                            <MdVerticalAlignBottom />\r\n                        </button>\r\n\r\n                        {formatting.useMarginBottom && (\r\n                            <div className=\"textblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginBottom}\r\n                                    onChange={handleMarginBottomChange}\r\n                                    className=\"textblock__number-input\"\r\n                                    title=\"Отступ снизу (0-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/*Разделитель*/}\r\n            {showSettings && (<hr />)}\r\n            {/*Просмотр*/}\r\n            <div className=\"textblock__editor\">\r\n                <textarea\r\n                    ref={textareaRef}\r\n                    value={text}\r\n                    onChange={handleTextChange}\r\n                    className={`textblock__textarea ${error ? 'textblock__textarea--error' : ''}`}\r\n                    style={getTextareaStyle()}\r\n                    placeholder=\"Введите текст...\"\r\n                    rows=\"1\"\r\n                />\r\n                {error && <div className=\"textblock__error\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(TextBlock);","import React, { useImperativeHandle, forwardRef, useRef, useState, useEffect, useCallback, memo } from \"react\";\r\nimport {\r\n    FaAlignCenter,\r\n    FaAlignLeft,\r\n    FaAlignRight,\r\n    FaBold,\r\n    FaItalic,\r\n    FaUnderline,\r\n    FaStrikethrough, FaAlignJustify,\r\n} from \"react-icons/fa\";\r\nimport { MdVerticalAlignTop, MdVerticalAlignBottom } from \"react-icons/md\";\r\nimport './HeadingBlock.css';\r\nimport useDeepCompareEffect from \"../../../hooks/useDeepCompareEffect\";\r\n\r\nconst DEFAULT_FORMATTING = {\r\n    bold: true,\r\n    italic: false,\r\n    underline: false,\r\n    strikethrough: false,\r\n    color: '#000000',\r\n    alignment: 'left',\r\n    level: 2,\r\n    useMarginTop: false,\r\n    marginTop: 0,\r\n    useMarginBottom: false,\r\n    marginBottom: 0,\r\n}\r\n\r\nconst formatButtons = [\r\n    {\r\n        format: 'bold',\r\n        icon: <FaBold />,\r\n        title: 'Жирный',\r\n        disabledBtn: true,\r\n    },\r\n    {\r\n        format: 'italic',\r\n        icon: <FaItalic />,\r\n        title: 'Курсив',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        format: 'underline',\r\n        icon: <FaUnderline />,\r\n        title: 'Подчёркнутый',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        format: 'strikethrough',\r\n        icon: <FaStrikethrough />,\r\n        title: 'Зачёркнутый',\r\n        disabledBtn: false,\r\n    }\r\n];\r\n\r\nconst alignmentButtons = [\r\n    {\r\n        value: 'left',\r\n        icon: <FaAlignLeft />,\r\n        title: 'По левому краю',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'center',\r\n        icon: <FaAlignCenter />,\r\n        title: 'По центру',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'right',\r\n        icon: <FaAlignRight />,\r\n        title: 'По правому краю',\r\n        disabledBtn: false,\r\n    },\r\n    {\r\n        value: 'justify',\r\n        icon: <FaAlignJustify />,\r\n        title: 'Растянуть',\r\n        disabledBtn: false,\r\n    }\r\n];\r\n\r\nconst levelOptions = [\r\n    { value: 2, label: 'H2' },\r\n    { value: 3, label: 'H3' },\r\n    { value: 4, label: 'H4' },\r\n    { value: 5, label: 'H5' },\r\n    { value: 6, label: 'H6' }\r\n];\r\n\r\nconst fontSizeMap = {\r\n    2: '1.8em',\r\n    3: '1.5em',\r\n    4: '1.25em',\r\n    5: '1.1em',\r\n    6: '1em'\r\n};\r\n\r\nconst HeadingBlock = forwardRef(({ block, onChange, showSettings }, ref) => {\r\n    const textareaRef = useRef();\r\n    const [text, setText] = useState(block.content || '');\r\n    const [formatting, setFormatting] = useState({\r\n        ...DEFAULT_FORMATTING,\r\n        ...block.formatting\r\n    });\r\n    const [error, setError] = useState(null);\r\n\r\n    useDeepCompareEffect(() => {\r\n        onChange();\r\n    }, [text, formatting]);\r\n\r\n    useEffect(() => {\r\n        const adjustHeight = () => {\r\n            if (textareaRef.current) {\r\n                textareaRef.current.style.height = 'auto';\r\n                textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n            }\r\n        };\r\n\r\n        adjustHeight();\r\n        window.addEventListener('resize', adjustHeight);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', adjustHeight);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (textareaRef.current) {\r\n            textareaRef.current.style.height = 'auto';\r\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n        }\r\n    }, [text]);\r\n\r\n    const updateFormatting = useCallback((changesObj) => {\r\n        const newFormatting = { ...formatting, ...changesObj };\r\n        setFormatting(newFormatting);\r\n    }, [formatting]);\r\n\r\n    const isFormatActive = (button) => {\r\n        if (button.format) {\r\n            return formatting[button.format];\r\n        }\r\n        return formatting.alignment === button.value;\r\n    };\r\n\r\n    const handleInputChange = useCallback((key, value, min = 0, max = 100) => {\r\n        let numValue = parseInt(value, 10) || min;\r\n        numValue = Math.max(min, Math.min(max, numValue));\r\n        updateFormatting({ [key]: numValue });\r\n    }, [updateFormatting]);\r\n\r\n    const handleLevelChange = useCallback((e) => {\r\n        updateFormatting({ level: Number(e.target.value) })\r\n    }, [updateFormatting]);\r\n\r\n    const handleFormatButtonClick = useCallback((button) => (e) => {\r\n        e.preventDefault();\r\n        if (button.format) {\r\n            updateFormatting({ [button.format]: !formatting[button.format] });\r\n        } else if (button.value) {\r\n            updateFormatting({ alignment: button.value });\r\n        }\r\n    }, [updateFormatting, formatting]);\r\n\r\n    const renderFormatButton = (button) => (\r\n        <button\r\n            type=\"button\"\r\n            key={button.format || button.value}\r\n            disabled={button.disabledBtn}\r\n            onClick={handleFormatButtonClick(button)}\r\n            className={`headingblock__format-btn ${isFormatActive(button) ? 'headingblock__format-btn--active' : ''}`}\r\n            title={`${button.title} ${button.disabledBtn ? `- недоступно` : ``}`}\r\n        >\r\n            {button.icon}\r\n        </button>\r\n    );\r\n\r\n    const handleFontColorChange = useCallback((e) => {\r\n        updateFormatting({ color: e.target.value })\r\n    }, [updateFormatting]);\r\n\r\n    const handleMarginTopToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginTop: !formatting.useMarginTop,\r\n            marginTop: formatting.useMarginTop ? undefined : DEFAULT_FORMATTING.marginTop\r\n        });\r\n    }, [formatting.useMarginTop, updateFormatting]);\r\n\r\n    const handleMarginTopChange  = useCallback((e) => {\r\n        handleInputChange('marginTop', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleMarginBottomToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginBottom: !formatting.useMarginBottom,\r\n            marginBottom: formatting.useMarginBottom ? undefined : DEFAULT_FORMATTING.marginBottom\r\n        });\r\n    }, [formatting.useMarginBottom, updateFormatting]);\r\n\r\n    const handleMarginBottomChange = useCallback((e) => {\r\n        handleInputChange('marginBottom', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleTextChange = useCallback((e) => {\r\n        const newText = e.target.value;\r\n        setText(newText);\r\n        setError(false);\r\n    }, []);\r\n\r\n    const getTextareaStyle = () => {\r\n        return {\r\n            textAlign: formatting.alignment,\r\n            fontWeight: formatting.bold ? 'bold' : 'normal',\r\n            fontStyle: formatting.italic ? 'italic' : 'normal',\r\n            textDecoration: formatting.underline\r\n                ? (formatting.strikethrough ? 'underline line-through' : 'underline')\r\n                : (formatting.strikethrough ? 'line-through' : 'none'),\r\n            color: formatting.color,\r\n            fontSize: fontSizeMap[formatting.level] || '1.8em',\r\n            marginTop: formatting.useMarginTop ? `${formatting.marginTop}px` : '0',\r\n            marginBottom: formatting.useMarginBottom ? `${formatting.marginBottom}px` : '0',\r\n        };\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        validate() {\r\n            if (!text.trim()) {\r\n                setError('Заголовок не может быть пустым');\r\n                textareaRef.current?.focus();\r\n                return false;\r\n            }\r\n            setError(null);\r\n            return true;\r\n        },\r\n        getContent: () => ({\r\n            content: text,\r\n            formatting: {...formatting}\r\n        })\r\n    }));\r\n\r\n    return (\r\n        <div className=\"headingblock\">\r\n            {/*Блок настроек*/}\r\n            {showSettings && (\r\n                <div className=\"headingblock__toolbar\">\r\n                    {/*Уровень заголовка*/}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        <select\r\n                            value={formatting.level}\r\n                            onChange={handleLevelChange}\r\n                            className=\"headingblock__select\"\r\n                            title=\"Уровень заголовка\"\r\n                        >\r\n                            {levelOptions.map(option => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {/* Стиль шрифта */}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        {formatButtons.map(renderFormatButton)}\r\n                    </div>\r\n                    {/* Расположение текса */}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        {alignmentButtons.map(renderFormatButton)}\r\n                    </div>\r\n                    {/*Цвет текста*/}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        <div className=\"headingblock__color-container\">\r\n                            <input\r\n                                type=\"color\"\r\n                                value={formatting.color}\r\n                                onChange={handleFontColorChange}\r\n                                className=\"headingblock__color-input\"\r\n                                title=\"Цвет текста\"\r\n                            />\r\n                            <div\r\n                                className=\"headingblock__color-preview\"\r\n                                style={{ backgroundColor: formatting.color }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/*Отступ сверху*/}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginTopToggle}\r\n                            className={`headingblock__format-btn ${formatting.useMarginTop ? 'headingblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginTop ? 'Убрать отступ сверху' : 'Добавить отступ сверху'}\r\n                        >\r\n                            <MdVerticalAlignTop />\r\n                        </button>\r\n\r\n                        {formatting.useMarginTop && (\r\n                            <div className=\"headingblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginTop}\r\n                                    onChange={handleMarginTopChange}\r\n                                    className=\"headingblock__number-input\"\r\n                                    title=\"Отступ сверху (1-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*Отступ снизу*/}\r\n                    <div className=\"headingblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginBottomToggle}\r\n                            className={`headingblock__format-btn ${formatting.useMarginBottom ? 'headingblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginBottom ? 'Убрать отступ снизу' : 'Добавить отступ снизу'}\r\n                        >\r\n                            <MdVerticalAlignBottom />\r\n                        </button>\r\n\r\n                        {formatting.useMarginBottom && (\r\n                            <div className=\"headingblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginBottom}\r\n                                    onChange={handleMarginBottomChange}\r\n                                    className=\"headingblock__number-input\"\r\n                                    title=\"Отступ снизу (0-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/*Разделитель*/}\r\n            {showSettings && (<hr />)}\r\n            {/*Просмотр*/}\r\n            <div className=\"headingblock__editor\">\r\n                <textarea\r\n                    ref={textareaRef}\r\n                    value={text}\r\n                    onChange={handleTextChange}\r\n                    className={`headingblock__textarea ${error ? 'headingblock__textarea--error' : ''}`}\r\n                    style={getTextareaStyle()}\r\n                    placeholder=\"Введите заголовок...\"\r\n                    rows=\"1\"\r\n                />\r\n                {error && <div className=\"headingblock__error\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(HeadingBlock);","const STATIC_SERVER = import.meta.env.VITE_STATIC_SERVER || '';\r\n\r\nexport function getImageSrc(path) {\r\n    if (!path) return '';\r\n\r\n    const isAbsolute = /^(https?:)?\\/\\//i.test(path) || path.startsWith('blob:');\r\n\r\n    if (isAbsolute) {\r\n        return path;\r\n    } else {\r\n        // Относительный путь — добавляем STATIC_SERVER для Vite\r\n        return STATIC_SERVER.replace(/\\/+$/, '') + '/' + path.replace(/^\\/+/, '');\r\n    }\r\n}\r\n","import React, { useState, useImperativeHandle, forwardRef, useRef, useCallback, useMemo, memo } from \"react\";\r\nimport {\r\n    FaAlignLeft,\r\n    FaAlignCenter,\r\n    FaAlignRight,\r\n} from \"react-icons/fa\";\r\nimport { MdVerticalAlignTop, MdVerticalAlignBottom } from \"react-icons/md\";\r\nimport { RxBorderAll, RxBorderStyle } from \"react-icons/rx\";\r\nimport { MdOutlineSubtitles, MdOutlineSubtitlesOff } from \"react-icons/md\";\r\nimport { GiResize } from \"react-icons/gi\";\r\nimport { BsBorderWidth } from \"react-icons/bs\";\r\nimport { BiBorderRadius } from \"react-icons/bi\";\r\nimport './ImageBlock.css';\r\nimport useDeepCompareEffect from \"../../../hooks/useDeepCompareEffect\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addImage } from \"../../../redux/reducers/postsData/postsDataSlice\";\r\nimport { saveToIndexedDB } from \"../../../utils/db\";\r\nimport { getImageSrc } from \"../../../utils/imageSrc\";\r\n\r\nconst DEFAULT_FORMATTING = {\r\n    showAlt: false,\r\n    alignment: 'left',\r\n    useBorder: false,\r\n    borderWidth: 0,\r\n    borderStyle: 'solid',\r\n    borderColor: '#cccccc',\r\n    useBorderRadius: false,\r\n    borderRadius: 0,\r\n    useResize: false,\r\n    size: 100,\r\n    useMarginTop: false,\r\n    marginTop: 0,\r\n    useMarginBottom: false,\r\n    marginBottom: 0,\r\n};\r\n\r\nconst alignOptions = [\r\n    { value: 'left', icon: <FaAlignLeft />, title: 'Прижать к левому краю' },\r\n    { value: 'center', icon: <FaAlignCenter />, title: 'Выровнять по центру' },\r\n    { value: 'right', icon: <FaAlignRight />, title: 'Прижать к правому краю' }\r\n];\r\n\r\nconst borderStyleOptions = [\r\n    { value: 'solid', label: 'Сплошная' },\r\n    { value: 'dashed', label: 'Пунктир' },\r\n    { value: 'dotted', label: 'Точки' },\r\n    { value: 'double', label: 'Двойная' }\r\n];\r\n\r\nconst supportedFormats = ['image/jpeg', 'image/png', 'image/webp'];\r\nconst acceptString = supportedFormats.join(',');\r\n\r\nconst ImageBlock = forwardRef(({ block, onChange, showSettings }, ref) => {\r\n    const dispatch = useDispatch();\r\n    const altRef = useRef();\r\n    const fileNameRef = useRef();\r\n    const fileInputRef = useRef();\r\n\r\n    const getInitialDataFile = useCallback(() => ({\r\n        content: block.content || '',\r\n        data: {\r\n            alt: block.data?.alt || '',\r\n            fileName: block.data?.fileName || null,\r\n            fileType: block.data?.fileType || null,\r\n            fileSize: block.data?.fileSize || null,\r\n            fileKey: block.data?.fileKey || null,\r\n            size: block.data?.size || null,\r\n            naturalHeight: block.data?.naturalHeight || null,\r\n            naturalWidth: block.data?.naturalWidth || null,\r\n        },\r\n    }), [block]);\r\n\r\n    const getInitialFormatting = useCallback(() => ({\r\n        ...DEFAULT_FORMATTING,\r\n        ...block.formatting,\r\n    }), [block.formatting]);\r\n\r\n    const [dataFile, setDataFile] = useState(getInitialDataFile);\r\n    const [formatting, setFormatting] = useState(getInitialFormatting);\r\n    const [errors, setErrors] = useState({ content: false, alt: false, fileName: false });\r\n\r\n    useDeepCompareEffect(() => {\r\n        onChange();\r\n    }, [dataFile, formatting]);\r\n\r\n    const updateFormatting = useCallback((changesObj) => {\r\n        const newFormatting = { ...formatting, ...changesObj };\r\n        setFormatting(newFormatting);\r\n    }, [formatting]);\r\n\r\n    const handleInputChange = useCallback((key, value, min = 0, max = 100) => {\r\n        let numValue = parseInt(value, 10) || min;\r\n        numValue = Math.max(min, Math.min(max, numValue));\r\n        updateFormatting({ [key]: numValue });\r\n    }, [updateFormatting]);\r\n\r\n    const handleImageLoad = useCallback((e) => {\r\n        const { naturalWidth, naturalHeight } = e.target;\r\n        setDataFile(prevDataFile => ({\r\n            ...prevDataFile,\r\n            data: {\r\n                ...prevDataFile.data,\r\n                naturalWidth,\r\n                naturalHeight,\r\n            },\r\n        }));\r\n    }, []);\r\n\r\n    const handleFileClick = useCallback(() => {\r\n\r\n        fileInputRef.current.click();\r\n    }, []);\r\n\r\n    const handleFileChange = useCallback(async (e) => {\r\n        setErrors(prevState => ({ ...prevState, content: false }));\r\n        const file = e.target.files[0];\r\n\r\n        const fileKey = `image-${Date.now()}-${file.name}`;\r\n\r\n        await saveToIndexedDB(fileKey, file);\r\n\r\n        dispatch(addImage({\r\n            blockId: block.id, // gdfgdfgdf54-51f5d1g5d15fgd-51fg5d1f5g1d5g\r\n            key: fileKey, // image-175115484-origNameSKompa\r\n            file, // файл бин\r\n            fileName: file.name // origNameSKompa.png\r\n        }));\r\n\r\n        setDataFile(prev => ({\r\n            ...prev,\r\n            content: URL.createObjectURL(file),\r\n            data: {\r\n                ...prev.data,\r\n                fileKey: fileKey, // image-175115484-origNameSKompa\r\n                fileName: file.name.split('.')[0], // origNameSKompa\r\n                fileType: file.type, // image/png\r\n                fileSize: Math.round(file.size / 1024) + 'KB', // 11KB\r\n                size: file.size, // 12345 байт\r\n            }\r\n        }));\r\n    }, [dispatch, block.id]);\r\n\r\n    const handleAltToggle = useCallback(() => {\r\n        updateFormatting({ showAlt: !formatting.showAlt });\r\n    }, [formatting.showAlt, updateFormatting]);\r\n\r\n    const handleAltChange = useCallback((e) => {\r\n        const altValue = e.target.value;\r\n        setErrors(prev => ({...prev, alt: false}));\r\n        setDataFile(prevDataFile => ({\r\n            ...prevDataFile,\r\n            data: {\r\n                ...prevDataFile.data,\r\n                alt: altValue,\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const handleFileNameChange = useCallback((e) => {\r\n        setErrors(prev => ({...prev, fileName: false}));\r\n        setDataFile(prevDataFile => ({\r\n            ...prevDataFile,\r\n            data: {\r\n                ...prevDataFile.data,\r\n                fileName: e.target.value,\r\n            },\r\n        }));\r\n    }, []);\r\n\r\n    const handleAlignToggle = useCallback((value) => () => {\r\n        updateFormatting({ alignment: value })\r\n    }, [updateFormatting]);\r\n\r\n    const handleBorderToggle = useCallback(() => {\r\n        if (formatting.useBorder) {\r\n            updateFormatting({ useBorder: false });\r\n        } else {\r\n            updateFormatting({\r\n                useBorder: true,\r\n                borderWidth: DEFAULT_FORMATTING.borderWidth,\r\n                borderStyle: DEFAULT_FORMATTING.borderStyle,\r\n                borderColor: DEFAULT_FORMATTING.borderColor\r\n            });\r\n        }\r\n    }, [formatting.useBorder, updateFormatting]);\r\n\r\n    const handleBorderStyleChange = useCallback((e) => {\r\n        updateFormatting({ borderStyle: e.target.value });\r\n    }, [updateFormatting]);\r\n\r\n    const handleBorderWidthChange = useCallback((e) => {\r\n        handleInputChange('borderWidth', e.target.value, 1, 10);\r\n    }, [handleInputChange]);\r\n\r\n    const handleBorderColorChange = useCallback((e) => {\r\n        updateFormatting({ borderColor: e.target.value });\r\n    }, [updateFormatting]);\r\n\r\n    const handleBorderRadiusToggle = useCallback(() => {\r\n        if (formatting.useBorderRadius) {\r\n            updateFormatting({ useBorderRadius: false });\r\n        } else {\r\n            updateFormatting({\r\n                useBorderRadius: true,\r\n                borderRadius: DEFAULT_FORMATTING.borderRadius\r\n            });\r\n        }\r\n    }, [formatting.useBorderRadius, updateFormatting]);\r\n\r\n    const handleBorderRadiusChange = useCallback((e) => {\r\n        handleInputChange('borderRadius', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleSizeToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useResize: !formatting.useResize,\r\n            size: formatting.useResize ? undefined : DEFAULT_FORMATTING.size\r\n        });\r\n    }, [formatting.useResize, updateFormatting]);\r\n\r\n    const handleSizeChange = useCallback((e) => {\r\n        handleInputChange('size', e.target.value, 10, 100);\r\n    }, [handleInputChange]);\r\n\r\n    const handleMarginTopToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginTop: !formatting.useMarginTop,\r\n            marginTop: formatting.useMarginTop ? undefined : DEFAULT_FORMATTING.marginTop\r\n        });\r\n    }, [formatting.useMarginTop, updateFormatting]);\r\n\r\n    const handleMarginTopChange  = useCallback((e) => {\r\n        handleInputChange('marginTop', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const handleMarginBottomToggle = useCallback(() => {\r\n        updateFormatting({\r\n            useMarginBottom: !formatting.useMarginBottom,\r\n            marginBottom: formatting.useMarginBottom ? undefined : DEFAULT_FORMATTING.marginBottom\r\n        });\r\n    }, [formatting.useMarginBottom, updateFormatting]);\r\n\r\n    const handleMarginBottomChange = useCallback((e) => {\r\n        handleInputChange('marginBottom', e.target.value, 1, 50);\r\n    }, [handleInputChange]);\r\n\r\n    const previewStyle = useMemo(() => ({\r\n        marginTop: formatting.useMarginTop\r\n            ? `${formatting.marginTop ?? DEFAULT_FORMATTING.marginTop}px`\r\n            : undefined,\r\n        marginBottom: formatting.useMarginBottom\r\n            ? `${formatting.marginBottom ?? DEFAULT_FORMATTING.marginBottom}px`\r\n            : undefined,\r\n        alignItems: formatting.alignment === 'left'\r\n            ? 'flex-start'\r\n            : formatting.alignment === 'right'\r\n                ? 'flex-end'\r\n                : 'center',\r\n        maxWidth: formatting.useResize\r\n            ? `${formatting.size ?? DEFAULT_FORMATTING.size}%`\r\n            : `${DEFAULT_FORMATTING.size}%`,\r\n        borderStyle: () => {\r\n            if (!formatting.useBorder) return 'none';\r\n            return `${formatting.borderWidth ?? DEFAULT_FORMATTING.borderWidth}px ${formatting.borderStyle ?? DEFAULT_FORMATTING.borderStyle} ${formatting.borderColor ?? DEFAULT_FORMATTING.borderColor}`;\r\n        },\r\n        borderRadius: formatting.useBorderRadius\r\n            ? `${formatting.borderRadius ?? DEFAULT_FORMATTING.borderRadius}px`\r\n            : '0'\r\n    }), [formatting]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        validate() {\r\n            const newErrors = {\r\n                alt: !dataFile.data.alt || !dataFile.data.alt.trim(),\r\n                fileName: !dataFile.data?.fileName || !/^[a-zA-Z0-9_-]+$/.test(dataFile.data.fileName.trim()),\r\n                content: !dataFile.content\r\n            };\r\n            setErrors(newErrors);\r\n\r\n            if (newErrors.alt) {\r\n                altRef.current?.focus();\r\n                return false;\r\n            }\r\n            if (newErrors.fileName) {\r\n                fileNameRef.current?.focus();\r\n                return false;\r\n            }\r\n            if (newErrors.content) {\r\n                fileInputRef.current?.focus();\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n        getContent: () => ({\r\n            ...dataFile,\r\n            formatting: {...formatting}\r\n        })\r\n    }));\r\n\r\n    return (\r\n        <div className=\"imageblock\">\r\n            {/*Блок контента*/}\r\n            <div className=\"imageblock__fields\">\r\n                {/*Кнопка загрузки*/}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"imageblock__upload-btn\"\r\n                    onClick={handleFileClick}\r\n                    title=\"Загрузка изображения\"\r\n                >\r\n                    {dataFile.content ? 'Заменить изображение' : 'Загрузить изображение'}\r\n                </button>\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    accept={acceptString}\r\n                    onChange={handleFileChange}\r\n                    className=\"imageblock__file-input\"\r\n                />\r\n                {errors.content && (\r\n                    <div className=\"imageblock__error\">\r\n                        Поддерживаются только JPG, PNG, WebP изображения и файлы не более 5МВ.\r\n                    </div>\r\n                )}\r\n                {/*Alt и имя файла*/}\r\n                {dataFile.content && (\r\n                    <>\r\n                        <div className=\"imageblock__field\">\r\n                            <label className=\"imageblock__label\">Описание изображения (alt)*</label>\r\n                            <input\r\n                                ref={altRef}\r\n                                type=\"text\"\r\n                                value={dataFile.data.alt ?? ''}\r\n                                onChange={handleAltChange}\r\n                                placeholder=\"Введите описание изображения\"\r\n                                className={`imageblock__input ${errors.alt ? 'imageblock__input--error' : ''}`}\r\n                            />\r\n                            {errors.alt &&\r\n                                <div className=\"imageblock__error\">\r\n                                    Обязательное поле.\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"imageblock__field\">\r\n                            <label className=\"imageblock__label\">Имя файла (без расширения)*</label>\r\n                            <input\r\n                                ref={fileNameRef}\r\n                                type=\"text\"\r\n                                value={dataFile.data.fileName ?? ''}\r\n                                onChange={handleFileNameChange}\r\n                                placeholder=\"Введите имя файла\"\r\n                                className={`imageblock__input ${errors.fileName ? 'imageblock__input--error' : ''}`}\r\n                            />\r\n                            {errors.fileName && (\r\n                                <div className=\"imageblock__error\">\r\n                                    Допустимы только латинские буквы, цифры, дефисы и подчёркивания.\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n            {/*Блок форматирования*/}\r\n            {showSettings && (\r\n                <div className=\"imageblock__toolbar\">\r\n                    {/*Отображение описания*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleAltToggle}\r\n                            className={`imageblock__format-btn ${formatting.showAlt ? 'imageblock__format-btn--active' : ''}`}\r\n                            title={formatting.showAlt ? \"Скрыть описание\" : \"Отображать описание\"}\r\n                        >\r\n                            {formatting.showAlt ? <MdOutlineSubtitles /> : <MdOutlineSubtitlesOff />}\r\n                        </button>\r\n                    </div>\r\n                    {/*Кнопки выравнивания*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <div className=\"imageblock__alignment-btns\">\r\n                            {alignOptions.map(option => (\r\n                                <button\r\n                                    type=\"button\"\r\n                                    key={option.value}\r\n                                    onClick={handleAlignToggle(option.value)}\r\n                                    className={`imageblock__format-btn ${formatting.alignment === option.value ? 'imageblock__format-btn--active' : ''}`}\r\n                                    title={option.title}\r\n                                >\r\n                                    {option.icon}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {/*Рамка*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleBorderToggle}\r\n                            className={`imageblock__format-btn ${formatting.useBorder ? 'imageblock__format-btn--active' : ''}`}\r\n                            title={formatting.useBorder ? \"Добавить рамку\" : \"Убрать рамку\"}\r\n                        >\r\n                            <RxBorderAll />\r\n                        </button>\r\n                        {/*Настройки рамки*/}\r\n                        {formatting.useBorder && (\r\n                            <>\r\n                                {/*Стиль линии*/}\r\n                                <div className=\"imageblock__border-style-container\">\r\n                                    <RxBorderStyle className=\"imageblock__icon\" />\r\n                                    <select\r\n                                        value={formatting.borderStyle}\r\n                                        onChange={handleBorderStyleChange}\r\n                                        className=\"imageblock__select\"\r\n                                        title=\"Стиль линии рамки\"\r\n                                    >\r\n                                        {borderStyleOptions.map(option => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                {/*Толщина линии*/}\r\n                                <div className=\"imageblock__input-group\">\r\n                                    <BsBorderWidth className=\"imageblock__icon\" />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        max=\"10\"\r\n                                        value={formatting.borderWidth}\r\n                                        onChange={handleBorderWidthChange}\r\n                                        className=\"imageblock__number-input\"\r\n                                        title=\"Толщина рамки (1-10px)\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"imageblock__color-container\">\r\n                                    <input\r\n                                        type=\"color\"\r\n                                        value={formatting.borderColor}\r\n                                        onChange={handleBorderColorChange}\r\n                                        className=\"imageblock__color-input\"\r\n                                        title=\"Цвет рамки\"\r\n                                    />\r\n                                    <div\r\n                                        className=\"imageblock__color-preview\"\r\n                                        style={{ backgroundColor: formatting.borderColor }}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    {/*Скругление*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleBorderRadiusToggle}\r\n                            className={`imageblock__format-btn ${formatting.useBorderRadius ? 'imageblock__format-btn--active' : ''}`}\r\n                            title={formatting.useBorderRadius ? 'Убрать скругление углов' : 'Добавить скругление углов'}\r\n                        >\r\n                            <BiBorderRadius />\r\n                        </button>\r\n\r\n                        {formatting.useBorderRadius && (\r\n                            <div className=\"imageblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.borderRadius}\r\n                                    onChange={handleBorderRadiusChange}\r\n                                    className=\"imageblock__number-input\"\r\n                                    title=\"Скругление углов (1-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*Размер изображения*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleSizeToggle}\r\n                            className={`imageblock__format-btn ${formatting.useResize ? 'imageblock__format-btn--active' : ''}`}\r\n                            title=\"Изменить размер изображения\"\r\n                        >\r\n                            <GiResize />\r\n                        </button>\r\n\r\n                        {formatting.useResize && (\r\n                            <div className=\"imageblock__input-group\">\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"10\"\r\n                                    max=\"100\"\r\n                                    value={formatting.size}\r\n                                    onChange={handleSizeChange}\r\n                                    className=\"imageblock__range\"\r\n                                    title=\"Размер изображения (10-100%)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*Отступ сверху*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginTopToggle}\r\n                            className={`imageblock__format-btn ${formatting.useMarginTop ? 'imageblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginTop ? 'Убрать отступ сверху' : 'Добавить отступ сверху'}\r\n                        >\r\n                            <MdVerticalAlignTop />\r\n                        </button>\r\n\r\n                        {formatting.useMarginTop && (\r\n                            <div className=\"imageblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginTop}\r\n                                    onChange={handleMarginTopChange}\r\n                                    className=\"imageblock__number-input\"\r\n                                    title=\"Отступ сверху (0-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*Отступ снизу*/}\r\n                    <div className=\"imageblock__toolbar-section\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleMarginBottomToggle}\r\n                            className={`imageblock__format-btn ${formatting.useMarginBottom ? 'imageblock__format-btn--active' : ''}`}\r\n                            title={formatting.useMarginBottom ? 'Убрать отступ снизу' : 'Добавить отступ снизу'}\r\n                        >\r\n                            <MdVerticalAlignBottom />\r\n                        </button>\r\n\r\n                        {formatting.useMarginBottom && (\r\n                            <div className=\"imageblock__input-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"50\"\r\n                                    value={formatting.marginBottom}\r\n                                    onChange={handleMarginBottomChange}\r\n                                    className=\"imageblock__number-input\"\r\n                                    title=\"Отступ снизу (0-50px)\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/*Разделитель*/}\r\n            {dataFile.content && <hr />}\r\n            {/*Просмотр*/}\r\n            {dataFile.content && (\r\n                <div className=\"imageblock__preview\" style={{\r\n                    paddingTop: previewStyle.marginTop,\r\n                    paddingBottom: previewStyle.marginBottom,\r\n                }}>\r\n                    <div className=\"imageblock__preview-container\" style={{\r\n                        alignItems: previewStyle.alignItems\r\n                    }}>\r\n                        <div className=\"imageblock__img-box\" style={{\r\n                            maxWidth: previewStyle.maxWidth\r\n                        }}>\r\n                            <img\r\n                                src={getImageSrc(dataFile.content)}\r\n                                alt={dataFile.data.alt}\r\n                                onLoad={handleImageLoad}\r\n                                className=\"imageblock__image\"\r\n                                style={{\r\n                                    borderRadius: previewStyle.borderRadius,\r\n                                    border: previewStyle.borderStyle()\r\n                                }}\r\n                            />\r\n                            {formatting.showAlt && dataFile.data.alt && (\r\n                                <div className=\"imageblock__alt-text\">\r\n                                    {dataFile.data.alt}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(ImageBlock);","import React, { memo, useEffect, useRef, useState } from \"react\";\r\nimport TextBlock from \"./Blocks/TextBlock\";\r\nimport HeadingBlock from \"./Blocks/HeadingBlock\";\r\nimport ImageBlock from \"./Blocks/ImageBlock\";\r\nimport { IoSettings } from \"react-icons/io5\";\r\nimport { FaGripLines } from \"react-icons/fa\";\r\nimport { RiDeleteBin7Fill } from \"react-icons/ri\";\r\nimport \"./BlockComponent.css\";\r\n\r\nconst BlockComponent = ({\r\n    block,\r\n    index,\r\n    onDragStart,\r\n    deleteBlock,\r\n    blockRefs,\r\n    onDragEnd,\r\n    onChange\r\n}) => {\r\n    let Comp;\r\n    if (block.type === 'text') Comp = TextBlock;\r\n    else if (block.type === 'heading') Comp = HeadingBlock;\r\n    else if (block.type === 'image') Comp = ImageBlock;\r\n    else return null;\r\n\r\n    const [isLocalDragging, setIsLocalDragging] = useState(false);\r\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const dragHandleRef = useRef(null);\r\n\r\n    const handleDragStart = (e) => {\r\n        setIsLocalDragging(true);\r\n        onDragStart(index);\r\n    };\r\n\r\n    const handleDragEnd = (e) => {\r\n        setIsLocalDragging(false);\r\n        onDragEnd();\r\n    };\r\n\r\n    const handleDeleteConfirm = () => {\r\n        deleteBlock(block.id);\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dragHandleRef.current) {\r\n            dragHandleRef.current.classList.toggle('blockcomp--dragging', isLocalDragging);\r\n        }\r\n    }, [isLocalDragging]);\r\n\r\n    return (\r\n        <div\r\n            ref={dragHandleRef}\r\n            className=\"blockcomp\"\r\n        >\r\n            <div className=\"blockcomp__container\">\r\n                <div className=\"blockcomp__controls\">\r\n                    <div\r\n                        draggable\r\n                        onDragStart={handleDragStart}\r\n                        onDragEnd={handleDragEnd}\r\n                        onDragOver={(e) => e.preventDefault()}\r\n                        className=\"blockcomp__drag-handle\"\r\n                        title=\"Переместить блок\"\r\n                    >\r\n                        <FaGripLines />\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsSettingsOpen(!isSettingsOpen)}\r\n                        className={`blockcomp__settings-btn ${isSettingsOpen ? 'blockcomp__settings-btn--active' : ''}`}\r\n                        title={isSettingsOpen ? \"Скрыть настройки\" : \"Показать настройки\"}\r\n                    >\r\n                        <IoSettings />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setShowDeleteModal(true)}\r\n                        className=\"blockcomp__delete-btn\"\r\n                        title=\"Удалить блок\"\r\n                    >\r\n                        <RiDeleteBin7Fill />\r\n                    </button>\r\n                </div>\r\n\r\n                <div id={`blockEditor-${block.id}`} className=\"blockcomp__content\">\r\n                    <Comp\r\n                        ref={(el) => (blockRefs.current[block.id] = el)}\r\n                        block={block}\r\n                        showSettings={isSettingsOpen}\r\n                        onChange={onChange}\r\n                    />\r\n                    {showDeleteModal && (\r\n                        <div className=\"blockcomp__modal-overlay\">\r\n                            <div className=\"blockcomp__modal\">\r\n                                <h4 className=\"blockcomp__modal-title\">Подтверждение удаления</h4>\r\n                                <p className=\"blockcomp__modal-text\">Вы уверены, что хотите удалить этот блок?</p>\r\n\r\n                                <div className=\"blockcomp__modal-buttons\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => setShowDeleteModal(false)}\r\n                                        className=\"blockcomp__modal-btn blockcomp__modal-btn--cancel\"\r\n                                    >\r\n                                        Отмена\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={handleDeleteConfirm}\r\n                                        className=\"blockcomp__modal-btn blockcomp__modal-btn--confirm\"\r\n                                    >\r\n                                        Удалить\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(BlockComponent);","export function generateUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}","import React, { forwardRef, memo, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport AddMenu from \"./AddMenu\";\r\nimport BlockComponent from \"./BlockComponent\";\r\nimport { generateUUID } from \"../../utils/generateUuid\";\r\nimport './ListBlock.css';\r\nimport useDeepCompareEffect from \"../../hooks/useDeepCompareEffect\";\r\n\r\nconst ListBlock = forwardRef(({ initialBlocks, onChange }, ref) => {\r\n    const blockRefs = useRef({});\r\n    const isFirstRender = useRef(true);\r\n\r\n    const [blocks, setBlocks] = useState(initialBlocks || []);\r\n    const [draggedIndex, setDraggedIndex] = useState(null);\r\n    const [dropTarget, setDropTarget] = useState({ index: null, position: null });\r\n    const [isEmptyError, setIsEmptyError] = useState(false);\r\n\r\n    useDeepCompareEffect(() => {\r\n        onChange();\r\n    }, [blocks]);\r\n\r\n    // Синхронизация с входящими пропсами initialBlocks\r\n    useEffect(() => {\r\n        if (initialBlocks && JSON.stringify(initialBlocks) !== JSON.stringify(blocks)) {\r\n            setBlocks(initialBlocks);\r\n        }\r\n    }, [initialBlocks]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        validateAllBlocks() {\r\n            if (blocks.length === 0) {\r\n                setIsEmptyError(true);\r\n                return false;\r\n            }\r\n\r\n            setIsEmptyError(false);\r\n            return Object.entries(blockRefs.current).every(([_, blockRef]) => {\r\n                return blockRef?.validate?.() !== false;\r\n            });\r\n        },\r\n        getAllBlocks() {\r\n            const updatedBlocks = blocks.map(block => {\r\n                const blockRef = blockRefs.current[block.id];\r\n                if (blockRef && blockRef.getContent) {\r\n                    return {\r\n                        ...block,\r\n                        ...blockRef.getContent()\r\n                    };\r\n                }\r\n                return block;\r\n            });\r\n\r\n            setBlocks(updatedBlocks);\r\n            return updatedBlocks;\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n            return;\r\n        }\r\n\r\n        if (blocks.length === 0) {\r\n            setIsEmptyError(true);\r\n        } else {\r\n            setIsEmptyError(false);\r\n        }\r\n    }, [blocks]);\r\n\r\n    const handleAddBlock = (index, type) => {\r\n        const newBlock = {\r\n            id: generateUUID(),\r\n            type,\r\n            content: '',\r\n        };\r\n        const newBlocks = [...blocks];\r\n        newBlocks.splice(index, 0, newBlock);\r\n        setBlocks(newBlocks);\r\n        setIsEmptyError(false);\r\n    };\r\n\r\n    const handleDeleteBlock = (id) => {\r\n        setBlocks(prev => prev.filter(b => b.id !== id));\r\n    };\r\n\r\n    const handleDragStart = (index) => {\r\n        setDraggedIndex(index);\r\n        setDropTarget({ index: null, position: null });\r\n    };\r\n\r\n    const handleDrop = () => {\r\n        if (draggedIndex === null || dropTarget.index === null) return;\r\n\r\n        let adjustedDropIndex = dropTarget.position === 'top'\r\n            ? dropTarget.index\r\n            : dropTarget.index + 1;\r\n\r\n        if (adjustedDropIndex === draggedIndex ||\r\n            adjustedDropIndex === draggedIndex + 1) {\r\n            return;\r\n        }\r\n\r\n        const updated = [...blocks];\r\n        const [moved] = updated.splice(draggedIndex, 1);\r\n        updated.splice(adjustedDropIndex, 0, moved);\r\n        setBlocks(updated);\r\n        setDraggedIndex(null);\r\n        setDropTarget({ index: null, position: null });\r\n    };\r\n\r\n    const handleDragOver = (e, index) => {\r\n        e.preventDefault();\r\n        if (draggedIndex === null || index === draggedIndex) return;\r\n\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const y = e.clientY - rect.top;\r\n        const position = y < rect.height / 2 ? 'top' : 'bottom';\r\n\r\n        setDropTarget({ index, position });\r\n    };\r\n\r\n    const handleDragLeave = () => {\r\n        setDropTarget({ index: null, position: null });\r\n    };\r\n\r\n    const handleDragEnd = () => {\r\n        if (draggedIndex !== null && dropTarget.index !== null) {\r\n            const dropIndex = dropTarget.position === 'top'\r\n                ? dropTarget.index\r\n                : dropTarget.index + 1;\r\n            handleDrop(dropIndex);\r\n        }\r\n        setDraggedIndex(null);\r\n        setDropTarget({ index: null, position: null });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onDragEnd={handleDragEnd}\r\n            className=\"listblock__container\"\r\n        >\r\n            <div className=\"listblock__add-menu-wrapper\">\r\n                <AddMenu index={0} onAdd={handleAddBlock} />\r\n            </div>\r\n\r\n            {isEmptyError && (\r\n                <div className=\"listblock__error\">\r\n                    Нельзя сохранить пустое содержимое статьи. Добавьте хотя бы один блок.\r\n                </div>\r\n            )}\r\n\r\n            {blocks.map((block, index) => (\r\n                <React.Fragment key={block.id}>\r\n                    <div\r\n                        className=\"listblock__block-wrapper\"\r\n                        onDragOver={(e) => handleDragOver(e, index)}\r\n                        onDragLeave={handleDragLeave}\r\n                    >\r\n                        {dropTarget.index === index && dropTarget.position === 'top' && (\r\n                            <div className=\"listblock__drop-indicator listblock__drop-indicator--top\" />\r\n                        )}\r\n\r\n                        {dropTarget.index === index && (\r\n                            <div className=\"listblock__drop-zone\" />\r\n                        )}\r\n                            <BlockComponent\r\n                                block={block}\r\n                                index={index}\r\n                                onDragStart={handleDragStart}\r\n                                deleteBlock={handleDeleteBlock}\r\n                                blockRefs={blockRefs}\r\n                                onDragEnd={handleDragEnd}\r\n                                onChange={onChange}\r\n                            />\r\n                        {dropTarget.index === index && dropTarget.position === 'bottom' && (\r\n                            <div className=\"listblock__drop-indicator listblock__drop-indicator--bottom\" />\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"listblock__add-menu-wrapper\">\r\n                        <AddMenu index={index + 1} onAdd={handleAddBlock} />\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(ListBlock);","import { forwardRef, memo, useImperativeHandle, useRef } from \"react\";\r\nimport MetaBlock from \"./Blocks/MetaBlock\";\r\nimport ListBlock from \"./ListBlock\";\r\nimport \"./PostEditor.css\";\r\n\r\nconst PostEditor = forwardRef(({ initState, onChange }, ref) => {\r\n\r\n    const metaRef = useRef();\r\n    const blockRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getContent() {\r\n            const validMeta = metaRef.current?.validateMeta?.();\r\n            const validBlocks = blockRef.current?.validateAllBlocks?.();\r\n            if (!validMeta || !validBlocks) return false;\r\n\r\n            const metaData = metaRef.current?.getMeta?.() || {};\r\n            const blocksData = blockRef.current?.getAllBlocks?.() || [];\r\n\r\n            return {\r\n                ...initState,\r\n                meta: metaData,\r\n                content: blocksData\r\n            };\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <div className=\"posteditor-container\">\r\n            <MetaBlock\r\n                initialMeta={initState?.meta || {}}\r\n                onChange={onChange}\r\n                ref={metaRef}\r\n            />\r\n\r\n            <ListBlock\r\n                ref={blockRef}\r\n                onChange={onChange}\r\n                initialBlocks={initState?.content || []}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default memo(PostEditor);","import React, { memo } from \"react\";\r\nimport \"./PostView.css\";\r\nimport { getImageSrc } from \"../../utils/imageSrc\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst fontSizeMap = {\r\n    2: '2rem',\r\n    3: '1.75rem',\r\n    4: '1.5rem',\r\n    5: '1.25rem',\r\n    6: '1rem'\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"ru-RU\", {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n    });\r\n};\r\n\r\nconst PostView = ({ meta = {}, content = [] }) => {\r\n\r\n    return (\r\n        <div className=\"post-view\">\r\n            {/* Мета-информация */}\r\n            <Helmet>\r\n                <meta name=\"description\" content={meta.description || \"\"} />\r\n                <meta name=\"keywords\" content={meta.keywords || \"\"} />\r\n            </Helmet>\r\n\r\n            {/* Информация */}\r\n            <div className=\"post-meta\">\r\n                <h1 className=\"post-title\">{meta.title}</h1>\r\n\r\n                <div className=\"post-author-date\">\r\n                    <span className=\"post-author\">{meta.author}</span>\r\n                    <span className=\"post-date\">{formatDate(meta.date)}</span>\r\n                </div>\r\n\r\n                {meta.description && (\r\n                    <p className=\"post-description\">{meta.description}</p>\r\n                )}\r\n\r\n                {meta.keywords && (\r\n                    <div className=\"post-keywords\">\r\n                        {meta.keywords.split(',').map((keyword, index) => (\r\n                            <span key={index} className=\"keyword-tag\">\r\n                                {keyword.trim()}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Контент поста */}\r\n            <div className=\"post-content\">\r\n                {content?.map(block => {\r\n                    // Текстовый блок\r\n                    if (block.type === 'text') {\r\n                        const style = {\r\n                            fontWeight: block.formatting?.bold ? 'bold' : 'normal',\r\n                            fontStyle: block.formatting?.italic ? 'italic' : 'normal',\r\n                            textDecoration: block.formatting?.underline\r\n                                ? (block.formatting?.strikethrough ? 'underline line-through' : 'underline')\r\n                                : (block.formatting?.strikethrough ? 'line-through' : 'none'),\r\n                            color: block.formatting?.color || '#000000',\r\n                            textAlign: block.formatting?.alignment || 'left',\r\n                            fontSize: `${block.formatting?.fontSize || 16}px`,\r\n                            marginTop: block.formatting?.useMarginTop ? `${block.formatting?.marginTop || 0}px` : 0,\r\n                            marginBottom: block.formatting?.useMarginBottom ? `${block.formatting?.marginBottom || 0}px` : 0,\r\n                            lineHeight: '1.6',\r\n                            whiteSpace: 'pre-wrap',\r\n                            wordBreak: 'break-word'\r\n                        };\r\n\r\n                        return (\r\n                            <p key={block.id} style={style} className=\"text-block\">\r\n                                {block.content}\r\n                            </p>\r\n                        );\r\n                    }\r\n\r\n                    // Заголовок\r\n                    if (block.type === 'heading') {\r\n                        const HeadingTag = `h${block.formatting?.level || 2}`;\r\n                        const style = {\r\n                            textAlign: block.formatting?.alignment || 'left',\r\n                            color: block.formatting?.color || '#000000',\r\n                            fontWeight: block.formatting?.bold ? 'bold' : 'normal',\r\n                            fontStyle: block.formatting?.italic ? 'italic' : 'normal',\r\n                            textDecoration: block.formatting?.underline\r\n                                ? (block.formatting?.strikethrough ? 'underline line-through' : 'underline')\r\n                                : (block.formatting?.strikethrough ? 'line-through' : 'none'),\r\n                            marginTop: block.formatting?.useMarginTop ? `${block.formatting?.marginTop || 0}px` : 0,\r\n                            marginBottom: block.formatting?.useMarginBottom ? `${block.formatting?.marginBottom || 15}px` : 0,\r\n                            lineHeight: '1.3'\r\n                        };\r\n\r\n                        style.fontSize = fontSizeMap[block.formatting?.level || 2] || '2rem';\r\n\r\n                        return (\r\n                            <HeadingTag key={block.id} style={style} className=\"heading-block\">\r\n                                {block.content}\r\n                            </HeadingTag>\r\n                        );\r\n                    }\r\n\r\n                    // Изображение\r\n                    if (block.type === 'image') {\r\n                        const imageStyle = {\r\n                            borderRadius: block.formatting?.useBorderRadius ? `${block.formatting?.borderRadius || 0}px` : 0,\r\n                            border: block.formatting?.useBorder\r\n                                ? `${block.formatting?.borderWidth || 1}px ${block.formatting?.borderStyle || 'solid'} ${block.formatting?.borderColor || '#cccccc'}`\r\n                                : 'none'\r\n                        };\r\n\r\n                        return (\r\n                            <div\r\n                                key={block.id}\r\n                                className=\"image-block\"\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: block.formatting?.alignment === 'left' ? 'flex-start' :\r\n                                        block.formatting?.alignment === 'right' ? 'flex-end' : 'center',\r\n                                    marginTop: block.formatting?.useMarginTop ? `${block.formatting?.marginTop || 0}px` : 0,\r\n                                    marginBottom: block.formatting?.useMarginBottom ? `${block.formatting?.marginBottom || 0}px` : 0\r\n                                }}\r\n                            >\r\n                                <div className=\"image-container\" style={{\r\n                                    maxWidth: block.formatting?.useResize ? `${block.formatting?.size || 100}%` : '100%',\r\n                                    width: block.formatting?.useResize ? `${block.formatting?.size || 100}%` : '100%',\r\n                                }}>\r\n                                    <img\r\n                                        src={getImageSrc(block.content)}\r\n                                        alt={block.data?.alt || ''}\r\n                                        style={imageStyle}\r\n                                        className=\"post-image\"\r\n                                    />\r\n\r\n                                    {block.formatting?.showAlt && block.data?.alt && (\r\n                                        <div className=\"image-caption\">\r\n                                            {block.data.alt}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    // Разделитель\r\n                    if (block.type === 'divider') {\r\n                        return (\r\n                            <div key={block.id} className=\"divider-block\">\r\n                                <hr />\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PostView);","import { IoEyeSharp, IoSave } from \"react-icons/io5\";\nimport { MdEdit } from \"react-icons/md\";\nimport { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport { RiDeleteBin7Fill } from \"react-icons/ri\";\nimport { memo } from \"react\";\n\nconst PostsNav = ({\n    mode,\n    viewMode,\n    onToggleMode,\n    isCreateMode,\n    isAuthor,\n    isFav,\n    onFav,\n    onSave,\n    isOwnerOrAdmin,\n    onDelete\n}) => {\n    const hasUnsavedChanges = useSelector((state) => state.appSettings.hasUnsavedChanges);\n    const isEditingOrCreating = mode === \"edit\" || isCreateMode;\n\n    return (\n        <div className=\"posteditor-toolbar\">\n            {/* Переключатель предпросмотр/редактирование + редактировать в view */}\n            {(isEditingOrCreating || isOwnerOrAdmin) && (\n                <button\n                    className=\"posteditor-toolbar__btn\"\n                    onClick={onToggleMode}\n                    title={viewMode === \"edit\" ? \"Предпросмотр\" : \"Редактировать\"}\n                    type=\"button\"\n                >\n                    {viewMode === \"edit\" ? <IoEyeSharp size={20} /> : <MdEdit size={20} />}\n                </button>\n            )}\n\n            {/* Кнопка сохранения (только в режиме редактирования) */}\n            {(isEditingOrCreating) && (\n                <button\n                    className=\"posteditor-toolbar__btn\"\n                    onClick={onSave}\n                    title=\"Сохранить\"\n                    type=\"button\"\n                    disabled={!isCreateMode && !hasUnsavedChanges}\n                >\n                    <IoSave size={20} />\n                </button>\n            )}\n\n            {/* Кнопка удаления если не create и пользователь владелец или админ */}\n            {!isCreateMode && (isOwnerOrAdmin || mode === \"edit\") && onDelete && (\n                <button\n                    className=\"posteditor-toolbar__btn\"\n                    onClick={onDelete}\n                    title=\"Удалить пост\"\n                    type=\"button\"\n                    disabled={!isOwnerOrAdmin}\n                >\n                    <RiDeleteBin7Fill size={20} />\n                </button>\n            )}\n\n            {/* Кнопка избранного если пользователь авторизован и пост существует (postId) */}\n            {!isCreateMode && mode === \"view\" && onFav && !isAuthor && (\n                <button\n                    className=\"posteditor-toolbar__btn\"\n                    onClick={onFav}\n                    title={isFav ? \"Удалить из избранного\" : \"Добавить в избранное\"}\n                    type=\"button\"\n                >\n                    {isFav ? <FaBookmark size={20} /> : <FaRegBookmark size={20} />}\n                </button>\n            )}\n\n            {hasUnsavedChanges && (\n                <span className=\"posteditor-toolbar__unsaved\">\n                    Есть несохраненные изменения\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default memo(PostsNav);","import React, { memo, useEffect, useRef } from \"react\";\r\nimport './PostsItemPage.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport PostEditor from \"../../../components/Editor/PostEditor\";\r\nimport PostView from \"../../../components/Editor/PostView\";\r\nimport PostsNav from \"../../../components/Post/PostsNav\";\r\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from \"../../../components/common/LoadingSpinner/LoadingSpinner\";\r\nimport { setUnsavedChanges } from \"../../../redux/reducers/appSettings/appSettingsSlice\"\r\nimport {\r\n    clearPostState,\r\n    deletePost,\r\n    fetchPost,\r\n    mergePostData,\r\n    savePost,\r\n    setPostData,\r\n    updatePostData,\r\n} from \"../../../redux/reducers/postsData/postsDataSlice\";\r\nimport { clearTempImages } from \"../../../utils/db\";\r\nimport { addFavorite, removeFavorite } from \"../../../redux/reducers/postsData/favoritesThunks\";\r\nimport SafeNavigate from \"../../../components/routes/SafeNavigate\";\r\n\r\nconst SITE_TITLE = import.meta.env.VITE_SITE_NAME;\r\n\r\nconst PostsItemPage = ({ mode: initialMode }) => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { user, isAuth, isAdmin, userFavorites} = useSelector(state => state.userData);\r\n    const post = useSelector(state => state.postsData.postData);\r\n    const statusSend = useSelector(state => state.postsData.statusSend);\r\n    const error = useSelector(state => state.postsData.error);\r\n    const statusGet = useSelector(state => state.postsData.statusGet);\r\n\r\n    const [localMode, setLocalMode] = useState(initialMode === 'view' ? 'view' : 'edit');\r\n    const [isClearing, setIsClearing] = useState(true);\r\n    const [editorData, setEditorData] = useState(null);\r\n\r\n    const isCreateMode = initialMode === \"create\";\r\n    const isOwnerOrAdmin = isAdmin || post?.meta?.author === user;\r\n    const isAuthor = post?.meta?.author === user;\r\n    const postRef = useRef();\r\n\r\n    const isFav = userFavorites?.includes(Number(id));\r\n\r\n    useEffect(() => {\r\n        if (initialMode === \"create\") {\r\n            setIsClearing(true);\r\n            clearTempImages().then();\r\n        }\r\n    }, [initialMode]);\r\n\r\n    useEffect(() => {\r\n        if (isClearing && isCreateMode && Object.keys(post).length > 0) {\r\n            setIsClearing(true);\r\n            dispatch(clearPostState());\r\n        } else {\r\n            //setIsClearing(false);\r\n        }\r\n    }, [initialMode, post, dispatch, isCreateMode]);\r\n\r\n    useEffect(() => {\r\n        if (isClearing && Object.keys(post).length === 0) {\r\n            setIsClearing(false);\r\n        }\r\n    }, [post, isClearing]);\r\n\r\n    // Загрузка поста при монтировании\r\n    useEffect(() => {\r\n        if (!isCreateMode && id && id !== String(post?.meta?.id)) {\r\n            dispatch(clearPostState());\r\n            dispatch(fetchPost(id));\r\n        }\r\n        return () => {};\r\n    }, [id, isCreateMode, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (statusGet === \"error\") {\r\n            dispatch(clearPostState());\r\n            navigate(`/error?code=404&message=Пост не найден`);\r\n        }\r\n    }, [statusGet, error, navigate]);\r\n\r\n    usePageTitle(\r\n        isCreateMode\r\n            ? (localMode === \"edit\"\r\n                ? `Новая статья | ${SITE_TITLE}`\r\n                : `Предпросмотр новой статьи | ${SITE_TITLE}`)\r\n            : initialMode === \"view\" && post?.meta?.title\r\n                ? `${post?.meta?.title} | ${SITE_TITLE}`\r\n                : localMode === \"edit\"\r\n                        ? `Редактирование статьи #${id} | ${SITE_TITLE}`\r\n                        : `Предпросмотр статьи #${id} | ${SITE_TITLE}`\r\n    );\r\n\r\n    if ((initialMode === \"edit\" || initialMode === \"view\") && !/^\\d+$/.test(id)) {\r\n        return <SafeNavigate to=\"/error\" replace />\r\n    }\r\n\r\n    if (statusGet === \"error\" && !post?.meta) {\r\n        return <SafeNavigate to=\"/error?code=404&message=Пост не найден\" replace />;\r\n    }\r\n\r\n    if (statusSend === \"loading\" || statusGet === \"loading\" || (!isCreateMode && !post?.meta)  || (isCreateMode && isClearing)) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (isCreateMode || initialMode === \"edit\") {\r\n            const updatedPost = postRef.current?.getContent?.();\r\n            if (updatedPost) {\r\n                setEditorData(updatedPost);\r\n                isCreateMode ? dispatch(setPostData(updatedPost)) : dispatch(updatePostData(updatedPost));\r\n                setLocalMode('view');\r\n                return;\r\n            }\r\n            if (localMode === \"view\") setLocalMode( \"edit\");\r\n        } else if (initialMode === \"view\" && isOwnerOrAdmin) {\r\n            navigate(`/posts/edit/${id}`);\r\n        }\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            const postData = postRef?.current?.getContent() || editorData;\r\n\r\n            if (postData) {\r\n                dispatch(mergePostData(postData));\r\n\r\n                await dispatch(savePost({\r\n                    isNew: isCreateMode\r\n                })).unwrap();\r\n\r\n                dispatch(setUnsavedChanges(false));\r\n                navigate(\"/posts/favorites\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка сохранения:\", error);\r\n\r\n            if (error.message.includes(\"IMAGE_UPLOAD_FAILED\")) {\r\n                const blockId = error.message.split(\":\")[1];\r\n                alert(`Ошибка загрузки изображения для блока ${blockId}. Попробуйте снова.`);\r\n            } else {\r\n                alert(\"Ошибка сохранения поста. Попробуйте снова.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        if (window.confirm(\"Вы уверены, что хотите удалить этот пост?\")) {\r\n            try {\r\n                await dispatch(deletePost(id)).unwrap();\r\n                dispatch(setUnsavedChanges(false));\r\n                navigate(\"/posts/favorites\");\r\n            } catch (error) {\r\n                console.error(\"Ошибка удаления:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFavorite = async () => {\r\n        try {\r\n            if (isFav) {\r\n                await dispatch(removeFavorite({ userId: user.id, postId: id })).unwrap();\r\n            } else {\r\n                await dispatch(addFavorite({ userId: user.id, postId: id })).unwrap();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка избранного:\", error);\r\n        }\r\n    }\r\n\r\n    const handleOnChange = () => {\r\n        dispatch(setUnsavedChanges(true));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { initialMode !== 'view' && (\r\n                <h1 className=\"postsitem__title\">\r\n                    {isCreateMode\r\n                        ? (localMode === \"edit\")\r\n                            ? \"Новая статья\"\r\n                            : \"Предпросмотр новой статьи\"\r\n                        : localMode === \"edit\"\r\n                            ? `Редактирование статьи #${id}`\r\n                            : `Предпросмотр статьи #${id}`\r\n                    }\r\n                </h1>\r\n            )}\r\n\r\n            {isAuth && (\r\n                <PostsNav\r\n                    mode={initialMode}\r\n                    viewMode={localMode}\r\n                    onToggleMode={toggleMode}\r\n                    isCreateMode={isCreateMode}\r\n                    isOwnerOrAdmin={isOwnerOrAdmin}\r\n                    isAuthor={isAuthor}\r\n                    isFav={isFav}\r\n                    onSave={handleSave}\r\n                    onFav={!isCreateMode ? () => handleFavorite() : null}\r\n                    onDelete={!isCreateMode && isOwnerOrAdmin ? handleDelete : null}\r\n                />\r\n            )}\r\n\r\n            {error && (\r\n                <div className=\"postsitem__error\">\r\n                    {error}\r\n                </div>\r\n            )}\r\n\r\n            {localMode === \"view\" ? (\r\n                <PostView\r\n                    meta={post?.meta}\r\n                    content={post?.content}\r\n                />\r\n            ) : (\r\n                <PostEditor\r\n                    initState={post}\r\n                    onChange={handleOnChange}\r\n                    ref={postRef}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PostsItemPage);","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logoutUser } from \"../../../redux/reducers/userData/userDataSlice\";\r\nimport SafeNavigate from \"../../../components/routes/SafeNavigate\";\r\n\r\nconst AuthLogout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(logoutUser());\r\n    }, [dispatch]);\r\n\r\n    return <SafeNavigate to=\"/\"/>;\r\n};\r\n\r\nexport default AuthLogout;","import \"./DevelopedPage.css\";\r\nimport { usePageTitle } from \"../../../hooks/usePageTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst data = {\r\n    pageTitle: 'Раздел в разработке',\r\n    title: 'Данный раздел находится на стадии разработки',\r\n    description: 'Мы прикладываем все усилия чтобы порадовать Вас новыми разделами =)'\r\n};\r\n\r\nconst DevelopedPage = () => {\r\n    const userName = useSelector(state => state.userData.user);\r\n    const isAdmin = useSelector(state => state.userData.isAdmin);\r\n\r\n    usePageTitle(`${data.pageTitle} | ${import.meta.env.VITE_SITE_NAME || \"Messaria\"}`);\r\n\r\n    return (\r\n        <div className=\"dev-page__box\" role=\"alert\">\r\n            <h1 className=\"visually-hidden\">{data.title}</h1>\r\n\r\n            <div className=\"dev-page\">\r\n                <div className=\"dev-page__text-box\">\r\n                    <h2 className=\"dev-page__code\">{data.title}</h2>\r\n\r\n                    <p className=\"dev-page__description\">\r\n                        {data.description}\r\n                    </p>\r\n\r\n                    <p className=\"dev-page__description\">\r\n                        {`Но можем по секрету сказать:`}\r\n                    </p>\r\n\r\n                    <p className=\"dev-page__description\">\r\n                        {`Твой ник - ${userName} (статус: ${isAdmin ? 'Админ' : \"Пользователь\"})`}\r\n                    </p>\r\n\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"dev-page__button\"\r\n                        aria-label=\"Вернуться на главную страницу\"\r\n                    >\r\n                        На главную\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DevelopedPage;","import React, { useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getApi } from '../../../utils/getApi';\r\nimport { API_ROUTES } from '../../../constants/apiRoutes';\r\nimport LoadingSpinner from '../../../components/common/LoadingSpinner/LoadingSpinner';\r\nimport './PostsSearchPage.css';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst PostsSearchPage = () => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [lastSearch, setLastSearch] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch = useCallback(async () => {\r\n        if (!searchQuery.trim()) {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        setError('');\r\n        setLastSearch(searchQuery);\r\n\r\n        try {\r\n            const response = await getApi(API_ROUTES.posts.search, {\r\n                q: searchQuery,\r\n                offset: 0,\r\n                limit: 20\r\n            });\r\n\r\n            setSearchResults(response.data);\r\n        } catch (err) {\r\n            setError('Ошибка при выполнении поиска');\r\n            console.error('Search error:', err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [searchQuery]);\r\n\r\n    // Подсветка совпадений\r\n    const highlightMatches = useCallback((text) => {\r\n        if (!text || !lastSearch) return { __html: text || '' };\r\n\r\n        const words = lastSearch.split(/\\s+/)\r\n        .filter(w => w.length > 1)\r\n        .map(w => escapeRegExp(w));\r\n\r\n        if (words.length === 0) return { __html: text };\r\n\r\n        let highlighted = text;\r\n\r\n        words.forEach(word => {\r\n            const regex = new RegExp(`(${word})`, 'gi');\r\n            highlighted = highlighted.replace(regex, '<mark>$1</mark>');\r\n        });\r\n\r\n        return { __html: highlighted };\r\n    }, [lastSearch]);\r\n\r\n    const escapeRegExp = (string) => {\r\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"posts-search-page\">\r\n            <Helmet>\r\n                <title>Поиск по постам | Messarea</title>\r\n                <meta name=\"description\" content=\"Поисковик\" />\r\n            </Helmet>\r\n            <div className=\"posts-search-page__header\">\r\n                <h1 className=\"posts-search-page__title\">Поиск по постам</h1>\r\n\r\n                <div className=\"posts-search-page__search-bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        onKeyDown={handleKeyDown}\r\n                        placeholder=\"Введите ключевые слова...\"\r\n                        className=\"posts-search-page__search-input\"\r\n                    />\r\n                    <button\r\n                        onClick={handleSearch}\r\n                        className=\"posts-search-page__search-button\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? 'Поиск...' : 'Найти'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {error && <div className=\"posts-search-page__error\">{error}</div>}\r\n\r\n            <div className=\"posts-search-page__results\">\r\n                {searchResults.map(post => (\r\n                    <div\r\n                        key={post.id}\r\n                        className=\"posts-search-page__result-item\"\r\n                        onClick={() => navigate(`/posts/view/${post.id}`)}\r\n                    >\r\n                        <h2 className=\"posts-search-page__result-title\">\r\n                            {post.title}\r\n                        </h2>\r\n\r\n                        <div\r\n                            className=\"posts-search-page__result-fragment\"\r\n                            dangerouslySetInnerHTML={highlightMatches(post.textFragment)}\r\n                        />\r\n\r\n                        <div className=\"posts-search-page__result-meta\">\r\n                            <span>Автор: {post.author_username}</span>\r\n                            <span>Дата: {new Date(post.created_at).toLocaleDateString()}</span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {isLoading && <LoadingSpinner />}\r\n\r\n            {!isLoading && searchResults.length === 0 && lastSearch && (\r\n                <div className=\"posts-search-page__empty\">\r\n                    По запросу \"{lastSearch}\" ничего не найдено\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsSearchPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <Helmet>\r\n                <title>Главная страница | Messarea</title>\r\n                <meta name=\"description\" content=\"Главная страница\" />\r\n            </Helmet>\r\n            {/* Герой-секция */}\r\n            <section className=\"hero-section\">\r\n                <div className=\"hero-content\">\r\n                    <h1>Делитесь смыслами, а не просто словами</h1>\r\n                    <p>Создавайте посты из гибких блоков — добавляйте фото, текст и заголовки.</p>\r\n                    <p>Находите вдохновение в работах других и собирайте свою коллекцию идей.</p>\r\n                    <div className=\"hero-actions\">\r\n                        <Link to=\"/posts/create\" className=\"btn-primary\">Создать пост</Link>\r\n                        <Link to=\"/feed\" className=\"btn-secondary\">Найти вдохновение</Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Описание платформы */}\r\n            <section className=\"description-section\">\r\n                <div className=\"description-content\">\r\n                    <h2>Конструктор ваших мыслей</h2>\r\n                    <p>Наш сервис превращает создание постов в творческий процесс:</p>\r\n                    <ul className=\"features-list\">\r\n                        <li>Комбинируйте блоки как пазл</li>\r\n                        <li>Сохраняйте понравившиеся работы в избранное</li>\r\n                        <li>Открывайте новые темы через умный поиск</li>\r\n                    </ul>\r\n                    <p className=\"tagline\">Пишите так, как думаете — без ограничений шаблонов.</p>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Призыв к действию */}\r\n            <section className=\"cta-section\">\r\n                <div className=\"cta-content\">\r\n                    <h2>Ваша история ждёт читателей</h2>\r\n                    <p>Начните прямо сейчас — первый пост займёт меньше 5 минут.</p>\r\n                    <p>Делитесь опытом, находите единомышленников, собирайте обратную связь.</p>\r\n                    <p className=\"quote\">\"Лучший способ научиться — начать делать\" (с)</p>\r\n                    <Link to=\"/posts/create\" className=\"btn-primary\">Создать первый пост</Link>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Футер */}\r\n            <footer className=\"main-footer\">\r\n                <p className=\"footer-tagline\">Место, где мысли обретают форму</p>\r\n                <p>© 2025 Конструктор постов. Все права на идеи принадлежат их авторам.</p>\r\n                <p className=\"footer-privacy\">\"Мы не храним ваши данные — мы помогаем вам их выразить\"</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import PageAuth from \"../pages/app/auth/AuthPage\";\nimport SafeNavigate from \"../components/routes/SafeNavigate\";\nimport { Outlet } from \"react-router-dom\";\nimport ErrorPage from \"../pages/app/error/ErrorPage\";\nimport { refreshToken } from \"../redux/reducers/userData/userDataSlice\";\nimport AppLayout from \"../layouts/AppLayout\";\nimport PostsListPage from \"../pages/app/posts/PostsListPage\";\nimport FeedPage from \"../pages/app/feed/FeedPage\";\nimport PostsLayout from \"../layouts/PostsLayout\";\nimport UserLayout from \"../layouts/UserLayout\";\nimport AuthLayout from \"../layouts/AuthLayout\";\nimport PostsItemPage from \"../pages/app/posts/PostsItemPage\";\nimport AuthLogout from \"../pages/app/auth/AuthLogout\";\nimport DevelopedPage from \"../pages/app/developed/DevelopedPage\";\nimport { fetchFeedPosts, fetchPost } from \"../redux/reducers/postsData/postsDataSlice\";\nimport PostsSearchPage from \"../pages/app/posts/PostsSearchPage\";\nimport HomePage from \"../pages/app/home/HomePage\";\n\nexport const routeConfig = [\n    {\n        path: \"/\",\n        element: <Outlet />,\n        children: [\n            // App\n            {\n                element: <AppLayout />,\n                ssrLoadData: () => refreshToken(), // Thunk\n                children: [\n                    // Home\n                    {\n                        index: true,\n                        element: <HomePage />,\n                    },\n                    // Auth\n                    {\n                        path: \"auth\",\n                        element: <AuthLayout />,\n                        children: [\n                            // Sign-in\n                            {\n                                path: \"sign-in\",\n                                element: <PageAuth mode=\"login\" />,\n                            },\n                            // Sign-up\n                            {\n                                path: \"sign-up\",\n                                element: <PageAuth mode=\"register\" />,\n                            },\n                            // Verified\n                            {\n                                path: \"verified\",\n                                element: <PageAuth mode=\"verified\" />,\n                            },\n                            // Logout\n                            {\n                                path: \"logout\",\n                                element: <AuthLogout />,\n                            },\n                            // Ошибка пути\n                            {\n                                path: \"*\",\n                                element: (\n                                    <SafeNavigate\n                                        to=\"/auth/sign-in\"\n                                        replace\n                                    />\n                                ),\n                            },\n                        ],\n                    },\n                    // Feed\n                    {\n                        path: \"feed\",\n                        element: <FeedPage />,\n                        ssrLoadData: () => fetchFeedPosts({ page: 1 }), // Thunk\n                    },\n                    // Posts\n                    {\n                        path: \"posts\",\n                        element: <PostsLayout />,\n                        children: [\n                            // Posts - search\n                            {\n                                path: \"search\",\n                                element: <PostsSearchPage />,\n                            },\n                            // Posts - favorites\n                            {\n                                path: \"favorites\",\n                                element: <PostsListPage />,\n                                private: true,\n                                privateRedirectTo: \"/auth/sign-in\",\n                            },\n\n                            // Posts - view\n                            {\n                                path: \"view/:id\",\n                                element: <PostsItemPage mode=\"view\" />,\n                                ssrLoadData: (params) => fetchPost(params.id), // Thunk\n                            },\n                            // Posts - create\n                            {\n                                path: \"create\",\n                                element: <PostsItemPage mode=\"create\" />,\n                                private: true,\n                                privateRedirectTo: \"/auth/sign-in\",\n                            },\n                            // Posts - edit\n                            {\n                                path: \"edit/:id\",\n                                element: <PostsItemPage mode=\"edit\" />,\n                                ssrLoadData: (params) => fetchPost(params.id), // Thunk\n                                private: true,\n                                privateRedirectTo: \"/auth/sign-in\",\n                            },\n                            // Ошибка пути\n                            {\n                                path: \"*\",\n                                element: (\n                                    <SafeNavigate\n                                        to=\"/posts/search\"\n                                        replace\n                                    />\n                                ),\n                            },\n                        ],\n                    },\n                    // User\n                    {\n                        path: \"user\",\n                        element: <UserLayout />,\n                        private: true,\n                        privateRedirectTo: \"/auth/sign-in\",\n                        children: [\n                            // Settings\n                            {\n                                path: \"settings\",\n                                element: <DevelopedPage />,\n                            },\n                            // Ошибка пути\n                            {\n                                path: \"*\",\n                                element: (\n                                    <SafeNavigate\n                                        to=\"/user/settings\"\n                                        replace\n                                    />\n                                ),\n                            },\n                        ],\n                    },\n                    // Error\n                    {\n                        path: \"error\",\n                        element: <ErrorPage />,\n                    },\n                ],\n            },\n            // Ошибка пути\n            {\n                path: \"*\",\n                element: (\n                    <SafeNavigate\n                        to=\"/error\"\n                        replace\n                    />\n                ),\n            },\n        ],\n    },\n];","import { StaticRouter } from \"react-router-dom/server\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"./redux/store\";\nimport App from \"./App\";\nimport { matchRoutes } from \"react-router-dom\";\nimport { routeConfig } from \"./routes/routes\";\nimport { createContext, useContext } from \"react\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\nexport async function createApp(req, context) {\n    const store = createStore({}, req);\n    const helmetContext = {};\n\n    async function loadDataForMatchedRoutes(url, store) {\n        const matchedRoutes = matchRoutes(routeConfig, url);\n        console.log(\"Выполняется SSR - \",url);\n\n        // вызов ssrLoadData из маршрутов\n        const promisesFromRoutes = matchedRoutes\n        .filter(({ route }) => route.ssrLoadData)\n        .map(({ route, params }) => {\n            return store.dispatch(route.ssrLoadData(params))\n            .catch((error) => {\n                console.error(\"Ошибка при загрузке данных для SSR:\", error);\n                return Promise.resolve();\n            });\n        });\n\n        // вызов fetchData из компонентов\n        const promisesFromComponents = [];\n\n        matchedRoutes.forEach(({ route, params }) => {\n            const Component = route.element?.type;\n            if (Component && Component.fetchData) {\n                promisesFromComponents.push(\n                    Component.fetchData(store, params)\n                    .catch((error) => {\n                        console.error(\"Ошибка при загрузке данных компонента:\", error);\n                        return Promise.resolve();\n                    })\n                );\n            }\n        });\n\n        await Promise.all([...promisesFromRoutes, ...promisesFromComponents]);\n    }\n    await loadDataForMatchedRoutes(req.originalUrl, store);\n\n    context.preloadedState = store.getState();\n\n    context.helmetContext = helmetContext;\n\n    return (\n        <SSRContext.Provider value={context}>\n            <HelmetProvider context={helmetContext}>\n                <Provider store={store}>\n                    <StaticRouter location={req.originalUrl} context={context}>\n                        <App />\n                    </StaticRouter>\n                </Provider>\n            </HelmetProvider>\n        </SSRContext.Provider>\n    );\n}\n\nexport const SSRContext = createContext(null);\n\nexport function useSSRContext() {\n    return useContext(SSRContext);\n}","import { Navigate } from \"react-router-dom\";\nimport { useSSRContext } from \"../../entry-server\";\n\nexport default function SafeNavigate({ to }) {\n    const context = useSSRContext()\n    if (typeof window === \"undefined\") {\n        context.url = to;\n        return null;\n    }\n    return <Navigate to={to} replace />;\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport SafeNavigate from '../components/routes/SafeNavigate';\r\nimport LoadingSpinner from \"../components/common/LoadingSpinner/LoadingSpinner\";\r\nimport { useEffect } from \"react\";\r\nimport { checkToken } from \"../redux/reducers/userData/userDataSlice\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, accessToken, authCheckStatus } = useSelector(state => state.userData);\r\n\r\n    useEffect(() => {\r\n        if (accessToken) {\r\n            dispatch(checkToken());\r\n        }\r\n    }, [dispatch, accessToken]);\r\n\r\n    if (authCheckStatus === 'idle' || authCheckStatus === 'pending') {\r\n        return <LoadingSpinner fullScreen />;\r\n    }\r\n\r\n    if (authCheckStatus === 'failed' || !isAuth) {\r\n        return <SafeNavigate to=\"/auth/sign-in\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;","import { Route, Routes } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport { routeConfig } from \"./routes\";\r\n\r\nfunction renderRoutes(routes) {\r\n    return routes.map((route, idx) => {\r\n        const element = route.private ? (\r\n            <ProtectedRoute redirectTo={route.privateRedirectTo}>\r\n                {route.element}\r\n            </ProtectedRoute>\r\n        ) : (\r\n            route.element\r\n        );\r\n\r\n        return (\r\n            <Route key={idx} path={route.path} element={element} index={route.index}>\r\n                {route.children && renderRoutes(route.children)}\r\n            </Route>\r\n        );\r\n    });\r\n}\r\n\r\nexport default function PagesRouter() {\r\n    return <Routes>{renderRoutes(routeConfig)}</Routes>;\r\n}","import \"./App.css\";\nimport PagesRouter from \"./routes/PagesRouter\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <div className=\"box\">\n                <PagesRouter/>\n            </div>\n        </div>\n    );\n}\n\n// App.fetchData = (store, params) => {\n//     // вызываем thunk через dispatch и возвращаем Promise\n//     //return store.dispatch(loginUser());\n// };\n\nexport default App;","import { createRoot, hydrateRoot } from \"react-dom/client\";\nimport \"./main.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from './redux/store';\nimport { HelmetProvider } from \"react-helmet-async\";\n\nconst init100vh = () => {\n\tconst setHeight = () => {\n\t\tconst vh = window.innerHeight;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t};\n\tsetHeight();\n\twindow.addEventListener('resize', setHeight);\n};\n\nconst preloadedState = window.__PRELOADED_STATE__;\ndelete window.__PRELOADED_STATE__;\nconst store = createStore(preloadedState);\n\nif (typeof window !== 'undefined') {\n\tinit100vh();\n}\n\nconst RootApp = () => (\n\t<HelmetProvider>\n\t<Provider store={store}>\n\t\t<BrowserRouter future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n\t</HelmetProvider>\n);\n\n// Рендер в зависимости от режима (Vite или SSR)\nif (import.meta.env.MODE === 'development') {\n\tcreateRoot(document.getElementById('root')).render(<RootApp />);\n} else {\n\thydrateRoot(document.getElementById('root'), <RootApp />);\n}"],"names":["isServer","API_BASE_URL","define_process_env_default","PROXY_API_PATH","data","setErrMsg","initialState","store","preloadedState","userDataSlice","appSettingsSlice","postsDataSlice","jsx","useState","useEffect","jsxs","Fragment","memo","AuthForm","AppNavbar","forwardRef","useRef","useCallback","PostCard","useImperativeHandle","DEFAULT_FORMATTING","formatButtons","alignmentButtons","fontSizeMap","useMemo","TextBlock","HeadingBlock","ImageBlock","AddMenu","BlockComponent","MetaBlock","ListBlock","_a","_b","error","PostsNav","PostView","PostEditor","AppLayout","PostsListPage","PostsItemPage","createContext","useContext","Provider","hydrateRoot"],"mappings":"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"}